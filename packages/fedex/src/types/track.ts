/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/track/v1/associatedshipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Track Multiple Piece Shipment
         * @description This endpoint returns tracking information for multiplee piece shipments, Group MPS, or an outbounddd shipment which is linked to a return shipment.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
         */
        post: operations["Track Multiple Piece Shipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/track/v1/notifications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Send Notification
         * @description This endpoint helps you setup up, customize the tracking event notifications to be received for a shipment.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
         */
        post: operations["19f112535f47e237486334074740bb66"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/track/v1/referencenumbers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Track by References
         * @description This endpoint returns tracking information based on alternate references other than Tracking Number such as Customer reference numbers, etc.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
         */
        post: operations["Track by References"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/track/v1/tcn": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Track by Tracking Control Number
         * @description Use this endpoint to return tracking information based on a Tracking Control Number.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
         */
        post: operations["f1f9080e8452d9ac903f562a2d2626d0"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/track/v1/trackingdocuments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Track Document
         * @description This endpoint helps you to request a letter that includes the recipient's signature as a proof of delivery.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
         */
        post: operations["TrackingDocuments"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/track/v1/trackingnumbers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Track by Tracking Number
         * @description This endpoint provides customers package tracking information based on a tracking number for various shipping services.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
         */
        post: operations["Track by Tracking Number"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * @description The request elements for Tracking by associated shipment.
         * @example {
         *       "includeDetailedScans": true,
         *       "associatedType": "STANDARD_MPS",
         *       "masterTrackingNumberInfo": {
         *         "shipDateEnd": "2018-11-03",
         *         "shipDateBegin": "2018-11-01",
         *         "trackingNumberInfo": {
         *           "trackingNumberUniqueId": "245822~123456789012~FDEG",
         *           "carrierCode": "FDXE",
         *           "trackingNumber": "858488600850"
         *         }
         *       },
         *       "pagingDetails": {
         *         "resultsPerPage": 56,
         *         "pagingToken": "38903279038"
         *       }
         *     }
         */
        Full_Schema_Multiple_Piece_Shipment: {
            /**
             * @description Indicates if detailed scans are requested or not. <br>Valid values are True, or False.
             * @example true
             */
            includeDetailedScans?: boolean;
            masterTrackingNumberInfo: components["schemas"]["MasterTrackingInfo"];
            /**
             * @description The associated shipment type, such as MPS, Group MPS, or an outbound shipment which is linked to a return shipment.<br>Example: STANDARD_MPS<br>STANDARD_MPS: Single shipment with multiple packages, where tracking number got assigned to all pieces, one tracking number is treated as master tracking number while others are child tracking numbers.<br>Group MPS: Behavior is just like standard MPS but it’s created differently. The shipper must be enrolled for this by a particular reference type like ‘PO’ (purchase order).Then any package order create on the same day going to the same place that has the reference number will get grouped into GMPS relationships.<br>OUTBOUND_LINK_TO_RETURN: is an RTRN relationship.Same concept as an MPS.the OUTBOUND_LINK_TO_RETURN is the Master outbound package tracking number, that when tracked with this indicator you can get all the child return pieces.
             * @example STANDARD_MPS
             * @enum {string}
             */
            associatedType: "OUTBOUND_LINK_TO_RETURN" | "STANDARD_MPS" | "GROUP_MPS";
            pagingDetails?: components["schemas"]["PagingDetails"];
        };
        /** @description The detailed master tracking details for the shipment to be tracked. */
        MasterTrackingInfo: components["schemas"]["TrackingInfo"];
        /** @description Tracking details for the shipment to be tracked */
        TrackingInfo: {
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number within a specific date range. <br>Format: YYYY-MM-DD<br> Example: 2020-03-29
             * @example 2020-03-29
             */
            shipDateBegin?: string;
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number within a specific date range. <br>Format: YYYY-MM-DD<br> Example: 2020-04-01
             * @example 2020-04-01
             */
            shipDateEnd?: string;
            trackingNumberInfo: components["schemas"]["TrackingNumberInfo"];
        };
        /** @description Information uniquely identifying a shipment such as Tracking number, ShipDate, and Tracking number uniqueId. */
        TrackingNumberInfo: {
            /**
             * @description This is a Tracking number for FedEx packages used for tracking a single package or group of packages. <br> Example: 128667043726<br><a onclick='loadDocReference("mocktrackingnumbersforfedexexpressandfedexground")'>Click here to see Mock Tracking Numbers.</a>
             * @example 128667043726
             */
            trackingNumber: string;
            /**
             * @description This is a placeholder to provide the FedEx operating company (transportation) code used for package delivery. <br> Example: FDXE
             * @example FDXE
             * @enum {string}
             */
            carrierCode?: "FDXE" | "FDXG" | "FXSP" | "FXFR" | "FDXC" | "FXCC" | "FEDEX_CARGO" | "FEDEX_CUSTOM_CRITICAL" | "FEDEX_EXPRESS" | "FEDEX_FREIGHT" | "FEDEX_GROUND" | "FEDEX_OFFICE" | "FEDEX_KINKOS" | "FX" | "FDFR" | "FDEG" | "FXK" | "FDC" | "FDCC";
            /**
             * @description Unique identifier used to distinguish duplicate FedEx tracking numbers. This value will be set by FedEx systems. <br> Example: 245822\~123456789012\~FDEG
             * @example 245822~123456789012~FDEG
             */
            trackingNumberUniqueId?: string;
        };
        /** @description The details about how to retrieve the subsequent pages when there is more than one page in the TrackReply. */
        PagingDetails: components["schemas"]["PagingDetails_2"];
        /** @description Specify the details about how to retrieve the subsequent pages when there is more than one page in the TrackReply. */
        PagingDetails_2: {
            /**
             * Format: int32
             * @description <p>Use this element to specify the number of Tracking results to be returned in the Tracking response. Use this and pagingToken elements, to retrieve remaining set of the track results.</p><p><u>Here is how the paging works:</u><br>For your first track request, send element <i>resultsPerPage</i>, with a number XX (5) and the response will return XX (5) results along with element <i>pagingToken</i> and <i>moreDataAvailable</i> = true or false based on the number of tracking results.</p><ul><li>If <i>moreDataAvailable</i> = false, then there are no more track results can be retrieved further.</li><li>If <i>moreDataAvailable</i> = True, then it means there are more track results and hence send the next tracking request with <i>resultsPerPage</i> = YY (4) and <i>pagingToken</i> = XX + 1 (5)  from Track Response element <i>pagingToken</i>. This can be continued until the <i>moreDataAvailable</i> becomes false or there are no more tracking results.</li></ul> <br> Example: 10
             * @example 56
             */
            resultsPerPage?: number;
            /**
             * @description <p>Use this element to specify the starting sequence for the next set of tracking results. This element can be specified if paging is used in the initial tracking request and you need to request next set of track results.</p><p><i>Note:  This element not to be used in the initial tracking request and only should be used in the subsequent track requests when there is paging (element </i>resultsPerPage <i>is specified) indicated.</i></p> <br> Example: 1234567890
             * @example 38903279038
             */
            pagingToken?: string;
        };
        /** @description This is a wrapper class for outputVO */
        TrkcResponseVO_Associated: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            output?: components["schemas"]["BaseProcessOutputVO_Associated"];
        };
        BaseProcessOutputVO_Associated: components["schemas"]["TrackingMPSResponse"];
        /** @description The response elements for Tracking by Associated Shipment request. */
        TrackingMPSResponse: {
            /** @description Contains the detailed tracking entry information. */
            completeTrackResults?: components["schemas"]["CompleteTrackResult"][];
            /**
             * @description The cxs alert type, alert code, and alert messages.<br>Example: example: TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             * @example TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             */
            alerts?: components["schemas"]["Alert"][];
        };
        /** @description Detailed and complete track results */
        CompleteTrackResult: {
            /**
             * @description A tracking number to identify a package.<br> Example: 123456789012
             * @example 123456789012
             */
            trackingNumber?: string;
            /** @description An array of detailed tracking information for the requested packages(s). In case of duplicate shipments, multiple track details will be populated. */
            trackResults?: components["schemas"]["TrackResult"][];
        };
        /** @description Contains detailed tracking information for the requested packages(s). In case of duplicates, multiple track details will be populated.  */
        TrackResult: {
            trackingNumberInfo?: components["schemas"]["TrackingNumberInfo_1"];
            additionalTrackingInfo?: components["schemas"]["AdditionalTrackingInfo"];
            distanceToDestination?: components["schemas"]["Distance"];
            /** @description Indicates the consolidation details. */
            consolidationDetail?: components["schemas"]["ConsolidationDetail"][];
            /**
             * @description The associated meter number for your FedEx account number. Maximum of 9 characters. <br> Example: 8468376
             * @example 8468376
             */
            meterNumber?: string;
            returnDetail?: components["schemas"]["ReturnDetail"];
            serviceDetail?: components["schemas"]["ServiceDescriptionDetail"];
            /** @description Location details for the recipient where the package will be or has been delivered. */
            destinationLocation?: components["schemas"]["LocationDetail1"];
            latestStatusDetail?: components["schemas"]["StatusDetail"];
            serviceCommitMessage?: components["schemas"]["ServiceCommitMessage"];
            /** @description Notifications to the end user that provide additional information relevant to the tracked shipment. For example, a notification may indicate that a change in behavior has occurred. */
            informationNotes?: components["schemas"]["InformationNoteDetail"][];
            error?: components["schemas"]["CXSError"];
            /** @description Indicate the special handlings on the package being tracked. Includes Special handlings requested for the package like signature options, Broker select or COD etc.<br><a onclick='loadDocReference("fedexexpressspecialhandlingcodes")'>Click here to see FedEx Express Special Handling Codes.</a> */
            specialHandlings?: components["schemas"]["TrackSpecialHandling"][];
            /** @description The available tracking documents for the shipment being tracked. Available tracking documents includes SPOD and Bill of lading. */
            availableImages?: components["schemas"]["AvailableImagesDetail"][];
            deliveryDetails?: components["schemas"]["DeliveryDetails"];
            /** @description FedEx scan event information for a shipment. Includes the list of events and/or scans applied. */
            scanEvents?: components["schemas"]["ScanEvent"][];
            /** @description Date and time information for the tracked shipment. Date and time information for the tracked shipment includes various type of date time including when the package was shipped, when it is expected to deliver, when it is actually delivered etc. */
            dateAndTimes?: components["schemas"]["TrackingDateAndTime"][];
            packageDetails?: components["schemas"]["PackageDetail"];
            /**
             * @description Classification codes for the goods in package. Goods classification codes required for clearance purpose. <br> Example: goodsClassificationCode
             * @example goodsClassificationCode
             */
            goodsClassificationCode?: string;
            /** @description Location details for the FedEx facility holding package for delivery. Populated only when REDIRECT_TO_HOLD_AT_LOCATION is available as custom delivery options. */
            holdAtLocation?: components["schemas"]["LocationDetail1"];
            /** @description List of delivery options that can be used to customize the delivery of the package. */
            customDeliveryOptions?: components["schemas"]["CustomDeliveryOption"][];
            /** @description The estimated window for time of delivery.  May be periodically updated based on available in-flight shipment information. */
            estimatedDeliveryTimeWindow?: components["schemas"]["TimeWindow"];
            /** @description Piece count information at origin and destination. */
            pieceCounts?: components["schemas"]["PieceCountDetail"][];
            originLocation?: components["schemas"]["OriginLocation"];
            /** @description Contact and address information of recipient. */
            recipientInformation?: components["schemas"]["ContactAndAddress1"];
            /** @description The standard committed window of time by which the package is expected to be delivered. */
            standardTransitTimeWindow?: components["schemas"]["TimeWindow"];
            shipmentDetails?: components["schemas"]["TrackShipmentDetail"];
            reasonDetail?: components["schemas"]["ReasonDetail"];
            /**
             * @description The types of email notifications that are available for the package. <br> Example:ON_DELIVERY
             * @example [
             *       "ON_DELIVERY",
             *       "ON_EXCEPTION"
             *     ]
             */
            availableNotifications?: string[];
            /** @description Contact and address information of shipper. */
            shipperInformation?: components["schemas"]["ContactAndAddress1"];
            /** @description Last updated delivery address for the package. */
            lastUpdatedDestinationAddress?: components["schemas"]["AddressVO1"];
        };
        /** @description Additional Tracking number information like nickname, notes, shipment attributes etc. */
        AdditionalTrackingInfo: {
            /**
             * @description Field which indicates if the current shipment has associated shipments.<br> Example: false
             * @example false
             */
            hasAssociatedShipments?: boolean;
            /**
             * @description Field which holds information about nickname of the shipment. <br> Example: Shipment nickname
             * @example shipment nickname
             */
            nickname?: string;
            /** @description Other related identifiers for this package such as reference numbers, purchase order number etc. Provides identifiers other than tracking number that can be used in order to track the shipment. */
            packageIdentifiers?: components["schemas"]["PackageIdentifier"][];
            /**
             * @description Field which holds customer assigned notes for a package.<br> Example: shipment notes
             * @example shipment notes
             */
            shipmentNotes?: string;
        };
        /** @description The type and value of the package identifier that is to be used to retrieve the tracking information for a package or group of packages. */
        PackageIdentifier: {
            /**
             * @description Indicate the package identifier to identify the package.<br> Example: SHIPPER_REFERENCE
             * @example SHIPPER_REFERENCE
             * @enum {string}
             */
            type?: "BILL_OF_LADING" | "COD_RETURN_TRACKING_NUMBER" | "CUSTOMER_AUTHORIZATION_NUMBER" | "CUSTOMER_REFERENCE" | "DEPARTMENT" | "DOCUMENT_AIRWAY_BILL" | "EXPRESS_ALTERNATE_REFERENCE" | "FEDEX_OFFICE_JOB_ORDER_NUMBER" | "FREE_FORM_REFERENCE" | "GROUND_INTERNATIONAL" | "GROUND_SHIPMENT_ID" | "GROUP_MPS" | "INTERNATIONAL_DISTRIBUTION" | "INVOICE" | "JOB_GLOBAL_TRACKING_NUMBER" | "ORDER_GLOBAL_TRACKING_NUMBER" | "ORDER_TO_PAY_NUMBER" | "OUTBOUND_LINK_TO_RETURN" | "PART_NUMBER" | "PARTNER_CARRIER_NUMBER" | "PURCHASE_ORDER" | "REROUTE_TRACKING_NUMBER" | "RETURN_MATERIALS_AUTHORIZATION" | "RETURNED_TO_SHIPPER_TRACKING_NUMBER" | "SHIPPER_REFERENCE" | "STANDARD_MPS" | "TRACKING_CONTROL_NUMBER" | "TRACKING_NUMBER_OR_DOORTAG" | "TRANSBORDER_DISTRIBUTION" | "TRANSPORTATION_CONTROL_NUMBER" | "VIRTUAL_CONSOLIDATION";
            /**
             * @description Field which holds the value of the identifier used to identify the package. <br>Example: 'ASJFGVAS'
             * @example ASJFGVAS
             */
            value?: string[];
            /**
             * @description Unique identifier used to distinguish duplicate FedEx tracking numbers. This value will be set by FedEx systems. <br> Example: 245822\~123456789012\~FDEG
             * @example 245822~123456789012~FDEG
             */
            trackingNumberUniqueId?: string;
        };
        /** @description Distance remaining to the destination. Only returned for FedEx Custom Critical shipments. */
        Distance: {
            /**
             * @description Field which holds the distance unit type.
             * @example KM
             * @enum {string}
             */
            units?: "KM" | "MI";
            /**
             * Format: double
             * @description Field which holds the value for the distance.<br> Example: 685.78
             * @example 685.7
             */
            value?: number;
        };
        /** @description This is the consolidation details for packages within a shipment identified as CONSOLIDATED. */
        ConsolidationDetail: {
            /**
             * @description The timestamp for the consolidation. <br> Example: 2020-10-13T03:54:44-06:00
             * @example 2020-10-13T03:54:44-06:00
             */
            timeStamp?: string;
            /**
             * @description The identifier for the consolidation. <br> Example: 47936927
             * @example 47936927
             */
            consolidationID?: string;
            /** @description Specifies the reason details for the consolidation event for a package. */
            reasonDetail?: components["schemas"]["ReasonDetail"];
            /**
             * Format: int32
             * @description Specifies the package count for the consolidation. <br> Example: 25
             * @example 25
             */
            packageCount?: number;
            /**
             * @description Specifies the consolidation event type for a package.  A package can be ADDED to, REMOVED from, or EXCLUDED from a consolidation. <br> Example: PACKAGE_ADDED_TO_CONSOLIDATION
             * @example PACKAGE_ADDED_TO_CONSOLIDATION
             */
            eventType?: string;
        };
        /** @description This object contains reason description and type. */
        ReasonDetail: {
            /**
             * @description Field which holds the reason description. <br> Example: Wrong color
             * @example Wrong color
             */
            description?: string;
            /**
             * @description Field which holds the reason type.<br> Example: REJECTED
             * @example REJECTED
             */
            type?: string;
        };
        /** @description Specifies return information related to a return shipment. */
        ReturnDetail: {
            /**
             * @description Name of person authorizing the return, entered by the customer.
             * @example Sammy Smith
             */
            authorizationName?: string;
            /** @description Specifies the return reason details. */
            reasonDetail?: components["schemas"]["ReasonDetail"][];
        };
        /** @description This object contains service description details for the package. */
        ServiceDescriptionDetail: {
            /**
             * @description Field which holds the text description of the service type of this package.<br> Example: FedEx Freight Economy
             * @example FedEx Freight Economy.
             */
            description?: string;
            /**
             * @description Field which holds the abbreviated text description of the service type of this package.<br> Example: FL
             * @example FL
             */
            shortDescription?: string;
            /**
             * @description This is the service type.<br> Example: FEDEX_FREIGHT_ECONOMY<br><a onclick='loadDocReference("servicetypes")'>Click here to see Service Types</a>
             * @example FEDEX_FREIGHT_ECONOMY
             */
            type?: string;
        };
        /** @description Location details for the fedex facility. */
        LocationDetail_1: {
            /**
             * @description Location Identification for facilities identified by an alpha numeric location code. Passing Location Id of the Hold at Location (HAL) address is strongly recommended to ensure packages are delivered to the correct address.<br> Example: SEA
             * @example SEA
             */
            locationId?: string;
            locationContactAndAddress: components["schemas"]["ContactAndAddress_1"];
            /**
             * @description The FedEx Location Type.<br> Example: PICKUP_LOCTION
             * @example PICKUP_LOCATION
             * @enum {string}
             */
            locationType: "FEDEX_AUTHORIZED_SHIP_CENTER" | "FEDEX_OFFICE" | "FEDEX_SELF_SERVICE_LOCATION" | "FEDEX_STAFFED" | "RETAIL_ALLICANCE_LOCATION" | "FEDEX_GROUND_TERMINAL" | "FEDEX_ONSITE";
        };
        /** @description Location Contact And Address. */
        ContactAndAddress_1: {
            contact: components["schemas"]["ContactVO_1"];
            /** @description Required.
             *
             *     Descriptive data for a physical location.  may be used as an actual physical address(place to which one could go), or a container of 'address parts' which should be handled as a unit(such as a city-state-zip combination within the US).
             *
             *     Conditional when used with Payor object.  Required if entering using RECIPIENT or THIRD_PARTY.  Required if not-authenticated and SENDER is selected */
            address: components["schemas"]["AddressVO_1"];
        };
        /** @description Indicate the contact details for this package.<br>Note: contact is shown in response only in secured flow. For non secured flow, contact is not shown in the response.' */
        ContactVO_1: {
            /**
             * @description Identifies the contact person's name. Max Length is 70.<br> Example: John Taylor
             * @example John Taylor
             */
            personName?: string;
            /**
             * @description Identifies the phone number associated with this contact. Max length is 15. <br>Example: '1234567890'
             * @example 1234567890
             */
            phoneNumber?: string;
            /**
             * @description Identifies the company this contact is associated with. Max length is 35. <br> Example: Fedex
             * @example Fedex
             */
            companyName?: string;
        };
        /** @description Address where the package was actually delivered. Contrast with destinationAddress, which is the location to which the package was intended to be delivered. Addresses may differ due to delivery to a behavior, hold at FedEx location, etc. */
        AddressVO_1: {
            /**
             * @description Specifies the FedEx classification type for an address. <br>Valid values are BUSINESS, RESIDENTIAL, MIXED, UNKNOWN.<br> Example: BUSINESS
             * @example BUSINESS
             */
            classification?: string;
            /**
             * @description Placeholder to indicate whether the address is residential (as opposed to commercial).
             * @example false
             * @enum {boolean}
             */
            residential?: true | false;
            /**
             * @description Combination of number, street name, etc. At least one line is required for a valid physical address; empty lines should not be included.<br> Example: ["1043 North Easy Street", "Suite 999"]. <br>Note: Street lines is shown in response only in secured flow. For non secured flow, street lines is not shown in the response.
             * @example [
             *       "1043 North Easy Street",
             *       "Suite 999"
             *     ]
             */
            streetLines: string[];
            /**
             * @description Conditional<br>The name of the city, town, etc. <br> Example: SEATTLE
             * @example SEATTLE
             */
            city?: string;
            /**
             * @description This is a placeholder for State or Province code. <br> Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>Click here to see State/Province Code</a>
             * @example WA
             */
            stateOrProvinceCode?: string;
            /**
             * @description Placeholder to specify postal code for the address. Postal Code is required for postal-aware countries.<br> Example: 98101<br><a onclick='loadDocReference("postalawarecountries")'>Click here to see Postal aware countries</a>
             * @example 98101
             */
            postalCode?: string;
            /**
             * @description Placeholder for country code (2 characters) for the address.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>Click here to see Country Codes</a>
             * @example US
             */
            countryCode: string;
        };
        /** @description Specifies details about the status of the track information for the shipment being tracked.  AncilliaryDetails may also be available which describe the cause of exception along with any action that needs to taken by customer. */
        StatusDetail: {
            /** @description Address information related to the associated Status. */
            scanLocation?: components["schemas"]["AddressVO1"];
            /**
             * @description A code that identifies this type of status.<br> Example:PU,DE,DP,HL,OC
             * @example PU
             */
            code?: string;
            /**
             * @description Specifies the latest status detail code of the package.<br> Example:PU,DE,DP,HL,OC
             * @example PU
             */
            derivedCode?: string;
            /** @description Specifies the cause of exception along with any action that needs to taken by customer. */
            ancillaryDetails?: components["schemas"]["StatusAncillaryDetail"][];
            /**
             * @description This is the latest tracking status by locale.<br> Example: Picked up
             * @example Picked up
             */
            statusByLocale?: string;
            /**
             * @description A human-readable description of this status.<br> Example: Picked up
             * @example Picked up
             */
            description?: string;
            delayDetail?: components["schemas"]["DelayDetail"];
        };
        /** @description Address where the package was actually delivered. Contrast with destinationAddress, which is the location to which the package was intended to be delivered. Addresses may differ due to delivery to a behavior, hold at FedEx location, etc. */
        AddressVO: {
            /**
             * @description Specifies the FedEx classification type for an address. <br>Valid values are BUSINESS, RESIDENTIAL, MIXED, UNKNOWN.<br> Example: BUSINESS
             * @example BUSINESS
             */
            classification?: string;
            /**
             * @description Placeholder to indicate whether the address is residential (as opposed to commercial).
             * @example false
             * @enum {boolean}
             */
            residential?: true | false;
            /**
             * @description Combination of number, street name, etc. At least one line is required for a valid physical address; empty lines should not be included.<br> Example: ["1043 North Easy Street", "Suite 999"]
             * @example [
             *       "1043 North Easy Street",
             *       "Suite 999"
             *     ]
             */
            streetLines: string[];
            /**
             * @description Conditional<br>The name of the city, town, etc. <br> Example: SEATTLE
             * @example SEATTLE
             */
            city?: string;
            /**
             * @description This is a placeholder for State or Province code. <br> Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>Click here to see State/Province Code</a>
             * @example WA
             */
            stateOrProvinceCode?: string;
            /**
             * @description Placeholder to specify postal code for the address. Postal Code is required for postal-aware countries.<br> Example: 98101<br><a onclick='loadDocReference("postalawarecountries")'>Click here to see Postal aware countries</a>
             * @example 98101
             */
            postalCode?: string;
            /**
             * @description Placeholder for country code (2 characters) for the address.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>Click here to see Country Codes</a>
             * @example US
             */
            countryCode: string;
            /**
             * @description Field holds the fully spelled out name of a country.<br> Example: United States
             * @example United States
             */
            countryName?: string;
        };
        /** @description Field which holds status code of the track information for the shipment being tracked. */
        StatusAncillaryDetail: {
            /**
             * @description Field which holds Reason code associated to the status of the shipment being tracked.<br> Example: 15,84,IN001,015A,02
             * @example 15
             */
            reason?: string;
            /**
             * @description Field which holds Reason description associated to the status of the shipment being tracked.<br> Example: Customer not available or business closed,Local delivery restriction, delivery not attempted,Package delivered to recipient address - release authorized
             * @example Customer not available or business closed
             */
            reasonDescription?: string;
            /**
             * @description Field which holds recommended action for customer to resolve reason.<br> Example: Contact us at <http://www.fedex.com/us/customersupport/call/index.html> to discuss possible delivery or pickup alternatives.
             * @example Contact us at <http://www.fedex.com/us/customersupport/call/index.html> to discuss possible delivery or pickup alternatives.
             */
            action?: string;
            /**
             * @description Field which holds recommended action description for customer to resolve reason.<br> Example: Customer not Available or Business Closed
             * @example Customer not Available or Business Closed
             */
            actionDescription?: string;
        };
        /** @description Specifies the information about delays. */
        DelayDetail: {
            /**
             * @description Specifies the type of delay.
             * @example WEATHER
             * @enum {string}
             */
            type?: "WEATHER" | "OPERATIONAL" | "LOCAL" | "GENERAL" | "CLEARANCE";
            /**
             * @description Specifies the subType of delay.
             * @example SNOW
             * @enum {string}
             */
            subType?: "SNOW" | "TORNADO" | "EARTHQUAKE etc";
            /**
             * @description Specifies the status of package indicating whether a package is arriving early or is on time or has been delayed.
             * @example DELAYED
             * @enum {string}
             */
            status?: "DELAYED" | "ON_TIME" | "EARLY";
        };
        /** @description Commitment message for this package. Informative messages related to the package. Used to convey information such as FedEx has received information about a package but has not yet taken possession of it. FedEx has handed the package off to a third party for final delivery. The package delivery has been cancelled. */
        ServiceCommitMessage: {
            /**
             * @description Field which holds the commitment message for this package.<br> Example: No scheduled delivery date available at this time.
             * @example No scheduled delivery date available at this time.
             */
            message?: string;
            /**
             * @description Field which holds the type of service commit message.<br> Example: ESTIMATED_DELIVERY_DATE_UNAVAILABLE
             * @example ESTIMATED_DELIVERY_DATE_UNAVAILABLE
             * @enum {string}
             */
            type?: "BROKER_DELIVERED_DESCRIPTION" | "CANCELLED_DESCRIPTION" | "DELIVERY_IN_MULTIPLE_PIECE_SHIPMENT" | "ESTIMATED_DELIVERY_DATE_UNAVAILABLE" | "EXCEPTION_IN_MULTIPLE_PIECE_SHIPMENT" | "FINAL_DELIVERY_ATTEMPTED" | "FIRST_DELIVERY_ATTEMPTED" | "HELD_PACKAGE_AVAILABLE_FOR_RECIPIENT_PICKUP" | "HELD_PACKAGE_AVAILABLE_FOR_RECIPIENT_PICKUP_WITH_ADDRESS" | "HELD_PACKAGE_NOT_AVAILABLE_FOR_RECIPIENT_PICKUP" | "SHIPMENT_LABEL_CREATED" | "SUBSEQUENT_DELIVERY_ATTEMPTED" | "USPS_DELIVERED" | "USPS_DELIVERING\"";
        };
        /** @description Notifications to the end user that provide additional information relevant to the tracked shipment. For example, a notification may indicate that a change in behavior has occurred. */
        InformationNoteDetail: {
            /**
             * @description Field which holds the code that designates the type of informational message being returned. <br>Example: 'CLEARANCE_ENTRY_FEE_APPLIES'
             * @example CLEARANCE_ENTRY_FEE_APPLIES
             */
            code?: string;
            /**
             * @description Field which holds the The informational message in human readable form.<br> Example: this is an informational message
             * @example this is an informational message
             */
            description?: string;
        };
        /** @description Contains error details. */
        CXSError: {
            /**
             * @description Error Code. <br> Example: TRACKING.TRACKINGNUMBER.EMPTY
             * @example TRACKING.TRACKINGNUMBER.EMPTY
             */
            code?: string;
            /** @description List of parameters. */
            parameterList?: components["schemas"]["Parameter"][];
            /**
             * @description Error Message. <br>Example: Please provide tracking number.
             * @example Please provide tracking number.
             */
            message?: string;
        };
        /** @description List of parameters which indicates the properties of the alert message. */
        Parameter: {
            /**
             * @description Identifies the error option to be applied. <br>Example: value
             * @example value
             */
            value?: string;
            /**
             * @description Indicates the value associated with the key.<br> Example: key
             * @example key
             */
            key?: string;
        };
        /** @description Specify types of special handlings that are applied to this package.<br><a onclick='loadDocReference("fedexexpressspecialhandlingcodes")'>Click here to see FedEx Express Special Handling Codes.</a> */
        TrackSpecialHandling: {
            /**
             * @description Field which holds the text description of the special handling code.<br> Example: Deliver Weekday
             * @example Deliver Weekday
             */
            description?: string;
            /**
             * @description Field which holds type representing the special handling.<br> Example: DELIVER_WEEKDAY
             * @example DELIVER_WEEKDAY
             */
            type?: string;
            /**
             * @description Field which holds information about the payment handling related to the special handling.<br> Example: OTHER
             * @example OTHER
             */
            paymentType?: string;
        };
        /** @description The available tracking documents for the shipment being tracked. Available tracking documents includes SPOD and Bill of lading. */
        AvailableImagesDetail: {
            /**
             * @description Field which holds the size of available images for the shipment being tracked. Example: LARGE
             * @example LARGE
             * @enum {string}
             */
            size?: "SMALL" | "LARGE";
            /**
             * @description Field which holds the type of available images for the shipment being tracked.<br> Example: BILL_OF_LADING
             * @example BILL_OF_LADING
             * @enum {string}
             */
            type?: "SIGNATURE_PROOF_OF_DELIVERY" | "BILL_OF_LADING";
        };
        /** @description Delivery related information for the tracked package. Provides delivery details as actual delivery address once the package is delivered, the number of delivery attempts made etc. */
        DeliveryDetails: {
            /**
             * @description Field which holds the name of the person who received the package, if applicable.<br> Example: Receiver
             * @example Reciever
             */
            receivedByName?: string;
            /**
             * @description Field which holds the destination service area code.<br> Example: EDDUNAVAILABLE
             * @example EDDUNAVAILABLE
             */
            destinationServiceArea?: string;
            /**
             * @description Field which holds the description corresponding to the destination service area.<br> Example: Appointment Required
             * @example Appointment required
             */
            destinationServiceAreaDescription?: string;
            /**
             * @description Field which holds the FedEx location description for the package destination.<br> Example: Receptionist/Front Desk
             * @example Receptionist/Front Desk
             */
            locationDescription?: string;
            actualDeliveryAddress?: components["schemas"]["AddressVO1"];
            /**
             * @description This element indicates whether the package will be delivered today. The value 'True', indicates that today is package delivery.<br> Example: true
             * @example false
             */
            deliveryToday?: boolean;
            /**
             * @description Field which holds the FedEx location type code for the package destination. If  Location Type not available we will get empty value.
             * @example APARTMENT_OFFICE
             * @enum {string}
             */
            locationType?: "RECEPTIONIST_OR_FRONT_DESK" | "SHIPPING_RECEIVING" | "MAILROOM" | "RESIDENCE" | "GUARD_OR_SECURITY_STATION" | "FEDEX_LOCATION" | "IN_BOND_OR_CAGE" | "PHARMACY" | "GATE_HOUSE" | "MANAGER_OFFICE" | "MAIN_OFFICE" | "LEASING_OFFICE" | "RENTAL_OFFICE" | "APARTMENT_OFFICE" | "OTHER";
            /**
             * @description Field which holds the name of the person who signed for the package, if applicable.<br> Example: Reciever
             * @example Reciever
             */
            signedByName?: string;
            /**
             * @description Field which identifies the method of office order delivery. 'Pickup' - the recipient will be picking up the office order from the FedEx Office Center. 'Shipment' - the office order will be delivered to the recipient as a FedEx shipment using the FedEx Service Type requested. 'Courier' - the office order will be delivered to the recipient by local courier. <br> Example: Courier
             * @example Courier
             */
            officeOrderDeliveryMethod?: string;
            /**
             * @description Field which holds the number of delivery attempts made to deliver the package.<br> Example: 0
             * @example 0
             */
            deliveryAttempts?: string;
            /** @description Specifies eligibility type for the different delivery option. */
            deliveryOptionEligibilityDetails?: components["schemas"]["DeliveryOptionElgibilityDetails"][];
        };
        /** @description Specifies details of delivery options and its eligibility type */
        DeliveryOptionElgibilityDetails: {
            /**
             * @description This is the type of delivery option.<br><br><i>Note: For eligibile DISPUTE_DELIVERY, RETURN_TO_SHIPPER, SUPPLEMENT_ADDRESS go to fedex.com to perform the option/action.</i><br><br>Example: INDIRECT_SIGNATURE_RELEASE
             * @example INDIRECT_SIGNATURE_RELEASE
             * @enum {string}
             */
            option?: "DISPUTE_DELIVERY" | "INDIRECT_SIGNATURE_RELEASE" | "REDIRECT_TO_HOLD_AT_LOCATION" | "REROUTE" | "RESCHEDULE" | "RETURN_TO_SHIPPER" | "SUPPLEMENT_ADDRESS";
            /**
             * @description Eligibility of the customer for the specific delivery options.<br> Example: INELIGIBLE
             * @example INELIGIBLE
             */
            eligibility?: string;
        };
        /** @description FedEx scanning event information for a package.<br><a onclick='loadDocReference("trackservicescancodes")'>Click here to see Track Service Scan Codes.</a> */
        ScanEvent: {
            /**
             * @description Date and time of the scan event.<br> Example: '2018-02-02T12:01:00-07:00'
             * @example 2018-02-02T12:01:00-07:00
             */
            date?: string;
            /**
             * @description Field which holds status description of the track information for the scan event.<br> Example: 'Picked Up'
             * @example Picked Up
             */
            derivedStatus?: string;
            /** @description Location Details for the FedEx facility where the scan event occurred. */
            scanLocation?: components["schemas"]["AddressVO1"];
            /**
             * @description Location Identification for facilities identified by an alpha numeric location code. Passing Location Id of the Hold at Location (HAL) address is strongly recommended to ensure packages are delivered to the correct address.<br> Example: SEA
             * @example SEA
             */
            locationId?: string;
            /**
             * @description This field holds Location Type. If  Location Type not available we will get empty value
             * @example CUSTOMS_BROKER
             * @enum {string}
             */
            locationType?: "AIRPORT" | "CUSTOMS_BROKER" | "CUSTOMER" | "DELIVERY_LOCATION" | "DESTINATION_AIRPORT" | "DROP_BOX" | "DESTINATION_FEDEX_FACILITY" | "ENROUTE" | "FEDEX_FACILITY" | "INTERLINE_CARRIER" | "FEDEX_OFFICE_LOCATION" | "NON_FEDEX_FACILITY" | "ORIGIN_AIRPORT" | "ORIGIN_FEDEX_FACILITY" | "PORT_OF_ENTRY" | "PICKUP_LOCATION" | "PLANE" | "SORT_FACILITY" | "SHIP_AND_GET_LOCATION" | "TURNPOINT" | "VEHICLE";
            /**
             * @description Field which holds the text description for the exception if the event was an exception .<br>Example: Package available for clearance
             * @example Package available for clearance
             */
            exceptionDescription?: string;
            /**
             * @description Field which holds the text description of the scan event.<br> Example: 'Picked Up'
             * @example Picked Up
             */
            eventDescription?: string;
            /**
             * @description Field which holds the code identifying the type of scan event.<br> Example: 'PU'
             * @example PU
             */
            eventType?: string;
            /**
             * @description Field which holds status code of the track information for the scan event.<br> Example: 'PU'
             * @example PU
             */
            derivedStatusCode?: string;
            /**
             * @description Field which holds the code identifier for the exception if the event was an exception. <br> Example: A25
             * @example A25
             */
            exceptionCode?: string;
            delayDetail?: components["schemas"]["DelayDetail"];
        };
        /** @description Date and time information for the tracked shipment. Date and time information for the tracked shipment includes various type of date time including when the package was shipped, when it is expected to deliver, when it is actually delivered etc. */
        TrackingDateAndTime: {
            /**
             * @description Field which holds the tracking date or timestamp in ISO format.<br>Format: YYYY-MM-DD<br> Example: '2019-05-07'
             * @example 2007-09-27T00:00:00
             */
            dateTime?: string;
            /**
             * @description Field which holds information about the type of tracking date or timestamp.<br> Example: 'ACTUAL_DELIVERY'
             * @example ACTUAL_DELIVERY
             * @enum {string}
             */
            type?: "ACTUAL_DELIVERY" | "ACTUAL_PICKUP" | "ACTUAL_TENDER" | "ANTICIPATED_TENDER" | "APPOINTMENT_DELIVERY" | "ATTEMPTED_DELIVERY" | "COMMITMENT" | "ESTIMATED_ARRIVAL_AT_GATEWAY" | "ESTIMATED_DELIVERY" | "ESTIMATED_PICKUP" | "ESTIMATED_RETURN_TO_STATION" | "SHIP" | "SHIPMENT_DATA_RECEIVED";
        };
        /** @description Details of the packages in the shipment being tracked. Includes details like package type, weight, dimensions, declared value, etc. */
        PackageDetail: {
            /**
             * @description Indicate the physical package type for non-Express shipments.<br><a onclick='loadDocReference("subpackagetypes")'>Click here to see Available Types</a>
             * @example BARREL
             */
            physicalPackagingType?: string;
            /**
             * @description Field which holds the number representing which package in a multi-piece shipment applies to this TrackDetail.<br> Example: 45
             * @example 45
             */
            sequenceNumber?: string;
            /**
             * @description Field which holds information about total count of the undelivered packages in the shipment. <br> Example: 7
             * @example 7
             */
            undeliveredCount?: string;
            packagingDescription?: components["schemas"]["PackagingDescription"];
            /**
             * @description Field which holds the total number of pieces in the shipment which includes the package represented by this TrackDetail.<br> Example: 1
             * @example 1
             */
            count?: string;
            weightAndDimensions?: components["schemas"]["TrackingWeightAndDimensions"];
            /**
             * @description Field which holds information about the package content of the shipment. Populated for secure users only.<br> Example: wire hangers.
             * @example [
             *       "wire hangers",
             *       "buttons"
             *     ]
             */
            packageContent?: string[];
            /**
             * @description Field which holds information about total count of the packages in the shipment.<br> Example: 100
             * @example 100
             */
            contentPieceCount?: string;
            /** @description This is the declared value. Declared Value represents FedEx maximum liability in connection with a shipment of that Package, including but not limited to, any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information relating to the Shipment. */
            declaredValue?: components["schemas"]["Amount"];
        };
        /** @description Description of the packaging used for this shipment. */
        PackagingDescription: {
            /**
             * @description Indicate the packaging type description.<br> Example: FedEx Pak
             * @example FedEx Pak
             */
            description?: string;
            /**
             * @description Indicate the packaging type.<br><a onclick='loadDocReference("packagetypes")'>Click here to see Package Types</a>
             * @example FEDEX_PAK
             */
            type?: string;
        };
        /** @description Field which holds the weight and dimension information. */
        TrackingWeightAndDimensions: {
            /** @description Field which holds the weight of the package. */
            weight?: components["schemas"]["Weight"][];
            /** @description Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href="https://www.fedex.com/en-us/service-guide.html#" target="_blank">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground. */
            dimensions?: components["schemas"]["Dimensions"][];
        };
        /** @description These are the package weight details. */
        Weight: {
            /**
             * @description This is package weight type.
             * @example LB
             * @enum {string}
             */
            unit?: "KG" | "LB";
            /**
             * @description This is package weight. Max. Length is 99999. <br> Example: 22222.0
             * @example 22222.0
             */
            value?: string;
        };
        /**
         * @description Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href="https://www.fedex.com/en-us/service-guide.html#" target="_blank">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.
         * @example {
         *       "length": 100,
         *       "width": 50,
         *       "height": 30,
         *       "units": "CM"
         *     }
         */
        Dimensions: {
            /**
             * Format: int32
             * @description Indicate the length of the package. No implied decimal places. Maximum value: 999 <br> Example: 20
             * @example 100
             */
            length?: number;
            /**
             * Format: int32
             * @description Indicate the width of the package. No implied decimal places. Maximum value: 999 <br> Example: 10
             * @example 50
             */
            width?: number;
            /**
             * Format: int32
             * @description Indicate the height of the package. No implied decimal places. Maximum value: 999 <br> Example: 10
             * @example 30
             */
            height?: number;
            /**
             * @description Unit of measure for the provided dimensions.<br>Valid Values are IN - inches, CM - centimeters. <br>Note: Any value other than CM including blank/null will default to IN. <br>Example: CM
             * @example CM
             * @enum {string}
             */
            units?: "CM" | "IN";
        };
        Amount: {
            /**
             * @description Indicate the currency code.<br> Example: USD<br><a onclick='loadDocReference("countrycodes")'>Click here to see Currency Codes</a>
             * @example USD
             */
            currency?: string;
            /**
             * Format: double
             * @description Field which holds the amount value. <br> Example: 56.80
             * @example 56.8
             */
            value?: number;
        };
        /** @description Location details for the fedex facility. */
        LocationDetail: {
            /**
             * @description Location Identification for facilities identified by an alpha numeric location code. Passing Location Id of the Hold at Location (HAL) address is strongly recommended to ensure packages are delivered to the correct address.<br> Example: SEA
             * @example SEA
             */
            locationId?: string;
            locationContactAndAddress: components["schemas"]["ContactAndAddress"];
            /**
             * @description The FedEx Location Type.<br> Example: PICKUP_LOCTION
             * @example PICKUP_LOCATION
             * @enum {string}
             */
            locationType: "FEDEX_AUTHORIZED_SHIP_CENTER" | "FEDEX_OFFICE" | "FEDEX_SELF_SERVICE_LOCATION" | "FEDEX_STAFFED" | "RETAIL_ALLICANCE_LOCATION" | "FEDEX_GROUND_TERMINAL" | "FEDEX_ONSITE";
        };
        /** @description Location Contact And Address. */
        ContactAndAddress: {
            contact: components["schemas"]["ContactVO"];
            /** @description Required.
             *
             *     Descriptive data for a physical location.  may be used as an actual physical address(place to which one could go), or a container of 'address parts' which should be handled as a unit(such as a city-state-zip combination within the US).
             *
             *     Conditional when used with Payor object.  Required if entering using RECIPIENT or THIRD_PARTY.  Required if not-authenticated and SENDER is selected */
            address: components["schemas"]["AddressVO"];
        };
        /** @description Indicate the contact details for this package. */
        ContactVO: {
            /**
             * @description Identifies the contact person's name. Max Length is 70.<br> Example: John Taylor
             * @example John Taylor
             */
            personName?: string;
            /**
             * @description Identifies the phone number associated with this contact. Max length is 15. <br>Example: '1234567890'
             * @example 1234567890
             */
            phoneNumber?: string;
            /**
             * @description Identifies the company this contact is associated with. Max length is 35. <br> Example: Fedex
             * @example Fedex
             */
            companyName?: string;
        };
        /** @description List of delivery options that can be used to customize the delivery of the package. */
        CustomDeliveryOption: {
            requestedAppointmentDetail?: components["schemas"]["RequestedAppointmentDetail"];
            /**
             * @description Field which specifies the description of the custom delivery option requested <br> Example: Redirect the package to the hold location.
             * @example Redirect the package to the hold location.
             */
            description?: string;
            /**
             * @description Field which specifies the type of the custom delivery option requested.<br> Example: REDIRECT_TO_HOLD_AT_LOCATION
             * @example REDIRECT_TO_HOLD_AT_LOCATION
             * @enum {string}
             */
            type?: "REROUTE" | "APPOINTMENT" | "DATE_CERTAIN" | "EVENING" | "REDIRECT_TO_HOLD_AT_LOCATION" | "ELECTRONIC_SIGNATURE_RELEASE";
            /**
             * @description Field which specifies the status of the custom delivery option requested.<br> Example: HELD
             * @example HELD
             */
            status?: string;
        };
        /** @description Field which specifies the details of the requested appointment. */
        RequestedAppointmentDetail: {
            /**
             * @description Field which holds the requested appointment date.<br>Format: YYYY-MM-DD<br> example: '2019-05-07'
             * @example 2019-05-07
             */
            date?: string;
            /** @description Array of different appointment time windows available on the date specified such as, Morning, afternoon, mid-day. */
            window?: components["schemas"]["TimeWindow"][];
        };
        TimeWindow: {
            /**
             * @description Field which describes the time window provided. <br> Example: Description field
             * @example Description field
             */
            description?: string;
            window?: components["schemas"]["TimeRange"];
            /**
             * @description Field which holds the code representing the description for the time window provided. <br> Example: ESTIMATED_DELIVERY
             * @example ESTIMATED_DELIVERY
             * @enum {string}
             */
            type?: "ACTUAL_DELIVERY" | "ACTUAL_PICKUP" | "ACTUAL_TENDER" | "ANTICIPATED_TENDER" | "APPOINTMENT_DELIVERY" | "ATTEMPTED_DELIVERY" | "COMMITMENT" | "ESTIMATED_ARRIVAL_AT_GATEWAY" | "ESTIMATED_DELIVERY" | "ESTIMATED_PICKUP" | "ESTIMATED_RETURN_TO_STATION" | "SHIP" | "SHIPMENT_DATA_RECEIVED";
        };
        /** @description Field which holds a date/timestamp window. */
        TimeRange: {
            /**
             * @description Field which holds the begin date/timestamp for a range.<br> Example: '2021-10-01T08:00:00'
             * @example 2021-10-01T08:00:00
             */
            begins?: string;
            /**
             * @description Field which holds the end date/timestamp for a range.<br> Example: '2021-10-15T00:00:00-06:00'
             * @example 2021-10-15T00:00:00-06:00
             */
            ends?: string;
        };
        /** @description Specifies the count of the packages delivered and the count of the packages at the origin which can be used for verification purposes. Populated for secure users only. */
        PieceCountDetail: {
            /**
             * @description Field which holds the piece count. <br> Example: 35
             * @example 35
             */
            count?: string;
            /**
             * @description Field which holds the piece count description detail. <br> Example: picec count description
             * @example picec count description
             */
            description?: string;
            /**
             * @description Field which holds the piece count location type. <br> Example: ORIGIN
             * @example ORIGIN
             * @enum {string}
             */
            type?: "DESTINATION" | "ORIGIN";
        };
        /** @description Location details for the FedEx facility where the shipment originated. */
        OriginLocation: components["schemas"]["LocationDetail_origin"];
        /** @description Shipment level details for the shipment being tracked. Includes overall shipment weight, contents etc. */
        TrackShipmentDetail: {
            /** @description Field which holds information about contents of the shipment. Populated for secure users only. */
            contents?: components["schemas"]["ShipmentContent"][];
            /**
             * @description Indicates the shipment is not yet in FedEx possession, but is still in shipper's possession.<br> Example: false
             * @example false
             */
            beforePossessionStatus?: boolean;
            /** @description Array of package level weights, which represent the total weight of the shipment. */
            weight?: components["schemas"]["Weight"][];
            /**
             * @description Field which holds information about content piece count of the shipment.<br> Example: 3333
             * @example 3333
             */
            contentPieceCount?: string;
            /** @description Field which holds information about split shipments. */
            splitShipments?: components["schemas"]["TrackSplitShipment"][];
        };
        /** @description Field which holds information about contents of the shipment. Populated for secure users only. */
        ShipmentContent: {
            /**
             * @description Field holds the item number for the contents of shipment. <br> Example: RZ5678
             * @example RZ5678
             */
            itemNumber?: string;
            /**
             * @description Field which holds information about the quantity received. <br> Example: 13
             * @example 13
             */
            receivedQuantity?: string;
            /**
             * @description Field which holds informative description about shipment content. <br> Example:  pulyurethane rope
             * @example pulyurethane rope
             */
            description?: string;
            /**
             * @description Holds the part number of the content in shipment. <br> Example: RK1345
             * @example RK1345
             */
            partNumber?: string;
        };
        /** @description Holds the information about split shipments. */
        TrackSplitShipment: {
            /**
             * @description Field which holds the number of pieces in the part.<br> Example: 10
             * @example 10
             */
            pieceCount?: string;
            /**
             * @description Field which holds human-readable description of the status. <br> Example: status
             * @example status
             */
            statusDescription?: string;
            /**
             * @description Field which holds the date and time the status began.<br>Example: '2019-05-07T08:00:07'
             * @example 2019-05-07T08:00:07
             */
            timestamp?: string;
            /**
             * @description Field which holds the status code. <br> Example: statusCode
             * @example statuscode
             */
            statusCode?: string;
        };
        /** @description Specifies the api alerts. */
        Alert: {
            /** @description Specifies the api alert code. */
            code?: string;
            /**
             * @description Specifies the api alert type.
             * @enum {string}
             */
            alertType?: "NOTE" | "WARNING";
            /** @description Specifies the api alert message. */
            message?: string;
        };
        ErrorResponseVO: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            errors?: components["schemas"]["CXSError_2"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError_2: {
            /** @description Indicates the error code.<br>Example: TRACKING.TRACKINGNUMBER.EMPTY */
            code?: string;
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: Please provide tracking number. */
            message?: string;
        };
        ErrorResponseVO401: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError401"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError401: {
            /** @description Indicates the error code.<br>Example: NOT.AUTHORIZED.ERROR */
            code?: string;
            /** @description List of parameters. */
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: Access token expired. Please modify your request and try again. */
            message?: unknown;
        };
        ErrorResponseVO403: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError403"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError403: {
            /** @description Indicates the error code.<br>Example: FORBIDDEN.ERROR */
            code?: string;
            /** @description List of parameters. */
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: We could not authorize your credentials. Please check your permissions and try again */
            message?: unknown;
        };
        ErrorResponseVO404: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError404"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError404: {
            /** @description Indicates the error code.<br>Example: NOT.FOUND.ERROR */
            code?: string;
            /** @description List of parameters. */
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: The resource you requested is no longer available. Please modify your request and try again. */
            message?: unknown;
        };
        ErrorResponseVO500: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            errors?: components["schemas"]["CXSError500"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError500: {
            /** @description Indicates the error code.<br>Example: INTERNAL.SERVER.ERROR */
            code?: string;
            /** @description List of parameters. */
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time. */
            message?: unknown;
        };
        ErrorResponseVO503: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError503"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError503: {
            /** @description Indicates the error code.<br>Example: SERVICE.UNAVAILABLE.ERROR */
            code?: string;
            /** @description List of parameters. */
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time. */
            message?: unknown;
        };
        /** @description The request to receive a tracking notification. */
        Full_Schema_Notification: {
            /**
             * @description Placeholder for Sender contact name.<br> Example: Sam Smith
             * @example Sam Smith
             */
            senderContactName: string;
            /**
             * @description Email address of the sender from which the shipment notification will be sent.<br>Example: LSR123@gmail.com
             * @example Lsr1234@gmail.com
             */
            senderEMailAddress: string;
            trackingEventNotificationDetail: components["schemas"]["TrackingEventNotificationDetail"];
            trackingNumberInfo: components["schemas"]["TrackingNumberInfo"];
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number in a specific time range. <br>Format: YYYY-MM-DD<br>example:'2019-10-13'
             * @example 2019-10-13
             */
            shipDateBegin?: string;
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number in a specific time range. <br>Format: YYYY-MM-DD<br>example:'2019-10-13'
             * @example 2019-10-31
             */
            shipDateEnd?: string;
        };
        /** @description Object for holding tracking event Notification details. */
        TrackingEventNotificationDetail: components["schemas"]["TrackingEventNotificationDetail_2"];
        /** @description Tracking Event Notification details. */
        TrackingEventNotificationDetail_2: {
            /** @description List of Tracking notifications requested for events like ON_DELIVERY, ON_ESTIMATED_DELIVERY, ON_EXCEPTION, ON_TENDER. */
            trackingNotifications: components["schemas"]["TrackingNotification"][];
            /**
             * @description An optional message which will be included in the body of the email.
             * @example Personal message content
             */
            personalMessage?: string;
            /**
             * @Ignore4TPP
             * @description If value is 'true' then html tags are included in the response date.  If 'false' they are not provided in the response.
             */
            supportHTML?: unknown;
        };
        /** @description Identifies a list of details for Tracking Notifications */
        TrackingNotification: {
            notificationDetail: components["schemas"]["TrackingNotificationDetail"];
            /**
             * @description This is to specify Recipient_Role in the shipment. <br>Possible values - BROKER, OTHER, RECIPIENT, SHIPPER <br> Example: SHIPPER
             * @example SHIPPER
             */
            role?: string;
            /**
             * @description Identifies the events for which the client is requesting notifications. <br>Possible Values are: ON_DELIVERY, ON_ESTIMATED_DELIVERY, ON_EXCEPTION, ON_TENDER
             * @example [
             *       "ON_DELIVERY",
             *       "ON_EXCEPTION",
             *       "ON_ESTIMATED_DELIVERY"
             *     ]
             */
            notificationEventTypes: string[];
            /**
             * @description If value is 'true' the current tracking results for the shipment along with notification details will be provided to the client. If 'false' only results for the notification request is provided.<br>Defaults to 'false'<br>Example: true
             * @example true
             */
            currentResultRequestedFlag?: boolean;
        };
        /** @description Information about the notification email and the language of the notification requested. */
        TrackingNotificationDetail: {
            localization: components["schemas"]["Localization"];
            emailDetail: components["schemas"]["EmailDetail"];
            /**
             * @description Identifies the format of the notification. <br>valid values are 'HTML' or 'TEXT'.
             * @example HTML
             */
            notificationType: string;
        };
        /** @description Specifies the language details for email notification. */
        Localization: {
            /**
             * @description Identifies two-letter code for the language (e.g. en/EN, fr/FR, es/ES etc..).<br> Example: en
             * @example en
             */
            languageCode: string;
            /**
             * @description Identifies the two-letter code for the region, used to further identify the requested language.  for example, if you request Spanish, you must include a locale code of <i>US</i> for North American Spanish, or <i>MX</i> for Mexico. <br> Example: US<br><a onclick='loadDocReference("locales")'>Click here to see Locales</a>
             * @example US
             */
            localeCode?: string;
        };
        /** @description Specifies the Email Notification Details. */
        EmailDetail: {
            /**
             * @description Specifies email address on which user wants to get notified for various registered events.<br>Example: p1@fedex.com
             * @example p1@fedex.com
             */
            emailAddress: string;
            /**
             * @description Specifies the name of the notification recipient.<br>Example: Sam Smith
             * @example Preethi
             */
            name?: string;
        };
        /** @description Information uniquely identifying a shipment such as Tracking number, ShipDate, and Tracking number uniqueId. */
        TrackingNumberInfo_2: {
            /**
             * @description This is a Tracking number for FedEx packages used for tracking a single package or group of packages. <br> Example: 128667043726<br><a onclick='loadDocReference("mocktrackingnumbersforfedexexpressandfedexground")'>Click here to see Mock Tracking Numbers.</a>
             * @example 128667043726
             */
            trackingNumber: string;
            /**
             * @description This is a placeholder to provide the FedEx operating company (transportation) code used for package delivery. <br> Example: FDXE
             * @example FDXE
             * @enum {string}
             */
            carrierCode?: "FDXE" | "FDXG" | "FXSP" | "FXFR" | "FDXC" | "FXCC" | "FEDEX_CARGO" | "FEDEX_CUSTOM_CRITICAL" | "FEDEX_EXPRESS" | "FEDEX_FREIGHT" | "FEDEX_GROUND" | "FEDEX_OFFICE" | "FEDEX_KINKOS" | "FX" | "FDFR" | "FDEG" | "FXK" | "FDC" | "FDCC";
            /**
             * @description Unique identifier used to distinguish duplicate FedEx tracking numbers. This value will be set by FedEx systems. <br> Example: 245822\~123456789012\~FDEG
             * @example 245822~123456789012~FDEG
             */
            trackingNumberUniqueId?: string;
        };
        /** @description This is a wrapper class for outputVO */
        TrkcResponseVO_Notifications: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            output?: components["schemas"]["BaseProcessOutputVO_Notification"];
        };
        BaseProcessOutputVO_Notification: components["schemas"]["SendNotificationOutputVO"];
        SendNotificationOutputVO: {
            /** @description Tracking number information which uniquely identifies a package. Tracking number information includes tracking number, carrier code and a unique qualifier. */
            TrackingNumberInfo?: components["schemas"]["TrackingNumberInfo_2"];
            /** @description Address where the package was actually delivered. Contrast with destination Address, which is the location to which the package was intended to be delivered. Addresses may differ due to delivery to a neighbor, hold at FedEx location, etc. */
            destinationAddress?: components["schemas"]["AddressVO"];
            /** @description Details of the recipient notification events. Possible events are - ON_DELIVERY, ON_ESTIMATED_DELIVERY, ON_EXCEPTION, ON_TENDER. */
            recipientDetails?: components["schemas"]["notificationEventTypes"][];
            /**
             * @description The cxs shipment alerts. This includes the alert type, code, and            message.<br>example: TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             * @example TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             */
            alerts?: components["schemas"]["Alert"][];
        };
        /** @description Identifies the events for which the client is requesting notifications. Possible events are -  ON_DELIVERY, ON_ESTIMATED_DELIVERY, ON_EXCEPTION, ON_TENDER <br> Example: [ON_DELIVERY,ON_ESTIMATED_DELIVERY,ON_EXCEPTION] */
        notificationEventTypes: string[];
        /**
         * @description Specifies the request elements for Track by alternate reference.<br> For a valid request there are two combinations:<br> 1.) A referenceValue and accountNumber is required OR <br>2.) referenceType & carrierCode, shipdateBegin and shipDateEnd, destinationPostalCode and destinationCountryCode are required.
         * @example {
         *       "referencesInformation": {
         *         "type": "BILL_OF_LADING",
         *         "value": "56754674567546754",
         *         "accountNumber": "XXX61073",
         *         "carrierCode": "FDXE",
         *         "shipDateBegin": "2019-02-13",
         *         "shipDateEnd": "2019-02-13",
         *         "destinationCountryCode": "US",
         *         "destinationPostalCode": "75063"
         *       },
         *       "includeDetailedScans": "true"
         *     }
         */
        Full_Schema_Tracking_References: {
            referencesInformation: components["schemas"]["ReferenceInformation"];
            /**
             * @description Indicates if the detailed scans are being requested or not. If true, the detailed scans will be included in the response returned. <br>Valid values are True or False.
             * @example true
             */
            includeDetailedScans?: boolean;
        };
        /** @description Specifies the reference details for the tracked shipment. The following rules apply <br>- Either shipper.AccountNumber or Destination.countryCode(and postal for postal aware countries) are required<br>- If ShipDateRangeBegin and End are not present, shipDateRangeBegin will be set to the current date minus 30 days, and shipDdateRangeEnd will default to current date plus one day. */
        ReferenceInformation: {
            /**
             * @description Specifies which carrier should be included.<br> Example: FDXE
             * @example FDXE
             */
            carrierCode?: string;
            /**
             * @description Specify the type of alternate reference used. This is Conditionally required.<br> Valid Values :<ul><li>BILL_OF_LADING</li><li>COD_RETURN_TRACKING_NUMBER</li><li>CUSTOMER_AUTHORIZATION_NUMBER</li><li>CUSTOMER_REFERENCE</li><li>DEPARTMENT</li><li>DOCUMENT_AIRWAY_BILL</li><li>EXPRESS_ALTERNATE_REFERENCE</li><li>FEDEX_OFFICE_JOB_ORDER_NUMBER</li><li>FREE_FORM_REFERENCE</li><li>GROUND_INTERNATIONAL</li><li>GROUND_SHIPMENT_ID</li><li>INTERNATIONAL_DISTRIBUTION</li><li>INVOICE</li><li>JOB_GLOBAL_TRACKING_NUMBER</li><li>ORDER_GLOBAL_TRACKING_NUMBER</li><li>ORDER_TO_PAY_NUMBER</li><li>PART_NUMBER</li><li>PARTNER_CARRIER_NUMBER</li><li>PURCHASE_ORDER</li><li>REROUTE_TRACKING_NUMBER</li><li>RETURN_MATERIALS_AUTHORIZATION</li><li>RETURNED_TO_SHIPPER_TRACKING_NUMBER</li><li>SHIPPER_REFERENCE</li><li>TRANSBORDER_DISTRIBUTION</li><li>TRANSPORTATION_CONTROL_NUMBER</li><li>VIRTUAL_CONSOLIDATION</li></ul>
             * @example  BILL_OF_LADING
             */
            type?: string;
            /**
             * @description Conditionally required. <br>Specifies the alternate reference value. <br> Example: 56754674567546754
             * @example 56754674567546754
             */
            value: string;
            /**
             * @description Conditionally required. <br>Specifies the shipper's account number. <br> Note: Either account number or destination postal code and country code are mandatory to track by reference.<br> Example: 697561862
             * @example XXX61073
             */
            accountNumber?: string;
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number within a specific date range. <br>Format: YYYY-MM-DD <br> Example: 2020-03-29
             * @example 2020-03-29
             */
            shipDateBegin: string;
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number within a specific date range. <br>Format: YYYY-MM-DD <br> Example: 2020-04-01
             * @example 2020-04-01
             */
            shipDateEndDate: string;
            /**
             * @description Conditionally required. <br>Specifies the recipient's country code. <br> Note: Either account number or destination postal code and country code are mandatory to track by reference.<br> Example: US<br><a onclick='loadDocReference("countrycodes")'>Click here to see Country Codes</a>
             * @example US
             */
            destinationCountryCode?: string;
            /**
             * @description Conditionally required. <br>Indicate recipient postal code. Required for postal-aware countries. <br> Note: Either account number or destination postal code and country code are mandatory to track by reference. <br> Example: 75063<br><a onclick='loadDocReference("postalawarecountries")'>Click here to see Postal aware countries</a>
             * @example 75063
             */
            destinationPostalCode?: string;
        };
        /** @description This is a wrapper class for outputVO */
        TrkcResponseVO_ReferenceNumber: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            output?: components["schemas"]["BaseProcessOutputVO_ReferenceNumber"];
        };
        BaseProcessOutputVO_ReferenceNumber: components["schemas"]["TrackingReferencesResponse"];
        /** @description Specifies the response elements for Track by alternate reference request. */
        TrackingReferencesResponse: {
            /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter. */
            cxsErrors?: components["schemas"]["CXSError"][];
            /** @description Contains detailed tracking entry information.  <br>Valid values: ACTUAL_DELIVERY, ACTUAL_PICKKUP, ACTUAL_TENDER, ANTICIPATED_TENDER, APPOINTMENT_DELIVERY, ATTEMPTED_DELIVERY, COMMITMENT, ESTIMATED_ARRIVAL_AT_GATEWAY, ESTIMATED_DELIVERY, ESTIMATED_PICKUP, ESTIMATED_RETURN_TO_STATION, SHIP, SHIPMENT_DATE_RECEIVED */
            completeTrackResults?: components["schemas"]["CompleteTrackResult"][];
            /**
             * @description The cxs alert type, alert code, and alert message that is received.<br>example: TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             * @example TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             */
            alerts?: components["schemas"]["Alert"][];
            /** @description Indicates whether the tracking is successful. */
            successful?: boolean;
        };
        /**
         * @description The request elements for Tracking by TCN request type.
         * @example {
         *       "tcnInfo": {
         *         "value": "N552428361Y555XXX",
         *         "carrierCode": "FDXE",
         *         "shipDateBegin": "2019-02-13",
         *         "shipDateEnd": "2019-02-13"
         *       },
         *       "includeDetailedScans": true
         *     }
         */
        Full_Schema_TCN: {
            /** @description The information associated with the transportation control number.<br>Only 1 TCN is supported per request. */
            tcnInfo: components["schemas"]["TCNInfo"];
            /**
             * @description Indicates if detailed scans are requested or not. <br/>Valid values are True, or False.
             * @example true
             */
            includeDetailedScans?: boolean;
        };
        TCNInfo: {
            /**
             * @description Field which holds the Transportation Control Number value.<br> Example: N552428361Y555XXX
             * @example N552428361Y555XXX
             */
            value: string;
            /**
             * @description Field which holds information about carrier code of the shipment.<br> Example: FDXE
             * @example FDXE
             */
            carrierCode?: string;
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number within a specific date range. <br>Format: YYYY-MM-DD <br> Example: 2020-03-29
             * @example 2020-03-29
             */
            shipDateBegin?: string;
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number within a specific date range. <br>Format: YYYY-MM-DD <br> Example: 2020-04-01
             * @example 2020-04-01
             */
            shipDateEnd?: string;
        };
        /** @description This is a wrapper class for outputVO */
        TrkcResponseVO_TCN: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            output?: components["schemas"]["BaseProcessOutputVO_TCN"];
        };
        BaseProcessOutputVO_TCN: components["schemas"]["TrackingNumbersResponse_TCN"];
        /** @description The response elements for the Track by TCN request. */
        TrackingNumbersResponse_TCN: {
            /** @description Contains detailed tracking entry information. */
            completeTrackResults?: components["schemas"]["CompleteTrackResult"][];
            /**
             * @description alert type, alert code, and alert message<br>Example: TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             * @example TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             */
            alerts?: components["schemas"]["Alert"][];
        };
        /** @description Parameter is a class having key-value pair. */
        Parameter_2: {
            /** @example value */
            value?: string;
            /** @example key */
            key?: string;
        };
        Full_Schema_SPOD: {
            /** @description This object specifies the tracking document details such as types of documents, for example, SIGNATURE_PROOF_OF_DELIVERY and also the format of tracking document. Supported values are PDF and PNG. Default is PDF. */
            trackDocumentDetail: components["schemas"]["TrackDocumentDetail"];
            /** @description This is the placeholder for document specification details required to identify the shipment being tracked. This includes tracking information such as tracking qualifier, carrier code, and tracking number.<br>At least one trackDocumentSpecification is required. Maximum limit is 30. */
            trackDocumentSpecification: components["schemas"]["TrackDocumentSpecification"][];
        };
        /** @description Specifies the tracking document details. */
        TrackDocumentDetail: {
            /**
             * @description Indicate the Tracking Document. <br>Valid values are SIGNATURE_PROOF_OF_DELIVERY, BILL_OF_LADING and FREIGHT_BILLING_DOCUMENT.<br>Example: SIGNATURE_PROOF_OF_DELIVERY.<br><i>Note: The SPOD information will be presented as a byte array instead of an image. The byte array is a base64 encoded string, which should be decoded to get the final signature image in PDF or PNG format</i>
             * @example SIGNATURE_PROOF_OF_DELIVERY
             */
            documentType: string;
            /**
             * @description Specifies the format of tracking document. <br>Valid values are PDF or PNG.<br>The values are key sensitive.<br>Note: documentTypes BILL_OF_LADING and FREIGHT_BILLING_DOCUMENT does not support PNG.
             * @example PNG
             */
            documentFormat?: string;
        };
        TrackDocumentSpecification: {
            trackingNumberInfo: unknown & components["schemas"]["TrackingNumberInfo"];
            /**
             * @description ShipDateBegin and ShipDateEnd are used to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number during a specific date range.<br>Format: YYYY-MM-DD<br>example: '2020-03-29'
             * @example 2020-03-29
             */
            shipDateBegin?: string;
            /**
             * @description ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number during a specific date range.<br>Format: YYYY-MM-DD<br>example: '2020-04-01'
             * @example 2020-04-01
             */
            shipDateEnd?: string;
            /**
             * @description Specifies Signature Proof of Delivery(SPOD) account number for the shipment being tracked.<br>Conditionally required when documentType is BILL_OF_LADING or FREIGHT_BILLING_DOCUMENT<br>Example: 123456789
             * @example XXX61073
             */
            accountNumber?: string;
        };
        /** @description This is a wrapper class for outputVO */
        TrkcResponseVO_SPOD: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            output?: components["schemas"]["BaseProcessOutputVO_SPOD"];
        };
        BaseProcessOutputVO_SPOD: components["schemas"]["SPODResponseVO"];
        SPODResponseVO: {
            localization?: components["schemas"]["Localization"];
            /** @description The types of tracking document.<br> Example: SIGNATURE_PROOF_OF_DELIVERY */
            documentType?: string;
            /**
             * @description The format of the tracking document. <br>Valid values are PDF and PNG.
             * @example PNG
             */
            documentFormat?: string;
            /**
             * Format: base64
             * @description This field holds the list of byte array(base64) which specifies the image of the recipient's signature (if the signature is available) once the shipment has been delivered. <br>Example: [iVBORw0KGgoAAAANSUhEUgAABX0AAAfECAIAAACJ1ysDAACAAElEQVR42uzdeXxM9/4/8EhC3ZZkskmotlpuq6227r1ur6KqrSXLZLHvhKyIndJy7ZLMlgiy2BJ71E4QewmCICUqJAiCIIgkM3P2M/P7nDkxHQm97b0339b9vZ6P92MeM3P2kX8+L5/FzgQAAAAAAAAAUDvs8BMAAAAAAAAAQC1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQO/6bl0/+dhCEfLh7eOonUsE8S5RouFfly8YD34od8lKAK23ruUKGhXO7v8CtzB1Mt5A6FP+cOLuRxrLmDLtBD1d9rtmWcxRf6Yba5g6MlenAwRdTlo5zoyU2N0/5snPYe9d179Hfvst+1YL9rznwrFT2pKf1tCyqlN3V8BVOcKxjLkDsAAAAAAAAgd4B/J3dQukiv/d5eGPH3ZdMCNySO27du/vH10cdXzzm6ek6Wba345+HUWT/sXZ17K/8uYzSIAmey5A6m58cKctwgWsry/tmbeXGL+l+nFKKcOwyTcodeTeOUUu6gepo7aAM9YmrmDqawuqYw6VUMqy+MUHD//J]
             */
            document?: string[];
            /**
             * @description Specifies the alert received when the recipient's signature has been            taken as a proof of shipment delivery.<br>Example: TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             * @example TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             */
            alerts?: components["schemas"]["Alert"][];
        };
        /** @description The request elements for Tracking by Tracking Number.  */
        Full_Schema_Tracking_Numbers: {
            /** @description Indicates if detailed scans are requested or not. <br/>Valid values are True, or False. */
            includeDetailedScans: boolean;
            /** @description The tracking information of the shipment to be tracked. At least one occurrence of TrackingInfo is required. Maximum limit is 30. */
            trackingInfo: components["schemas"]["TrackingInfo"][];
        };
        /** @description Information uniquely identifying a shipment such as Tracking number, ShipDate, and Tracking number uniqueId. */
        TrackingNumberInfo_1: {
            /**
             * @description This is a Tracking number for FedEx packages used for tracking a single package or group of packages. <br> Example: 128667043726<br><a onclick='loadDocReference("mocktrackingnumbersforfedexexpressandfedexground")'>Click here to see Mock Tracking Numbers.</a>
             * @example 128667043726
             */
            trackingNumber?: string;
            /**
             * @description This is a placeholder to provide the FedEx operating company (transportation) code used for package delivery. <br> Example: FDXE
             * @example FDXE
             * @enum {string}
             */
            carrierCode?: "FDXE" | "FDXG" | "FXSP" | "FXFR" | "FDXC" | "FXCC" | "FEDEX_CARGO" | "FEDEX_CUSTOM_CRITICAL" | "FEDEX_EXPRESS" | "FEDEX_FREIGHT" | "FEDEX_GROUND" | "FEDEX_OFFICE" | "FEDEX_KINKOS" | "FX" | "FDFR" | "FDEG" | "FXK" | "FDC" | "FDCC";
            /**
             * @description Unique identifier used to distinguish duplicate FedEx tracking numbers. This value will be set by FedEx systems. <br> Example: 245822\~123456789012\~FDEG
             * @example 245822~123456789012~FDEG
             */
            trackingNumberUniqueId?: string;
        };
        /** @description This is a wrapper class for outputVO */
        TrkcResponseVO_TrackingNumber: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            output?: components["schemas"]["BaseProcessOutputVO_TrackingNumber"];
        };
        BaseProcessOutputVO_TrackingNumber: components["schemas"]["TrackingNumbersResponse"];
        /** @description The response elements for Tracking by tracking number request */
        TrackingNumbersResponse: {
            /** @description Contains detailed tracking entry information. <br>Valid values are- ACTUAL_DELIVERY, ACTUAL_PICKUP, ACTUAL_TENDER, ANTICIPATED_TENDER, APPOINTMENT_DELIVERY, ATTEMPTED_DELIVERY, COMMITMENT, ESTIMATED_ARRIVAL_AT_GATEWAY, ESTIMATED_DELIVERY, ESTIMATED_PICKUP, ESTIMATED_RETURN_TO_STATION, SHIP, SHIPMENT_DATA_RECEIVED. */
            completeTrackResults?: components["schemas"]["CompleteTrackResult"][];
            /**
             * @description The cxs alert type, alert code and alert message<br>Example: TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             * @example TRACKING.DATA.NOTFOUND -  Tracking data unavailable
             */
            alerts?: components["schemas"]["Alert"][];
        };
        /** @description Location details for the fedex facility. */
        LocationDetail_origin: {
            /**
             * @description Location Identification for facilities identified by an alpha numeric location code. Passing Location Id of the Hold at Location (HAL) address is strongly recommended to ensure packages are delivered to the correct address.<br> Example: SEA
             * @example SEA
             */
            locationId?: string;
            locationContactAndAddress?: components["schemas"]["ContactAndAddress1"];
        };
        /** @description Location details for the fedex facility. */
        LocationDetail1: {
            /**
             * @description Location Identification for facilities identified by an alpha numeric location code. Passing Location Id of the Hold at Location (HAL) address is strongly recommended to ensure packages are delivered to the correct address.<br> Example: SEA
             * @example SEA
             */
            locationId?: string;
            locationContactAndAddress?: components["schemas"]["ContactAndAddress1"];
            /**
             * @description This field holds FedEx Location Type. If  Location Type not available we will get empty value.
             * @example FEDEX_SHIPSITE
             * @enum {string}
             */
            locationType?: "FEDEX_AUTHORIZED_SHIP_CENTER" | "FEDEX_OFFICE" | "FEDEX_SELF_SERVICE_LOCATION" | "FEDEX_GROUND_TERMINAL" | "FEDEX_ONSITE" | "FEDEX_EXPRESS_STATION" | "FEDEX_FACILITY" | "FEDEX_FREIGHT_SERVICE_CENTER" | "FEDEX_HOME_DELIVERY_STATION" | "FEDEX_SHIP_AND_GET" | "FEDEX_SHIPSITE" | "FEDEX_SMART_POST_HUB";
        };
        /** @description Location Contact And Address. */
        ContactAndAddress1: {
            /** @description Required.
             *
             *     Descriptive data for a physical location.  may be used as an actual physical address(place to which one could go), or a container of 'address parts' which should be handled as a unit(such as a city-state-zip combination within the US).
             *
             *     Conditional when used with Payor object.  Required if entering using RECIPIENT or THIRD_PARTY.  Required if not-authenticated and SENDER is selected */
            address?: components["schemas"]["AddressVO1"];
        };
        /** @description Indicate the contact details for this package.<br>Note: contact is shown in response only in secured flow. For non secured flow, contact is not shown in the response.' */
        ContactVO1: {
            /**
             * @description Identifies the contact person's name. Max Length is 70.<br> Example: John Taylor
             * @example John Taylor
             */
            personName?: string;
            /**
             * @description Identifies the phone number associated with this contact. Max length is 15. <br>Example: '1234567890'
             * @example 1234567890
             */
            phoneNumber?: string;
            /**
             * @description Identifies the company this contact is associated with. Max length is 35. <br> Example: Fedex
             * @example Fedex
             */
            companyName?: string;
        };
        /** @description Address where the package was actually delivered. Contrast with destinationAddress, which is the location to which the package was intended to be delivered. Addresses may differ due to delivery to a behavior, hold at FedEx location, etc. */
        AddressVO1: {
            /**
             * @description Specifies the FedEx classification type for an address. <br>Valid values are BUSINESS, RESIDENTIAL, MIXED, UNKNOWN.<br> Example: BUSINESS
             * @example BUSINESS
             */
            addressClassification?: string;
            /**
             * @description Placeholder to indicate whether the address is residential (as opposed to commercial).
             * @example false
             * @enum {boolean}
             */
            residential?: true | false;
            /**
             * @description Combination of number, street name, etc. At least one line is required for a valid physical address; empty lines should not be included.<br> Example: ["1043 North Easy Street", "Suite 999"]. <br>Note: Street lines is shown in response only in secured flow. For non secured flow, street lines is not shown in the response.
             * @example [
             *       "1043 North Easy Street",
             *       "Suite 999"
             *     ]
             */
            streetLines?: string[];
            /**
             * @description Conditional<br>The name of the city, town, etc. <br> Example: SEATTLE
             * @example SEATTLE
             */
            city?: string;
            /**
             * @description This is a placeholder for State or Province code. <br> Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>Click here to see State/Province Code</a>
             * @example WA
             */
            stateOrProvinceCode?: string;
            /**
             * @description Placeholder to specify postal code for the address. Postal Code is required for postal-aware countries.<br> Example: 98101<br><a onclick='loadDocReference("postalawarecountries")'>Click here to see Postal aware countries</a>
             * @example 98101
             */
            postalCode?: string;
            /**
             * @description Placeholder for country code (2 characters) for the address.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>Click here to see Country Codes</a>
             * @example US
             */
            countryCode?: string;
            /**
             * @description Field holds the fully spelled out name of a country.<br> Example: United States
             * @example United States
             */
            countryName?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "Track Multiple Piece Shipment": {
        parameters: {
            query?: never;
            header: {
                /** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
                "x-customer-transaction-id"?: string;
                /** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
                "content-type": string;
                /** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
                "x-locale"?: string;
                /** @description This indicates the authorization token for the input request. */
                authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Full_Schema_Multiple_Piece_Shipment"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrkcResponseVO_Associated"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO401"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO403"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO404"];
                };
            };
            /** @description Failure */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO500"];
                };
            };
            /** @description Service Unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO503"];
                };
            };
        };
    };
    "19f112535f47e237486334074740bb66": {
        parameters: {
            query?: never;
            header: {
                /** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
                "x-customer-transaction-id"?: string;
                /** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
                "content-type": string;
                /** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
                "x-locale"?: string;
                /** @description This indicates the authorization token for the input request. */
                authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Full_Schema_Notification"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrkcResponseVO_Notifications"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO401"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO403"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO404"];
                };
            };
            /** @description Failure */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO500"];
                };
            };
            /** @description Service Unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO503"];
                };
            };
        };
    };
    "Track by References": {
        parameters: {
            query?: never;
            header: {
                /** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
                "x-customer-transaction-id"?: string;
                /** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
                "content-type": string;
                /** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
                "x-locale"?: string;
                /** @description This indicates the authorization token for the input request. */
                authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Full_Schema_Tracking_References"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrkcResponseVO_ReferenceNumber"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO401"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO403"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO404"];
                };
            };
            /** @description Failure */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO500"];
                };
            };
            /** @description Service Unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO503"];
                };
            };
        };
    };
    f1f9080e8452d9ac903f562a2d2626d0: {
        parameters: {
            query?: never;
            header: {
                /** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
                "x-customer-transaction-id"?: string;
                /** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
                "content-type": string;
                /** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
                "x-locale"?: string;
                /** @description This indicates the authorization token for the input request. */
                authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Full_Schema_TCN"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrkcResponseVO_TCN"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO401"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO403"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO404"];
                };
            };
            /** @description Failure */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO500"];
                };
            };
            /** @description Service Unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO503"];
                };
            };
        };
    };
    TrackingDocuments: {
        parameters: {
            query?: never;
            header: {
                /** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
                "x-customer-transaction-id"?: string;
                /** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
                "content-type": string;
                /** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
                "x-locale"?: string;
                /** @description This indicates the authorization token for the input request. */
                authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Full_Schema_SPOD"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrkcResponseVO_SPOD"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO401"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO403"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO404"];
                };
            };
            /** @description Failure */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO500"];
                };
            };
            /** @description Service Unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO503"];
                };
            };
        };
    };
    "Track by Tracking Number": {
        parameters: {
            query?: never;
            header: {
                /** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
                "x-customer-transaction-id"?: string;
                /** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
                "content-type": string;
                /** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
                "x-locale"?: string;
                /** @description This indicates the authorization token for the input request. */
                authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Full_Schema_Tracking_Numbers"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrkcResponseVO_TrackingNumber"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO401"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO403"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO404"];
                };
            };
            /** @description Failure */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO500"];
                };
            };
            /** @description Service Unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO503"];
                };
            };
        };
    };
}
