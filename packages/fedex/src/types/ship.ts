/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/ship/v1/shipments": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/**
		 * Create Shipment
		 * @description This endpoint helps you to create shipment requests therebyy validating all the shippingg input information and either generates the labels (if the responses is synchronous) or a job ID if transaction is processed using asynchronous method.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
		 */
		post: operations["Create Shipment"];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/ship/v1/shipments/cancel": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		/**
		 * Cancel Shipment
		 * @description Use this endpoint to cancel FedEx Express and Ground shipments that have not already been tendered to FedEx. This request will cancel all packages within the shipment.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
		 */
		put: operations["Cancel Shipment"];
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/ship/v1/shipments/results": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/**
		 * Retrieve Async Ship
		 * @description This endpoint helps you to process confirmed shipments asynchronously (above 40 packages) and produce results based on job id.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
		 */
		post: operations["Get Confirmed Shipment Async Results"];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/ship/v1/shipments/packages/validate": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/**
		 * Validate Shipment
		 * @description Use this endpoint to verify the accuracy of a shipment request prior to actually submitting shipment request. This allow businesses that receive shipping orders from end-user/customers to verify the shipment information prior to submitting a create shipment request to FedEx and printing a label. If for any reason the information needs to be edited or changed, it can be done while the end-user is still available to confirm the changes.<br><br>Note:<ul><li>This is shipment level validation hence supports validation for single piece shipment only.</li><li>Shipment validation is supported for all Express and Ground - Domestic as well as international shipments with all applicable special services. </li><li>Shipment validation is supported for SmartPost and not for Freight LTL shipments.</li></ul><br><br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
		 */
		post: operations["ShipmentPackageValidate"];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/ship/v1/shipments/tag": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/**
		 * Create Tag
		 * @description FedEx creates and delivers a return shipping label to your customer and collects the item for return. Your customer needs to have the package ready for pickup when the FedEx driver arrives. Use this endpoint to create tag requests for FedEx Express and FedEx Ground shipments.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
		 */
		post: operations["Create Tag"];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/ship/v1/shipments/tag/cancel/{shipmentid}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		/**
		 * Cancel Tag
		 * @description This endpoint cancels a FedEx Return Tag and the associated pickup for FedEx Express and FedEx Ground shipments if the shipment has not yet been picked up by the courier.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
		 */
		put: operations["CancelTag"];
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: {
		/** @description The request elements required to create a shipment. */
		Full_Schema_Ship: {
			/**
			 * @description It specifies the content of the merged pdf URL in the response. The merged pdf URL is generated only if the labelResponseOption is indicated as URL_ONLY.<ul><li>If the value is 'LABELS_AND_DOCS', then merged (all shipping labels and shipping documents) pdf URL will be returned.</li><li>If the value is 'LABELS_ONLY', merged (all shipping labels only) pdf URL will be returned.</li><li>If the value is 'NONE', then no merged pdf URL will be returned.</li></ul><br>This is optional field and will default to LABELS_AND_DOCS.<br>Note: If the value is 'LABELS_ONLY', then the returned merged pdf label will not be in the Base64 encoded format.
			 * @example LABELS_AND_DOCS
			 * @enum {string}
			 */
			mergeLabelDocOption?: "NONE" | "LABELS_AND_DOCS" | "LABELS_ONLY";
			requestedShipment: components["schemas"]["RequestedShipment"];
			labelResponseOptions: components["schemas"]["LABELRESPONSEOPTIONS"];
			accountNumber: components["schemas"]["ShipperAccountNumber"];
			shipAction?: components["schemas"]["OpenShipmentAction"];
			processingOptionType?: components["schemas"]["AsynchronousProcessingOptionType_1"];
			/**
			 * @description This flag is used to specify if the shipment is singleshot mps or one Label at a time, piece by piece shipment. Default is false. If true, one label at a time is processed.
			 * @example true
			 */
			oneLabelAtATime?: boolean;
		};
		/** @description The descriptive data of the requested shipment. */
		RequestedShipment: {
			/**
			 * @description This is the shipment date. Default value is current date in case the date is not provided or a past date is provided.<br>Format [YYYY-MM-DD].<br>Example: 2019-10-14
			 * @example 2019-10-14
			 */
			shipDatestamp?: string;
			/** @description It is the sum of all declared values of all packages in a shipment. The amount of totalDeclaredValue must be equal to the sum of all the individual declaredValues in the shipment. The declaredValue and totalDeclaredValue must match in all currencies in one shipment. This value represents FedEx maximum liability associated with a shipment. This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.<br><i>Note: The totalDeclaredValue should not exceed customsValue.</i> */
			totalDeclaredValue?: components["schemas"]["Money"];
			/**
			 * @description Indicate the Shipper contact details for this shipment.
			 * @example {
			 *       "address": {
			 *         "streetLines": [
			 *           "10 FedEx Parkway",
			 *           "Suite 302"
			 *         ],
			 *         "city": "Beverly Hills",
			 *         "stateOrProvinceCode": "CA",
			 *         "postalCode": "90210",
			 *         "countryCode": "US",
			 *         "residential": false
			 *       },
			 *       "contact": {
			 *         "personName": "John Taylor",
			 *         "emailAddress": "sample@company.com",
			 *         "phoneExtension": "91",
			 *         "phoneNumber": "XXXX567890",
			 *         "companyName": "Fedex"
			 *       },
			 *       "tins": [
			 *         {
			 *           "number": "XXX567",
			 *           "tinType": "FEDERAL",
			 *           "usage": "usage",
			 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
			 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
			 *         }
			 *       ]
			 *     }
			 */
			shipper: components["schemas"]["ShipperParty"];
			/** @description Will indicate the party responsible for purchasing the goods shipped from the shipper to the recipient. The sold to party is not necessarily the recipient or the importer of record. The sold to party is relevant when the purchaser, rather than the recipient determines when certain customs regulations apply. */
			soldTo?: components["schemas"]["SoldToParty"];
			/** @description Indicate the descriptive data for the recipient location to which the shipment is to be received. */
			recipients: components["schemas"]["RecipientsParty"][];
			/**
			 * @description A unique identifier for a recipient location.
			 * @example 1234567
			 */
			recipientLocationNumber?: string;
			/**
			 * @description Indicate the pickup type method by which the shipment to be tendered to FedEx.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
			 * @example USE_SCHEDULED_PICKUP
			 * @enum {string}
			 */
			pickupType:
				| "CONTACT_FEDEX_TO_SCHEDULE"
				| "DROPOFF_AT_FEDEX_LOCATION"
				| "USE_SCHEDULED_PICKUP";
			/**
			 * @description Indicate the FedEx service type used for this shipment.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see Service Types</a>
			 * @example PRIORITY_OVERNIGHT
			 */
			serviceType: string;
			/**
			 * @description Specify the packaging used.<br>Note: For Express Freight shipments, the packaging will default to YOUR_PACKAGING irrespective of the user provided package type in the request.<br>Example: FEDEX_PAK<br><a onclick='loadDocReference("packagetypes")'>click here to see Package Types</a>
			 * @example YOUR_PACKAGING
			 */
			packagingType: string;
			/**
			 * Format: double
			 * @description Indicate the shipment total weight in pounds.<br>Example: 10.6<br>Note: <ul><li>This only applies to International shipments and should be used on the first package of a multiple piece shipment.</li><li>This value contains 1 explicit decimal position.</li><li>For one Label at a time shipments, the unit of totalWeight is considered same as the unit of weight provided in requestedPackageLineItem field.</li></ul>
			 * @example 20.6
			 */
			totalWeight?: number;
			/** @description Indicate shipment origin address information, if it is different from the shipper address. */
			origin?: components["schemas"]["ContactAndAddress_1"];
			shippingChargesPayment: components["schemas"]["Payment"];
			shipmentSpecialServices?: components["schemas"]["ShipmentSpecialServicesRequested"];
			emailNotificationDetail?: components["schemas"]["ShipShipmentEMailNotificationDetail"];
			expressFreightDetail?: components["schemas"]["ExpressFreightDetail"];
			variableHandlingChargeDetail?: components["schemas"]["VariableHandlingChargeDetail"];
			customsClearanceDetail?: components["schemas"]["CustomsClearanceDetail"];
			smartPostInfoDetail?: components["schemas"]["SmartPostInfoDetail"];
			/**
			 * @description Indicate if the shipment be available to be visible/tracked using FedEx InSight<sup>®</sup> tool. If value indicated as true, only the shipper/payer will have visibility of this shipment in the FedEx InSight<sup>®</sup> tool.
			 * @example true
			 */
			blockInsightVisibility?: boolean;
			labelSpecification: components["schemas"]["LabelSpecification"];
			shippingDocumentSpecification?: components["schemas"]["ShippingDocumentSpecification"];
			/**
			 * @description Indicate the type of rates to be returned. The account specific rates are returned by default if the account number is specified in the request.<br>Following are values:<ul><li>LIST - Returns FedEx published list rates in addition to account-specific rates (if applicable).</li><li>INCENTIVE - This is one-time discount for incentivising the customer. For more information, contact your FedEx representative.</li><li>ACCOUNT - Returns account specific rates (Default).</li><li>PREFERRED - Returns rates in the preferred currency specified in the element preferredCurrency.</li><li>RETAIL - Returns customer rate from one of retail FedEx service centers.</li></ul>Examples: ["ACCOUNT", "PREFERRED"]
			 * @example [
			 *       "LIST",
			 *       "PREFERRED"
			 *     ]
			 */
			rateRequestType?: (
				| "LIST"
				| "NONE"
				| "PREFERRED"
				| "ACCOUNT"
				| "INCENTIVE"
				| "RETAIL"
			)[];
			/**
			 * @description Indicate the currency the caller requests to have used in all returned monetary values. Should be Used in conjunction with the element RateRequestType.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see available Currency codes</a><br>Note: Incorrect currency codes should not be supplied. The system ignores the incorrect currency code.
			 * @example USD
			 */
			preferredCurrency?: string;
			/**
			 * Format: int32
			 * @description For an MPS, this is the total number of packages in the shipment.Applicable for parent shipment for one label at a time shipments. <br>Example: 25
			 * @example 25
			 */
			totalPackageCount?: number;
			masterTrackingId?: components["schemas"]["MasterTrackingId"];
			/** @description These are one or more package-attribute descriptions, each of which describes an individual package, a group of identical packages, or (for the total-piece-total-weight case) common characteristics of all packages in the shipment.<ul><li>At least one instance containing the weight for at least one package is required for EXPRESS and GROUND shipments.</li><li>Single piece requests will have one RequestedPackageLineItem.</li><li>Multiple piece requests will have multiple RequestedPackageLineItems.</li><li>Maximum occurrences is 30.</li></ul> */
			requestedPackageLineItems: components["schemas"]["RequestedPackageLineItem"][];
		};
		/** @description This customs value is applicable for all items(or units) under the specified commodity */
		Money: {
			/**
			 * Format: double
			 * @description This is the amount. Maximum limit is 5 digits before decimal.<br>Example: 12.45
			 * @example 12.45
			 */
			amount?: number;
			/**
			 * @description This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>Click here to see Currency codes</a>
			 * @example USD
			 */
			currency?: string;
		};
		/** @description This customs value is applicable for all items(or units) under the specified commodity. */
		Customs_Money: {
			/**
			 * Format: double
			 * @description This is the amount. Maximum limit is 5 digits before decimal.<br>Example:  1556.25
			 * @example 1556.25
			 */
			amount?: number;
			/**
			 * @description This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>Click here to see Currency codes</a>
			 * @example USD
			 */
			currency?: string;
		};
		/**
		 * @description Indicate the Shipper contact details for this shipment.
		 * @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "90210",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "John Taylor",
		 *         "emailAddress": "sample@company.com",
		 *         "phoneExtension": "000",
		 *         "phoneNumber": "XXXX345671",
		 *         "companyName": "Fedex"
		 *       },
		 *       "tins": [
		 *         {
		 *           "number": "123567",
		 *           "tinType": "FEDERAL",
		 *           "usage": "usage",
		 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *         }
		 *       ]
		 *     }
		 */
		ShipperParty: {
			address: components["schemas"]["PartyAddress"];
			contact: components["schemas"]["PartyContact"];
			/** @description This is the tax identification number details. */
			tins?: components["schemas"]["TaxpayerIdentification"][];
		};
		/** @description Will indicate the party responsible for purchasing the goods shipped from the shipper to the recipient. The sold to party is not necessarily the recipient or the importer of record. The sold to party is relevant when the purchaser, rather than the recipient determines when certain customs regulations apply. */
		SoldToParty: {
			address?: components["schemas"]["PartyAddress"];
			contact?: components["schemas"]["PartyContact"];
			/** @description Used for adding the tax id */
			tins?: components["schemas"]["TaxpayerIdentification"][];
			/** @description Identification of a specific FedEx customer account. */
			accountNumber?: components["schemas"]["AccountNumber"];
		};
		/**
		 * @description This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
		 * @example {
		 *       "streetLines": [
		 *         "10 FedEx Parkway",
		 *         "Suite 302"
		 *       ],
		 *       "city": "Beverly Hills",
		 *       "stateOrProvinceCode": "CA",
		 *       "postalCode": "90210",
		 *       "countryCode": "US",
		 *       "residential": false
		 *     }
		 */
		PartyAddress: {
			/**
			 * @description Combination of number, street name, etc. At least one line is required for a valid physical address. Empty lines should not be included. Max Length is 35.<br>Example: [1550 Union Blvd,Suite 302]
			 * @example 1550 Union Blvd, Suite 302
			 */
			streetLines: string[];
			/**
			 * @description The name of city, town of the recipient.Max length is 35.<br>Example: Beverly Hills
			 * @example Beverly Hills
			 */
			city: string;
			/**
			 * @description The US States,Canada and Puerto Rico Province codes of the recipient. The Format and presence of this field may vary depending on the country.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA
			 * @example CA
			 */
			stateOrProvinceCode?: string;
			/**
			 * @description This is the postal code.<br>Note: This is Optional for non postal-aware countries. Maximum length is 10.<br>Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
			 * @example 90210
			 */
			postalCode?: string;
			/**
			 * @description This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
			 * @example US
			 */
			countryCode: string;
			/**
			 * @description Indicate whether this address is residential (as opposed to commercial).
			 * @example false
			 */
			residential?: boolean;
		};
		/**
		 * @description Indicate the contact details for this shipment.
		 * @example {
		 *       "personName": "John Taylor",
		 *       "emailAddress": "sample@company.com",
		 *       "phoneExtension": "91",
		 *       "phoneNumber": "1234567890",
		 *       "companyName": "Fedex"
		 *     }
		 */
		PartyContact: {
			/**
			 * @description Specify contact name. Maximum length is 70. <br>Note: Either the companyName or personName is mandatory.<br> Example: John Taylor
			 * @example John Taylor
			 */
			personName?: string;
			/**
			 * @description Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
			 * @example sample@company.com
			 */
			emailAddress?: string;
			/**
			 * @description Specify contact phone extension. Maximum length is 6. <br> Example: 1234
			 * @example 91
			 */
			phoneExtension?: string;
			/**
			 * @description The shipper's phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of '1' or '+1'.<br>Example: 918xxxxx890
			 * @example 918xxxxx890
			 */
			phoneNumber: string;
			/**
			 * @description Specify contact company name. Maximum length is 35. <br>Note: Either the companyName or personName is mandatory.
			 * @example Fedex
			 */
			companyName?: string;
		};
		/** @example {
		 *       "number": "123567",
		 *       "tinType": "FEDERAL",
		 *       "usage": "usage",
		 *       "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *       "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *     } */
		TaxpayerIdentification: {
			/**
			 * @description Specify tax ID number. Maximum length is 18. <br>Example: 123567
			 * @example 123567
			 */
			number?: string;
			/**
			 * @description Indicate the type of tax identification number.
			 * @example FEDERAL
			 * @enum {string}
			 */
			tinType?:
				| "PERSONAL_NATIONAL"
				| "PERSONAL_STATE"
				| "FEDERAL"
				| "BUSINESS_NATIONAL"
				| "BUSINESS_STATE"
				| "BUSINESS_UNION";
			/**
			 * @description Specify the reason for using the tax identification number in shipment processing.
			 * @example usage
			 */
			usage?: string;
			/**
			 * @description Specify the tax ID effective date.<br>Example: 2000-01-23T04:56:07.000+00:00
			 * @example 2000-01-23T04:56:07.000+00:00
			 */
			effectiveDate?: string;
			/**
			 * @description Specify the tax ID expiration date.<br>Example: 2000-01-23T04:56:07.000+00:00
			 * @example 2000-01-23T04:56:07.000+00:00
			 */
			expirationDate?: string;
		};
		/**
		 * @description The descriptive information of the recipient for the shipment and the physical location for the package destination.
		 * @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "90210",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "John Taylor",
		 *         "emailAddress": "sample@company.com",
		 *         "phoneExtension": "000",
		 *         "phoneNumber": "XXXX345671",
		 *         "companyName": "FedEx"
		 *       },
		 *       "tins": [
		 *         {
		 *           "number": "123567",
		 *           "tinType": "FEDERAL",
		 *           "usage": "usage",
		 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *         }
		 *       ],
		 *       "deliveryInstructions": "Delivery Instructions"
		 *     }
		 */
		RecipientsParty: {
			address: components["schemas"]["PartyAddress"];
			contact: components["schemas"]["PartyContact"];
			/** @description This is the tax identification number details. */
			tins?: components["schemas"]["TaxpayerIdentification"][];
			/**
			 * @description Specify the delivery instructions to be added with the shipment. Use with Ground Home Delivery.<br>Example: Delivery Instructions
			 * @example Instruction 1
			 */
			deliveryInstructions?: string;
		};
		/**
		 * @description Specifies the contact and address details of a location.
		 * @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "38127",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "person name",
		 *         "emailAddress": "email address",
		 *         "phoneNumber": "phone number",
		 *         "phoneExtension": "phone extension",
		 *         "companyName": "company name",
		 *         "faxNumber": "fax number"
		 *       }
		 *     }
		 */
		ContactAndAddress_1: {
			contact?: components["schemas"]["Contact_2"];
			address?: components["schemas"]["Address_1"];
		};
		/**
		 * @description Indicate the contact details of the shipper.
		 * @example {
		 *       "personName": "John Taylor",
		 *       "emailAddress": "sample@company.com",
		 *       "phoneNumber": "1234567890",
		 *       "phoneExtension": 1234,
		 *       "faxNumber": "1234567890",
		 *       "companyName": "Fedex"
		 *     }
		 */
		Contact_2: {
			/**
			 * @description Specify contact person name.<br>Recommended length is 70. <br>Note: There's no specific validation for the person name.<br> Example: John Taylor
			 * @example John Taylor
			 */
			personName?: string;
			/**
			 * @description Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
			 * @example sample@company.com
			 */
			emailAddress?: string;
			/**
			 * @description Specify contact phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890
			 * @example 1234567890
			 */
			phoneNumber?: string;
			/**
			 * @description Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234
			 * @example 91
			 */
			phoneExtension?: string;
			/**
			 * @description Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890
			 * @example 956123
			 */
			faxNumber?: string;
			/**
			 * @description Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.
			 * @example Fedex
			 */
			companyName?: string;
		};
		/** @description This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the U.S.). */
		Address_1: {
			/**
			 * @description This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]
			 * @example [
			 *       "Bldg. 10",
			 *       "10 FedEx Parkway"
			 *     ]
			 */
			streetLines?: string[];
			/**
			 * @description This is a placeholder for City Name.<br>Note: This is conditional and not required in all the requests.<br>Note: It is recommended for Express shipments for the most accurate ODA and OPA surcharges.<br>Example: Beverly Hills
			 * @example Beverly Hills
			 */
			city?: string;
			/**
			 * @description This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
			 * @example CA
			 */
			stateOrProvinceCode?: string;
			/**
			 * @description Indicate the Postal code. This is Optional for non postal-aware countries. Maximum length is 10.<br> Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
			 * @example 38127
			 */
			postalCode?: string;
			/**
			 * @description This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
			 * @example US
			 */
			countryCode?: string;
			/**
			 * @description Indicate whether this address is residential (as opposed to commercial).
			 * @example false
			 */
			residential?: boolean;
		};
		/**
		 * @description Specifies the payment details specifying the method and means of payment to FedEx for providing shipping services.
		 * @example {
		 *       "paymentType": "SENDER",
		 *       "payor": {
		 *         "responsibleParty": {
		 *           "address": {
		 *             "streetLines": [
		 *               "10 FedEx Parkway",
		 *               "Suite 302"
		 *             ],
		 *             "city": "Beverly Hills",
		 *             "stateOrProvinceCode": "CA",
		 *             "postalCode": "90210",
		 *             "countryCode": "US",
		 *             "residential": false
		 *           },
		 *           "contact": {
		 *             "personName": "John Taylor",
		 *             "emailAddress": "sample@company.com",
		 *             "phoneNumber": "XXXX567890",
		 *             "phoneExtension": "phone extension",
		 *             "companyName": "Fedex",
		 *             "faxNumber": "fax number"
		 *           },
		 *           "accountNumber": {
		 *             "value": "Your account number"
		 *           }
		 *         }
		 *       }
		 *     }
		 */
		Payment: {
			/**
			 * @description Specifies the payment Type. <br>Note: This is required for Express, Ground and SmartPost shipments.<br> The payment type COLLECT is applicable only for Ground shipments.
			 * @enum {string}
			 */
			paymentType: "SENDER" | "RECIPIENT" | "THIRD_PARTY" | "COLLECT";
			payor?: components["schemas"]["Payor"];
		};
		/**
		 * @description Payor is mandatory when the paymentType is RECIPIENT, THIRD_PARTY or COLLECT.
		 * @example {
		 *       "responsibleParty": {
		 *         "address": {
		 *           "streetLines": [
		 *             "10 FedEx Parkway",
		 *             "Suite 302"
		 *           ],
		 *           "city": "Beverly Hills",
		 *           "stateOrProvinceCode": "CA",
		 *           "postalCode": "90210",
		 *           "countryCode": "US",
		 *           "residential": false
		 *         },
		 *         "contact": {
		 *           "personName": "John Taylor",
		 *           "emailAddress": "sample@company.com",
		 *           "phoneNumber": "XXXX567890",
		 *           "phoneExtension": "phone extension",
		 *           "companyName": "Fedex",
		 *           "faxNumber": "fax number"
		 *         },
		 *         "accountNumber": {
		 *           "value": "Your account number"
		 *         }
		 *       }
		 *     }
		 */
		Payor: {
			responsibleParty: components["schemas"]["ResponsiblePartyParty"];
		};
		/**
		 * @description Indicate the payer Information responsible for paying for the shipment. <br>Note: ResponsibleParty accountNumber is required for ACCOUNT based services.
		 * @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "90210",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "John Taylor",
		 *         "emailAddress": "sample@company.com",
		 *         "phoneExtension": "000",
		 *         "phoneNumber": "XXXX345671",
		 *         "companyName": "FedEx"
		 *       },
		 *       "accountNumber": {
		 *         "value": "Your account number"
		 *       }
		 *     }
		 */
		ResponsiblePartyParty: {
			address?: components["schemas"]["PartyAddress"];
			contact?: components["schemas"]["PartyContact"];
			accountNumber: components["schemas"]["PartyAccountNumber"];
		};
		/**
		 * @description This is FedEx Account number details.
		 * @example {
		 *       "value": "Your account number"
		 *     }
		 */
		PartyAccountNumber: {
			/** @description The account number value.Value is required if the paymentType is RECIPIENT, THIRD_PARTY or COLLECT. */
			value?: string;
		};
		/** @description Specify the special services requested at the shipment level.<br>If the shipper is requesting a special service which requires additional data (such as the COD amount), the shipment special service type must be present in the specialServiceTypes collection, and the supporting detail must be provided in the appropriate sub-object below.<br>RETURN_SHIPMENT is required for creating return shipments. */
		ShipmentSpecialServicesRequested: {
			/**
			 * @description Special services requested for the shipment.<br>Example: <ul><li>HOLD_AT_LOCATION</li><li>RETURN_SHIPMENT</li><li>BROKER_SELECT_OPTION</li><li>CALL_BEFORE_DELIVERY</li><li>COD</li><li>CUSTOM_DELIVERY_WINDOW</li></ul><br><a onclick='loadDocReference("shipmentlevelspecialservicetypes")'>click here to see Shipment Special Service Types</a>
			 * @example [
			 *       "THIRD_PARTY_CONSIGNEE",
			 *       "PROTECTION_FROM_FREEZING"
			 *     ]
			 */
			specialServiceTypes?: string[];
			etdDetail?: components["schemas"]["ETDDetail"];
			returnShipmentDetail?: components["schemas"]["ReturnShipmentDetail"];
			deliveryOnInvoiceAcceptanceDetail?: components["schemas"]["DeliveryOnInvoiceAcceptanceDetail"];
			internationalTrafficInArmsRegulationsDetail?: components["schemas"]["InternationalTrafficInArmsRegulationsDetail"];
			pendingShipmentDetail?: components["schemas"]["PendingShipmentDetail"];
			holdAtLocationDetail?: components["schemas"]["HoldAtLocationDetail"];
			shipmentCODDetail?: components["schemas"]["ShipmentCODDetail"];
			shipmentDryIceDetail?: components["schemas"]["ShipmentDryIceDetail_1"];
			internationalControlledExportDetail?: components["schemas"]["InternationalControlledExportDetail"];
			homeDeliveryPremiumDetail?: components["schemas"]["HomeDeliveryPremiumDetail"];
		};
		/** @description Use this object to specify all information on how the electronic Trade document references used with the shipment. */
		ETDDetail: {
			/** @description Use this attribute to specify if the Trade documents will be uploaded post the shipment. */
			attributes?: "POST_SHIPMENT_UPLOAD_REQUESTED"[];
			/** @description Use this object to specify the details regarding already uploded document(s). This object is required if the documents are uploaded Pre-Shipment uploaded documents. It is recommended to provide values for all elements under this object. */
			attachedDocuments?: components["schemas"]["UploadDocumentReferenceDetail"][];
			/**
			 * @description Indicate the types of shipping documents produced for the shipper by FedEx. The types of shipping documents are copied back to the shipper in the shipment result data.<br>Note: For more information document types, refer business overview topic - <a href='#shippingandcustoms'><b>Shipping and Customs Documents.</b></a>
			 * @example [
			 *       "VICS_BILL_OF_LADING",
			 *       "GENERAL_AGENCY_AGREEMENT"
			 *     ]
			 */
			requestedDocumentTypes?: (
				| "CERTIFICATE_OF_ORIGIN"
				| "COMMERCIAL_INVOICE"
				| "CUSTOM_PACKAGE_DOCUMENT"
				| "CUSTOM_SHIPMENT_DOCUMENT"
				| "CUSTOMER_SPECIFIED_LABELS"
				| "EXPORT_DECLARATION"
				| "GENERAL_AGENCY_AGREEMENT"
				| "LABEL"
				| "USMCA_CERTIFICATION_OF_ORIGIN"
				| "OP_900"
				| "PENDING_SHIPMENT_EMAIL_NOTIFICATION"
				| "PRO_FORMA_INVOICE"
				| "RETURN_INSTRUCTIONS"
				| "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
			)[];
		};
		/** @description Specify the document upload reference details. */
		UploadDocumentReferenceDetail: {
			/**
			 * @description Specify document type for the uploaded document. It should match with the type of uploaded document associated with documentId.
			 * @example PRO_FORMA_INVOICE
			 * @enum {string}
			 */
			documentType?:
				| "CERTIFICATE_OF_ORIGIN"
				| "COMMERCIAL_INVOICE"
				| "ETD_LABEL"
				| "USMCA_CERTIFICATION_OF_ORIGIN"
				| "OTHER"
				| "PRO_FORMA_INVOICE"
				| "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN";
			/**
			 * @description Specify the reference for the uploaded document.This is for the customer to reference their uploaded docs when they retrieve them. Could be anything, order number, po number, whatever the customer used to tie the document to something they would use.<br>Note: Ensure to supply document references in case of  Pre-Shipment document upload.</br><br>Example: Reference
			 * @example DocumentReference
			 */
			documentReference?: string;
			/**
			 * @description Specify additional information about the uploaded document for better understanding.<br>Example: Certificate of Origin is uploaded for country of manufacturing verification.
			 * @example PRO FORMA INVOICE
			 */
			description?: string;
			/**
			 * @description This is the uploaded document ID value.<br>Example: 090927d680038c61
			 * @example 090927d680038c61
			 */
			documentId?: string;
		};
		/** @description Use this object for specifying return shipment details. */
		ReturnShipmentDetail: {
			returnEmailDetail?: components["schemas"]["ReturnEmailDetail"];
			rma?: components["schemas"]["ReturnMerchandiseAuthorization"];
			returnAssociationDetail?: components["schemas"]["ReturnAssociationDetail"];
			/**
			 * @description This is the return Type. Required to be set to PRINT_RETURN_LABEL for printed return label shipments. For email return label shipments returnType must be set to PENDING and pendingShipmentDetail must be set to EMAIL.
			 * @example PRINT_RETURN_LABEL
			 * @enum {string}
			 */
			returnType: "PENDING" | "PRINT_RETURN_LABEL";
		};
		/** @description These are email details for the return shipment. */
		ReturnEmailDetail: {
			/**
			 * @description This is the merchant phone number and required for Email Return Labels.<br>Example: 19012635656
			 * @example 19012635656
			 */
			merchantPhoneNumber: string;
			/** @description Indicate the allowed (merchant-authorized) special services which may be selected when the subsequent shipment is created.<br>Only services represented in EmailLabelAllowedSpecialServiceType will be controlled by this list. */
			allowedSpecialService?: ("SATURDAY_DELIVERY" | "SATURDAY_PICKUP")[];
		};
		/** @description This is a Return Merchant Authorization (RMA) for the return shipment.<br> Reason for the requirement is mandatory. */
		ReturnMerchandiseAuthorization: {
			/**
			 * @description Specify the reason for the return.<br> Note: There is no validation for reason. Recommended length is 60 alpha-numeric characters<br>Example: Wrong color or size.
			 * @example Wrong Size or Color
			 */
			reason?: string;
		};
		/** @description Specifies the details of an outbound shipment in order to associate the return shipment to it. */
		ReturnAssociationDetail: {
			/**
			 * @description This is the ship date for the outbound shipment associated with a return shipment. The format is YYYY-MM-DD.<br> Example: 2019-10-01
			 * @example 2019-10-01
			 */
			shipDatestamp?: string;
			/**
			 * @description This is the tracking number associated with this package.<br>Example: 49XXX0000XXX20032835
			 * @example 123456789
			 */
			trackingNumber?: string;
		};
		/** @description Indicate the Delivery On Invoice Acceptance detail. Recipient is required for Delivery On Invoice Special service. */
		DeliveryOnInvoiceAcceptanceDetail: {
			/** @description The descriptive data for the recipient of the shipment and the physical location for the shipment destination. */
			recipient?: components["schemas"]["RecipientsParty"] & {
				address: {
					/**
					 * @description This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]
					 * @example [
					 *       "23, RUE JOSEPH-DE MA"
					 *     ]
					 */
					streetLines: string[];
					/**
					 * @description The two-letter code used to identify a country. Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
					 * @example US
					 */
					countryCode: string;
				};
				contact: {
					/**
					 * @description Identifies the company this contact is associated with. Maximum length is 35.
					 * @example Fedex
					 */
					companyName: string;
					/**
					 * @description Identifies the contact person's name. Maximum length is 70.
					 * @example John Taylor
					 */
					personName: string;
					/**
					 * @description Identifies the phone number associated with this contact. Maximum length is 10.
					 * @example 1234567890
					 */
					phoneNumber: string;
				};
			};
		};
		/** @description These are International Traffic In Arms Regulations shipment service details. */
		InternationalTrafficInArmsRegulationsDetail: {
			/**
			 * @description The export or license number for the ITAR shipment.<br>Minimum length is 5 characters.<br>Maximum length is 21 characters.<br>Example: 9871234
			 * @example 9871234
			 */
			licenseOrExemptionNumber: string;
		};
		/** @description This object is used to specify the Pending Shipment Type for Email label. */
		PendingShipmentDetail: {
			/**
			 * @description This is Pending Shipment Type. Must include the value 'EMAIL' for email return shipments.<br>Not applicable for other types of shipments.
			 * @example EMAIL
			 * @enum {string}
			 */
			pendingShipmentType: "EMAIL";
			processingOptions?: components["schemas"]["PendingShipmentProcessingOptionsRequested"];
			recommendedDocumentSpecification?: components["schemas"]["RecommendedDocumentSpecification"];
			emailLabelDetail: components["schemas"]["EmailLabelDetail"];
			/** @description These are the reference document details with the shipment. */
			attachedDocuments?: components["schemas"]["UploadDocumentReferenceDetail_1"][];
			/**
			 * @description This is the Email Label expiration date. The maximum expiration date for an Email Return Label must be greater of equal to the day of the label request and not greater than 2 years in the future.<br>Example: 2020-01-01
			 * @example 2020-01-01
			 */
			expirationTimeStamp?: string;
		};
		/** @description Use this object to allow the Email Label shipment originator,  specify if the Email label shipment completer can make modifications to editable shipment data. */
		PendingShipmentProcessingOptionsRequested: {
			/**
			 * @description These are processing options.
			 * @example [
			 *       "ALLOW_MODIFICATIONS"
			 *     ]
			 */
			options?: "ALLOW_MODIFICATIONS"[];
		};
		/** @description These are documents that are recommended to be included with the shipment. */
		RecommendedDocumentSpecification: {
			/**
			 * @description This is the recommended document Type.<br><a onclick='loadDocReference("shipmentdocumenttype")'>click here to see shipment document type</a>
			 * @example ANTIQUE_STATEMENT_EUROPEAN_UNION
			 */
			types: (
				| "ANTIQUE_STATEMENT_EUROPEAN_UNION"
				| "ANTIQUE_STATEMENT_UNITED_STATES"
				| "ASSEMBLER_DECLARATION"
				| "BEARING_WORKSHEET"
				| "CERTIFICATE_OF_SHIPMENTS_TO_SYRIA"
				| "COMMERCIAL_INVOICE_FOR_THE_CARIBBEAN_COMMON_MARKET"
				| "CONIFEROUS_SOLID_WOOD_PACKAGING_MATERIAL_TO_THE_PEOPLES_REPUBLIC_OF_CHINA"
				| "DECLARATION_FOR_FREE_ENTRY_OF_RETURNED_AMERICAN_PRODUCTS"
				| "DECLARATION_OF_BIOLOGICAL_STANDARDS"
				| "DECLARATION_OF_IMPORTED_ELECTRONIC_PRODUCTS_SUBJECT_TO_RADIATION_CONTROL_STANDARD"
				| "ELECTRONIC_INTEGRATED_CIRCUIT_WORKSHEET"
				| "FILM_AND_VIDEO_CERTIFICATE"
				| "INTERIM_FOOTWEAR_INVOICE"
				| "USMCA_CERTIFICATION_OF_ORIGIN_CANADA_ENGLISH"
				| "USMCA_CERTIFICATION_OF_ORIGIN_CANADA_FRENCH"
				| "USMCA_CERTIFICATION_OF_ORIGIN_SPANISH"
				| "USMCA_CERTIFICATION_OF_ORIGIN_UNITED_STATES"
				| "PACKING_LIST"
				| "PRINTED_CIRCUIT_BOARD_WORKSHEET"
				| "REPAIRED_WATCH_BREAKOUT_WORKSHEET"
				| "STATEMENT_REGARDING_THE_IMPORT_OF_RADIO_FREQUENCY_DEVICES"
				| "TOXIC_SUBSTANCES_CONTROL_ACT"
				| "UNITED_STATES_CARIBBEAN_BASIN_TRADE_PARTNERSHIP_ACT_CERTIFICATE_OF_ORIGIN_TEXTILES"
				| "UNITED_STATES_CARIBBEAN_BASIN_TRADE_PARTNERSHIP_ACT_CERTIFICATE_OF_ORIGIN_NON_TEXTILES"
				| "UNITED_STATES_NEW_WATCH_WORKSHEET"
				| "UNITED_STATES_WATCH_REPAIR_DECLARATION"
			)[];
		};
		/** @description These are specific information about the pending email label.<br>Required when PendingShipmentType is EMAIL.<br>Not applicable for CreateTag. */
		EmailLabelDetail: {
			/** @description This is Email label recipient email address, shipment role, & language locale details. Atleast one entry must be specified. */
			recipients?: components["schemas"]["EmailRecipient"][];
			/**
			 * @description This is an optional personalized message to be included in the email to the recipient.
			 * @example your optional message
			 */
			message?: string;
		};
		/** @description These are the recipient details for the online email return label. */
		EmailRecipient: {
			/**
			 * @description This is recipient email address for notifying the return label. Maximum length 200 characters.<br> Example: neena@abc.com
			 * @example neena@fedex.com
			 */
			emailAddress: string;
			optionsRequested?: components["schemas"]["EmailOptionsRequested"];
			/**
			 * @description This is to specify Recipient role in the shipment.Shipment completor role is needed when we pass shipment initiator. We cannot use shipment initiator alone.
			 * @enum {string}
			 */
			role: "SHIPMENT_COMPLETOR" | "SHIPMENT_INITIATOR";
			/**
			 * @description These are locale details.<br>Example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
			 * @example en_US
			 */
			locale?: string;
		};
		/** @description These are to indicate how the email notifications for the pending shipment to be processed. */
		EmailOptionsRequested: {
			/**
			 * @description These are the processing options.
			 * @example [
			 *       "PRODUCE_PAPERLESS_SHIPPING_FORMAT",
			 *       "SUPPRESS_ACCESS_EMAILS"
			 *     ]
			 */
			options?: (
				| "PRODUCE_PAPERLESS_SHIPPING_FORMAT"
				| "SUPPRESS_ADDITIONAL_LANGUAGES"
				| "SUPPRESS_ACCESS_EMAILS"
			)[];
		};
		/** @description Specify the document upload reference details. */
		UploadDocumentReferenceDetail_1: {
			/**
			 * @description This is the uploaded document type.
			 * @example PRO_FORMA_INVOICE
			 * @enum {string}
			 */
			documentType?:
				| "CERTIFICATE_OF_ORIGIN"
				| "COMMERCIAL_INVOICE"
				| "ETD_LABEL"
				| "USMCA_CERTIFICATION_OF_ORIGIN"
				| "NET_RATE_SHEET"
				| "OTHER"
				| "PRO_FORMA_INVOICE"
				| "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN";
			/**
			 * @description Specify the reference for the uploaded document.<br>Example: Reference
			 * @example DocumentReference
			 */
			documentReference?: string;
			/**
			 * @description This is the document description of the attached document.<br>Example: PRO FORMA INVOICE
			 * @example PRO FORMA INVOICE
			 */
			description?: string;
			/**
			 * @description This is the uploaded document ID value.<br>Example: 090927d680038c61
			 * @example 090927d680038c61
			 */
			documentId?: string;
		};
		/** @description Use this object to specify required information for a shipment to be held at destination FedEx location.<br><i>Note: This object HoldAtLocationDetail is Required, when HOLD_AT_LOCATION is chosen in the specialServiceTypes.</i> */
		HoldAtLocationDetail: {
			/**
			 * @description This is an alphanumeric identifier used for Location/Facility Identification.<br>Example: YBZA<br>Note: <ul><li>For HAL Shipment, Location ID is <b>REQUIRED</b> to ensure packages are delivered to the right location.</li><li>Use endpoint [<b>Find Location</b>] in [<b>Location Search API</b>], to find the correct location ID for your shipment.</li></ul>
			 * @example YBZA
			 */
			locationId: string;
			locationContactAndAddress?: components["schemas"]["ContactAndAddress"];
			/**
			 * @description Specifies the type of facility at which package/shipment is to be held.
			 * @example FEDEX_ONSITE
			 * @enum {string}
			 */
			locationType?:
				| "FEDEX_AUTHORIZED_SHIP_CENTER"
				| "FEDEX_OFFICE"
				| "FEDEX_SELF_SERVICE_LOCATION"
				| "FEDEX_STAFFED"
				| "RETAIL_ALLICANCE_LOCATION"
				| "FEDEX_GROUND_TERMINAL"
				| "FEDEX_ONSITE";
		};
		/**
		 * @description Specifies the contact and address details of a location.
		 * @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "38127",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "person name",
		 *         "emailAddress": "email address",
		 *         "phoneNumber": "phone number",
		 *         "phoneExtension": "phone extension",
		 *         "companyName": "company name",
		 *         "faxNumber": "fax number"
		 *       }
		 *     }
		 */
		ContactAndAddress: {
			contact?: components["schemas"]["Contact_1"];
			address?: components["schemas"]["Address_1"];
		};
		/**
		 * @description Indicate the contact details of the shipper.
		 * @example {
		 *       "personName": "John Taylor",
		 *       "emailAddress": "sample@company.com",
		 *       "phoneNumber": "1234567890",
		 *       "phoneExtension": 1234,
		 *       "faxNumber": "1234567890",
		 *       "companyName": "Fedex"
		 *     }
		 */
		Contact_1: {
			/**
			 * @description Specify contact person name.<br>Recommended length is 70. <br>Note: There's no specific validation for the person name.<br> Example: John Taylor
			 * @example John Taylor
			 */
			personName?: string;
			/**
			 * @description Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
			 * @example sample@company.com
			 */
			emailAddress?: string;
			/**
			 * @description Contact person's phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of '1' or '+1'.<br>Example: 918xxxxx890
			 * @example 918xxxxx890
			 */
			phoneNumber?: string;
			/**
			 * @description Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234
			 * @example 91
			 */
			phoneExtension?: string;
			/**
			 * @description Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890
			 * @example 956123
			 */
			faxNumber?: string;
			/**
			 * @description Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.
			 * @example Fedex
			 */
			companyName?: string;
		};
		/** @description This is the shipment level COD detail. */
		ShipmentCODDetail: {
			addTransportationChargesDetail?: components["schemas"]["CODTransportationChargesDetail"];
			/** @description Descriptive data of the Cash On Delivery along with their details of the physical location. */
			codRecipient?: components["schemas"]["Party_1"];
			/**
			 * @description Specify the name of the person or company receiving the secured/unsecured funds payment.
			 * @example remitToName
			 */
			remitToName?: string;
			/**
			 * @description Identifies the type of funds FedEx should collect upon shipment delivery
			 * @enum {string}
			 */
			codCollectionType:
				| "ANY"
				| "CASH"
				| "GUARANTEED_FUNDS"
				| "COMPANY_CHECK"
				| "PERSONAL_CHECK";
			financialInstitutionContactAndAddress?: components["schemas"]["ContactAndAddress"];
			/** @description Indicate the COD collection amount. */
			codCollectionAmount?: components["schemas"]["Money"];
			/**
			 * @description Indicate return reference type information to include on the COD return shipping label.
			 * @enum {string}
			 */
			returnReferenceIndicatorType?:
				| "INVOICE"
				| "PO"
				| "REFERENCE"
				| "TRACKING";
			/** @description Indicate the COD amount for this shipment. */
			shipmentCodAmount?: components["schemas"]["Money"];
		};
		/** @description Use this object to specify C.O.D. transportation charges. */
		CODTransportationChargesDetail: {
			/**
			 * @description Specify the Rate Type used.
			 * @enum {string}
			 */
			rateType?: "ACCOUNT" | "CURRENT" | "CUSTOM";
			/**
			 * @description Specify which level the rate to be applied.
			 * @enum {string}
			 */
			rateLevelType?: "BUNDLED_RATE" | "INDIVIDUAL_PACKAGE_RATE";
			/**
			 * @description Specify which level the charges to be applied.
			 * @enum {string}
			 */
			chargeLevelType?: "CURRENT_PACKAGE" | "SUM_OF_PACKAGES";
			/**
			 * @description Specify Charge type.
			 * @enum {string}
			 */
			chargeType?:
				| "COD_SURCHARGE"
				| "NET_CHARGE"
				| "NET_FREIGHT"
				| "TOTAL_CUSTOMER_CHARGE";
		};
		/** @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "90210",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "John Taylor",
		 *         "emailAddress": "sample@company.com",
		 *         "phoneExtension": "000",
		 *         "phoneNumber": "XXXX345671",
		 *         "companyName": "Fedex"
		 *       },
		 *       "accountNumber": {
		 *         "value": "Your account number"
		 *       },
		 *       "tins": [
		 *         {
		 *           "number": "123567",
		 *           "tinType": "FEDERAL",
		 *           "usage": "usage",
		 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *         }
		 *       ]
		 *     } */
		Party_1: {
			address?: components["schemas"]["PartyAddress"];
			contact?: components["schemas"]["PartyContact"];
			accountNumber?: components["schemas"]["PartyAccountNumber"];
			/** @description This is the tax identification number details. */
			tins?: components["schemas"]["TaxpayerIdentification"][];
		};
		/** @description This is the descriptive data required for a FedEx shipment containing dangerous materials. This element is required when SpecialServiceType DRY_ICE is selected.<p><i>Note:<ul><li>Dry Ice is a Package level Special Service for Domestic and International shipments.</li><li>Dry Ice must be declared at both Shipment and Package level for International MPS shipments to print the compliance statement on Airway Bill labels.</li></ul></i></p> */
		ShipmentDryIceDetail_1: {
			totalWeight?: components["schemas"]["Weight_1"];
			/**
			 * Format: int32
			 * @description Indicates the total number of packages in the shipment that contain dry ice.<br>Example: 12
			 * @example 12
			 */
			packageCount?: number;
		};
		/**
		 * @description These are the package weight details.
		 * @example {
		 *       "units": "LB",
		 *       "value": 10
		 *     }
		 */
		Weight_1: {
			/**
			 * @description This is the package weight unit. For Dry Ice the unit of measure is KG.
			 * @example LB
			 * @enum {string}
			 */
			units?: "KG" | "LB";
			/**
			 * Format: double
			 * @description Weight Value.<br> Example: 68.25<br><a href='https://developer.fedex.com/api/en-us/guides/api-reference.html#packagetypes' target='_blank'>Click here to see Weight Values</a>.
			 * @example 68.25
			 */
			value?: number;
		};
		/** @description Use this object to specify International Controlled Export shipment Details.<br>Note: licenseOrPermitExpirationDate and licenseOrPermitNumber are not required when type is WAREHOUSE_WITHDRAWAL. */
		InternationalControlledExportDetail: {
			/**
			 * @description Indicate the expiration date for the license or permit. The format is YYYY-MM-DD.<br>Example: "2019-12-03"
			 * @example 2019-12-03
			 */
			licenseOrPermitExpirationDate?: string;
			/**
			 * @description Indicate License Or Permit Number for the commodity being exported.<br>Example: 11
			 * @example 11
			 */
			licenseOrPermitNumber?: string;
			/**
			 * @description Indicate Entry Number for the export.<br>Example: 125
			 * @example 125
			 */
			entryNumber?: string;
			/**
			 * @description Indicate the Foreign Trade Zone Code.<br>Example: US
			 * @example US
			 */
			foreignTradeZoneCode?: string;
			/**
			 * @description Indicate International Controlled Export Type.
			 * @example WAREHOUSE_WITHDRAWAL
			 * @enum {string}
			 */
			type:
				| "DEA_036"
				| "DEA_236"
				| "DSP_05"
				| "DSP_61"
				| "DSP_73"
				| "DSP_85"
				| "DSP_LICENSE_AGREEMENT"
				| "WAREHOUSE_WITHDRAWAL";
		};
		/** @description These are Special service elements for FedEx Ground Home Delivery shipments. If selected, element homedeliveryPremiumType is mandatory.  */
		HomeDeliveryPremiumDetail: {
			phoneNumber?: components["schemas"]["PhoneNumber1"];
			/**
			 * @description This is delivery date. Required for FedEx Date Certain Home Delivery. Valid dates are Monday to Sunday. <br>There may be a delay in delivery on Sundays to locations that are geographically difficult to access.<br>Example: 2019-06-26
			 * @example 2019-06-26
			 */
			deliveryDate?: string;
			/**
			 * @description This is Home Delivery Premium Type. It allows to specify additional premimum service options for the home delivery shipment. Can specify Evening delivery or a Date certain, or can specify appointment for the delivery.
			 * @example APPOINTMENT
			 * @enum {string}
			 */
			homedeliveryPremiumType?: "APPOINTMENT" | "DATE_CERTAIN" | "EVENING";
		};
		/**
		 * @description Indicate the phone number. Only numeric values allowed.<br> Note that phoneNumber is mandatory when homedeliveryPremiumType is DATE_CERTAIN or EVENING.
		 * @example {
		 *       "areaCode": "901",
		 *       "localNumber": "3575012",
		 *       "extension": "200",
		 *       "personalIdentificationNumber": "98712345"
		 *     }
		 */
		PhoneNumber1: {
			/** @description Indicate the area code for the phone number. */
			areaCode?: string;
			/** @description Indicate the local phone number for contacting in the event of an emergency. Maximum length  is 10. */
			localNumber?: string;
			/** @description Indicate the extension for the phone number. */
			extension?: string;
			/** @description Indicate the Personal Identification Number associated with the phone number. */
			personalIdentificationNumber?: string;
		};
		/** @description This is used to provide eMail notification information.. */
		ShipShipmentEMailNotificationDetail: {
			/**
			 * @description This is the shipment Notification Aggregation Type.
			 * @example PER_PACKAGE
			 * @enum {string}
			 */
			aggregationType?: "PER_PACKAGE" | "PER_SHIPMENT";
			/** @description These are email notification recipient details. */
			emailNotificationRecipients?: components["schemas"]["ShipShipmentEmailNotificationRecipient"][];
			/**
			 * @description This is your personal message for the email.<br>Note: The maximum personal message character limit depends on the element notificationFormatType values:<ul><li>If notificationFormatType is TEXT, then only 120 characters printed on the email</li><li>If notificationFormatType is HTML, then 500 characters printed on the email</li></ul><br>Example: This is concerning the order 123456 of 26 July 2021 - art no 34324-23 Teddy Bear, brown
			 * @example your personal message here
			 */
			personalMessage?: string;
		};
		/** @description These are recipient details for receiving email notification. */
		ShipShipmentEmailNotificationRecipient: {
			/**
			 * @description Specify the recipient name.<br>Example: Joe Smith
			 * @example Joe Smith
			 */
			name?: string;
			/**
			 * @description Specify the recipient type for email notification.
			 * @example SHIPPER
			 * @enum {string}
			 */
			emailNotificationRecipientType:
				| "BROKER"
				| "OTHER"
				| "RECIPIENT"
				| "SHIPPER"
				| "THIRD_PARTY";
			/**
			 * @description Specify the recipient email address.<br>Example: xyz@aol.com
			 * @example jsmith3@aol.com
			 */
			emailAddress: string;
			/**
			 * @description This is the format for the email notification. Either HTML or plain text can be provided.<br>Example: TEXT
			 * @example TEXT
			 * @enum {string}
			 */
			notificationFormatType?: "HTML" | "TEXT";
			/**
			 * @description Indicate the type of notification that will be sent as an email<br>Example: EMAIL
			 * @example EMAIL
			 * @enum {string}
			 */
			notificationType?: "EMAIL";
			/**
			 * @description These are the locale details for email.<br>Example: en_US, fr_CA, es_MX,.etc.<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
			 * @example en_US
			 */
			locale?: string;
			/**
			 * @description These are to specify the notification event types.<br> Example: [ON_PICKUP_DRIVER_ARRIVED, ON_SHIPMENT]<br><a onclick='loadDocReference("notificationeventtypes")'>Click here for more information on Notification Event Types.</a>
			 * @example [
			 *       "ON_PICKUP_DRIVER_ARRIVED",
			 *       "ON_SHIPMENT"
			 *     ]
			 */
			notificationEventType?: (
				| "ON_DELIVERY"
				| "ON_EXCEPTION"
				| "ON_SHIPMENT"
				| "ON_TENDER"
				| "ON_ESTIMATED_DELIVERY"
				| "ON_PICKUP_DRIVER_ARRIVED"
				| "ON_PICKUP_DRIVER_ASSIGNED"
				| "ON_PICKUP_DRIVER_DEPARTED"
				| "ON_PICKUP_DRIVER_EN_ROUTE"
			)[];
		};
		/** @description Indicates the advance booking number, shipper load /count and packing list details. This details must be provided by the user during freight shipment. */
		ExpressFreightDetail: {
			/**
			 * @description This is an advanced booking number that must be acquired through the appropriate channel in the shipment origin country. Without the booking number pickup and space allocation for the Express Freight shipment are not guaranteed. <br>Minimum length: 5 digits <br> Maximum length: 12 digits  <br>Example: XXXX56789812
			 * @example 123456789812
			 */
			bookingConfirmationNumber?: string;
			/**
			 * Format: int32
			 * @description Indicates the content of a container were loaded and counted by the shipper.<br>Minimum length: 1 digits <br> Maximum length: 5 digits <br>Example:  If a skid has 32 small boxes on it that are shrinkwrapped, the shippersLoadAndCount should be “32”
			 * @example 123
			 */
			shippersLoadAndCount?: number;
			/**
			 * @description This indicates whether or not the Packing List is enclosed with the shipment. A packing list is a document that includes details about the contents of a package. <br> Example: true
			 * @example true
			 */
			packingListEnclosed?: boolean;
		};
		/** @description Indicate the details about how to calculate variable handling charges at the shipment level. They can be based on a percentage of the shipping charges or a fixed amount. If indicated, element rateLevelType is required. */
		VariableHandlingChargeDetail: {
			/**
			 * @description The rate type indicates what type of rate request is being returned; account, preferred, incentive, etc.
			 * @example PREFERRED_CURRENCY
			 * @enum {string}
			 */
			rateType?:
				| "ACCOUNT"
				| "ACTUAL"
				| "CURRENT"
				| "CUSTOM"
				| "LIST"
				| "INCENTIVE"
				| "PREFERRED"
				| "PREFERRED_INCENTIVE"
				| "PREFERRED_CURRENCY";
			/**
			 * Format: double
			 * @description This is the variable handling percentage. If the percent value is mentioned as 10, it means 10%(multiplier of 0.1).<br>Example: 12.45
			 * @example 12.45
			 */
			percentValue?: number;
			/**
			 * @description indicates whether or not the rating is being done at the package level, or if the packages are bundled together. At the package level, charges are applied based on the details of each individual package. If they are bundled, one package is chosen as the parent and charges are applied based on that one package.
			 * @example INDIVIDUAL_PACKAGE_RATE
			 * @enum {string}
			 */
			rateLevelType?: "BUNDLED_RATE" | "INDIVIDUAL_PACKAGE_RATE";
			/** @description This is to specify a fixed handling charge on the shipment. The element allows entry of 7 characters before the decimal and 2 characters following the decimal. <br>Example: 5.00. */
			fixedValue?: components["schemas"]["Money"] & {
				/** @description fixed variable handling charge amount */
				amount: number;
				/** @description fixed variable handling charge currency type<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a> */
				currency: string;
			};
			/**
			 * @description Specify the charge type upon which the variable handling percentage amount is calculated.
			 * @example NET_CHARGE_EXCLUDING_TAXES
			 * @enum {string}
			 */
			rateElementBasis?:
				| "NET_CHARGE"
				| "NET_FREIGHT"
				| "BASE_CHARGE"
				| "NET_CHARGE_EXCLUDING_TAXES";
		};
		/** @description These are customs clearance details. Required for International and intra-country Shipments. */
		CustomsClearanceDetail: {
			/**
			 * @description These are the regulatory controls applicable to the shipment.
			 * @example NOT_IN_FREE_CIRCULATION
			 */
			regulatoryControls?: (
				| "FOOD_OR_PERISHABLE"
				| "USMCA"
				| "NOT_APPLICABLE_FOR_LOW_VALUE_CUSTOMS_EXCEPTIONS"
				| "NOT_IN_FREE_CIRCULATION"
			)[];
			/** @description Specify broker information. Use this option only if you are using Broker Select Option for your shipment. A country code must be specified in addition to one of the following address items: postal code, city, or location id. */
			brokers?: components["schemas"]["BrokerDetail"][];
			commercialInvoice: components["schemas"]["CommercialInvoice"];
			/**
			 * @description Specify the risk owner for the Freight shipment.This element is only mandatory or valid for Intra India shipments.
			 * @example OWN_RISK
			 * @enum {string}
			 */
			freightOnValue?: "CARRIER_RISK" | "OWN_RISK";
			dutiesPayment?: components["schemas"]["Payment_1"];
			/** @description Indicates the details about the dutiable packages. Maximum upto 999 commodities per shipment. */
			commodities: components["schemas"]["Commodity"][];
			/**
			 * @description Used to specify if a shipment is document shipment or not. Used only for International Express document shipments. Default value is false.
			 * @example true
			 */
			isDocumentOnly?: boolean;
			recipientCustomsId?: components["schemas"]["RecipientCustomsId"];
			customsOption?: components["schemas"]["CustomsOptionDetail"];
			/** @description The descriptive data for the importer of Record for the shipment and their physical address, contact and account number information. */
			importerOfRecord?: components["schemas"]["Party_1"];
			/**
			 * @description This is the locale for generated document.<br>Example: en_US<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
			 * @example en_US
			 */
			generatedDocumentLocale?: string;
			exportDetail?: components["schemas"]["ExportDetail"];
			/** @description This is the total customs value. */
			totalCustomsValue?: components["schemas"]["Money"];
			/** @description Specify if the transacting parties are related. */
			partiesToTransactionAreRelated?: boolean;
			declarationStatementDetail?: components["schemas"]["CustomsDeclarationStatementDetail"];
			/** @description Specify insurance charges if applicable. <br><i>Note: FedEx does not provide insurance of any kind.</i> */
			insuranceCharge?: components["schemas"]["Money"];
		};
		/**
		 * @description These are broker details for the shipment.
		 * @example {
		 *       "broker": {
		 *         "address": {
		 *           "streetLines": [
		 *             "10 FedEx Parkway",
		 *             "Suite 302"
		 *           ],
		 *           "city": "Beverly Hills",
		 *           "stateOrProvinceCode": "CA",
		 *           "postalCode": "90210",
		 *           "countryCode": "US",
		 *           "residential": false
		 *         },
		 *         "contact": {
		 *           "personName": "John Taylor",
		 *           "emailAddress": "sample@company.com",
		 *           "phoneNumber": "1234567890",
		 *           "phoneExtension": 91,
		 *           "companyName": "Fedex",
		 *           "faxNumber": 1234567
		 *         },
		 *         "accountNumber": {
		 *           "value": "Your account number"
		 *         },
		 *         "tins": [
		 *           {
		 *             "number": "number",
		 *             "tinType": "FEDERAL",
		 *             "usage": "usage",
		 *             "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *             "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *           }
		 *         ],
		 *         "deliveryInstructions": "deliveryInstructions"
		 *       },
		 *       "type": "IMPORT"
		 *     }
		 */
		BrokerDetail: {
			/** @description These are broker details for the shipment with physical address, contact and account number information. */
			broker?: components["schemas"]["Party_1"] & {
				/** @description Specifies broker address details. */
				address: unknown;
				/** @description Specifies broker contact details. */
				contact: unknown;
			};
			/**
			 * @description Identifies the type of broker.
			 * @example IMPORT
			 * @enum {string}
			 */
			type?: "IMPORT";
		};
		/** @description Use this object to provide Commercial Invoice details. This element is required for electronic upload of CI data. It will serve to create/transmit an electronic Commercial Invoice through the FedEx system.<br>Customers are responsible for printing their own Commercial Invoice.<br>If you would like FedEx to generate a Commercial Invoice and transmit it to Customs for clearance purposes, you need to specify that in the ETDDetail/RequestedDocumentCopies element.<br>Supports maximum of 99 commodity line items. */
		CommercialInvoice: {
			/**
			 * @description The originator name that will populate the Commercial Invoice (or Pro Forma).
			 * @example originator Name
			 */
			originatorName?: string;
			/**
			 * @description The comments that will populate the Commercial Invoice (or Pro Forma). Only the comments specified in the first two indexes of the array will be printed on the invoice and other comments would be ignored as the limitation is set for only two indexes. It considers the comment which is in the first index as a Special Instructions, Hence the comment at first index will be printed under special instructions and the other will be printed at comments section in the Commercial Invoice Document. <br>Example: comments
			 * @example [
			 *       "optional comments for the commercial invoice"
			 *     ]
			 */
			comments?: string[];
			/** @description These are additional customer reference data for commercial invoice. */
			customerReferences?: components["schemas"]["CustomerReference"][];
			/** @description Indicate the taxes or miscellaneous charges(other than freight charges or insurance charges) that are associated with the shipment. */
			taxesOrMiscellaneousCharge?: components["schemas"]["Money"];
			/**
			 * @description Indicate the type of taxes Or miscellaneous charge.
			 * @example COMMISSIONS
			 * @enum {string}
			 */
			taxesOrMiscellaneousChargeType?:
				| "COMMISSIONS"
				| "DISCOUNTS"
				| "HANDLING_FEES"
				| "OTHER"
				| "ROYALTIES_AND_LICENSE_FEES"
				| "TAXES";
			/** @description Indicate the freight charge. */
			freightCharge?: components["schemas"]["Money"];
			/** @description Indicate the packing cost. */
			packingCosts?: components["schemas"]["Money"];
			/** @description Indicate the handling cost. */
			handlingCosts?: components["schemas"]["Money"];
			/**
			 * @description This is the declaration statement which will populate the Commercial Invoice (or Pro Forma).<br>Maximum length is 554.<br>Example: declarationStatement
			 * @example declarationStatement
			 */
			declarationStatement?: string;
			/**
			 * @description Specify terms Of Sale that will be populated on the Commercial Invoice (or Pro Forma). Maximum length is 3<br>Valid values are:<ul><li>FCA/FOB (Free Carrier/Free On Board): Seller is responsible for all costs of delivering goods to destination. (Default)</li><li>CIP (Costs, Insurance Paid): Seller is responsible for miscellaneous charges to destination.</li><li>CPT (Carriage Paid To): Buyer is responsible for insurance.</li><li>EXW (Ex Works): Seller makes goods available to buyer. Buyer is responsible for delivering goods to destination.</li><li>DDU (Delivered Duty Unpaid): Seller is responsible for delivering goods to destination. Buyer is responsible for clearing goods through Bureau of Customs and Border Protection.</li><li>DDP (Delivered Duty Paid): Seller is responsible for delivering goods to destination, including duties, taxes, and miscellaneous fees.</li><li>DAP (Delivered at Place): Seller pays for carriage to the named place, except for costs related to import clearance, and assumes all risks prior to the point that the goods are ready for unloading by the buyer.</li><li>DPU(Deliver at Place of Unloading)</li></ul>
			 * @example FCA
			 */
			termsOfSale?: string;
			/**
			 * @description These are special instructions that will be populated on the Commercial Invoice (or Pro Forma).<br>Example: specialInstructions
			 * @example specialInstructions"
			 */
			specialInstructions?: string;
			/**
			 * @description This is the reason for the shipment. <br>Note: SOLD is not a valid purpose for a Proforma Invoice.
			 * @example REPAIR_AND_RETURN
			 * @enum {string}
			 */
			shipmentPurpose?:
				| "GIFT"
				| "NOT_SOLD"
				| "PERSONAL_EFFECTS"
				| "REPAIR_AND_RETURN"
				| "SAMPLE"
				| "SOLD";
			emailNotificationDetail?: components["schemas"]["ShipEmailDispositionDetail"];
		};
		CustomerReference: {
			/**
			 * @description This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li></ul> <br>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference("customerreferencetypes")'>For more information, click here for Cutsomer References ENUMs</a>
			 * @example INVOICE_NUMBER
			 * @enum {string}
			 */
			customerReferenceType?:
				| "CUSTOMER_REFERENCE"
				| "DEPARTMENT_NUMBER"
				| "INVOICE_NUMBER"
				| "P_O_NUMBER"
				| "INTRACOUNTRY_REGULATORY_REFERENCE"
				| "RMA_ASSOCIATION";
			/**
			 * @description This is a customer reference type value.<br>Example: 3686 <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA value sent by the customer is returned on the label in human readable form but also as a barcode. RMA_ASSOCIATION only prints on the label as a barcode for a Return shipment.</ul>NOTE:<ul><li> INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.</li><li>  Maximum length varies for value field depending on customerReferenceType.</li></ul> Maximum length for value is as follows: <ul><li>CUSTOMER_REFERENCE - 40(Express), 30(Ground)</li><li>DEPARTMENT_NUMBER - 30</li><li>INVOICE_NUMBER - 30</li><li>P_O_NUMBER - 30</li><li>INTRACOUNTRY_REGULATORY_REFERENCE - 30</li><li>RMA_ASSOCIATION - 20</li>
			 * @example 3686
			 */
			value?: string;
		};
		/** @description These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy. */
		ShipEmailDispositionDetail: {
			/**
			 * @description This is email Address.<br>Example: xxxx@xxx.com
			 * @example neena@fedex.com
			 */
			emailAddress?: string;
			/**
			 * @description Specify the email status.<br>Example: EMAILED
			 * @example EMAILED
			 */
			type?: string;
			/**
			 * @description Specify the recipient Type.<br>Example: SHIPPER/BROKER
			 * @example SHIPPER
			 */
			recipientType?: string;
		};
		/**
		 * @description This is a payment type, basically indicates who is the payor for the shipment.Conditional required for International Shipments
		 * @example {
		 *       "payor": {
		 *         "responsibleParty": {
		 *           "address": {
		 *             "streetLines": [
		 *               "10 FedEx Parkway",
		 *               "Suite 302"
		 *             ],
		 *             "city": "Beverly Hills",
		 *             "stateOrProvinceCode": "CA",
		 *             "postalCode": "38127",
		 *             "countryCode": "US",
		 *             "residential": false
		 *           },
		 *           "contact": {
		 *             "personName": "John Taylor",
		 *             "emailAddress": "sample@company.com",
		 *             "phoneNumber": "1234567890",
		 *             "phoneExtension": "phone extension",
		 *             "companyName": "Fedex",
		 *             "faxNumber": "fax number"
		 *           },
		 *           "accountNumber": {
		 *             "value": "Your account number"
		 *           },
		 *           "tins": [
		 *             {
		 *               "number": "number",
		 *               "tinType": "FEDERAL",
		 *               "usage": "usage",
		 *               "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *               "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *             },
		 *             {
		 *               "number": "number",
		 *               "tinType": "FEDERAL",
		 *               "usage": "usage",
		 *               "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *               "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *             }
		 *           ]
		 *         }
		 *       },
		 *       "billingDetails": {
		 *         "billingCode": "billingCode",
		 *         "billingType": "billingType",
		 *         "aliasId": "aliasId",
		 *         "accountNickname": "accountNickname",
		 *         "accountNumber": "Your account number",
		 *         "accountNumberCountryCode": "US"
		 *       },
		 *       "paymentType": "SENDER"
		 *     }
		 */
		Payment_1: {
			payor?: components["schemas"]["Payor_1"];
			billingDetails?: components["schemas"]["BillingDetails"];
			/**
			 * @description This is a payment type, basically indicates who is the payor for the shipment.<br>Required for Express and Ground.<br>The payment type COLLECT is applicable only for Ground shipments.
			 * @enum {string}
			 */
			paymentType?: "SENDER" | "RECIPIENT" | "THIRD_PARTY" | "COLLECT";
		};
		/**
		 * @description Information about the person who is paying for the shipment. Not applicable for credit card payment.
		 * @example {
		 *       "responsibleParty": {
		 *         "address": {
		 *           "streetLines": [
		 *             "10 FedEx Parkway",
		 *             "Suite 302"
		 *           ],
		 *           "city": "Beverly Hills",
		 *           "stateOrProvinceCode": "CA",
		 *           "postalCode": "38127",
		 *           "countryCode": "US",
		 *           "residential": false
		 *         },
		 *         "contact": {
		 *           "personName": "John Taylor",
		 *           "emailAddress": "sample@company.com",
		 *           "phoneNumber": "1234567890",
		 *           "phoneExtension": "phone extension",
		 *           "companyName": "Fedex",
		 *           "faxNumber": "fax number"
		 *         },
		 *         "accountNumber": {
		 *           "value": "Your account number"
		 *         },
		 *         "tins": [
		 *           {
		 *             "number": "number",
		 *             "tinType": "FEDERAL",
		 *             "usage": "usage",
		 *             "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *             "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *           },
		 *           {
		 *             "number": "number",
		 *             "tinType": "FEDERAL",
		 *             "usage": "usage",
		 *             "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *             "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *           }
		 *         ]
		 *       }
		 *     }
		 */
		Payor_1: {
			responsibleParty?: components["schemas"]["Party_2"];
		};
		/**
		 * @description Use this object to provide the attributes such as physical address, contact information and account number information.
		 * @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "38127",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "John Taylor",
		 *         "emailAddress": "sample@company.com",
		 *         "phoneNumber": "1234567890",
		 *         "phoneExtension": "phone extension",
		 *         "companyName": "Fedex",
		 *         "faxNumber": "fax number"
		 *       },
		 *       "accountNumber": {
		 *         "value": "Your account number"
		 *       },
		 *       "tins": [
		 *         {
		 *           "number": "number",
		 *           "tinType": "FEDERAL",
		 *           "usage": "usage",
		 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *         },
		 *         {
		 *           "number": "number",
		 *           "tinType": "FEDERAL",
		 *           "usage": "usage",
		 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *         }
		 *       ]
		 *     }
		 */
		Party_2: {
			address?: components["schemas"]["Address_1"];
			contact?: components["schemas"]["Contact_1"];
			accountNumber?: components["schemas"]["PartyAccountNumber"];
			/** @description This is the tax identification number details. */
			tins?: components["schemas"]["TaxpayerIdentification"][];
		};
		/**
		 * @description These are billing details.
		 * @example {
		 *       "billingCode": "128345",
		 *       "billingType": "billingType",
		 *       "aliasId": "alias identifier",
		 *       "accountNickname": "accountNickname",
		 *       "accountNumber": "Your account number",
		 *       "accountNumberCountryCode": "CA"
		 *     }
		 */
		BillingDetails: {
			/** @description Indicates a billing code. */
			billingCode?: string;
			/** @description These are duties and taxes billing type. */
			billingType?: string;
			/** @description This is bill to alias identifier. */
			aliasId?: string;
			/** @description This is account nick name. */
			accountNickname?: string;
			/** @description This is bill to account number. */
			accountNumber?: string;
			/** @description This is the country code of the account number.<br>Example: CA */
			accountNumberCountryCode?: string;
		};
		Commodity: {
			/** @description This is the unit price. */
			unitPrice?: components["schemas"]["Money"];
			/** @description This object contains additional quantitative information other than weight and quantity to calculate duties and taxes. */
			additionalMeasures?: components["schemas"]["AdditionalMeasures"][];
			/**
			 * Format: int32
			 * @description Indicate the number of pieces associated with the commodity. The value can neither be negative nor exceed 9,999.<br>Example: 12
			 * @example 12
			 */
			numberOfPieces?: number;
			/**
			 * Format: int32
			 * @description This is the units quantity (using quantityUnits as the unit of measure) per commodity. This is used to estimate duties and taxes.<br> Example: 125
			 * @example 125
			 */
			quantity?: number;
			/**
			 * @description This is the unit of measure for the units quantity. This is used to estimate duties and taxes.<br>Example: EA<br><a onclick='loadDocReference("harmonizedsystemcodeunitofmeasure-table1")'>click here to see Commodity Unit Measures</a>
			 * @example Ea
			 */
			quantityUnits?: string;
			/** @description This customs value is applicable for all items(or units) under the specified commodity. */
			customsValue?: components["schemas"]["Customs_Money"];
			/**
			 * @description This is commodity country of manufacture. This is required for International shipments. Maximum allowed length is 4.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
			 * @example US
			 */
			countryOfManufacture?: string;
			/**
			 * @description This is an identifying mark or number used on the packaging of a shipment to help customers identify a particular shipment<br>Example: 87123
			 * @example 87123
			 */
			cIMarksAndNumbers?: string;
			/**
			 * @description This is to specify the Harmonized Tariff System (HTS) code to meet U.S. and foreign governments' customs requirements. These are mainly used to estimate the duties and taxes.<br>Example: 0613<br>To research the classification for your commodity, use the FedEx Global Trade Manager online at <a href='http://www.fedex.com/gtm' target='_blank'>fedex.com/gtm</a>. You will find country-specific information to determine whether your commodity is considered to be a document or non-document for your destination.
			 * @example 0613
			 */
			harmonizedCode?: string;
			/**
			 * @description This is the commodity description. Maximum allowed 450 characters.<br><a onclick='loadDocReference("vaguecommoditydescriptions")'>click here to see Vague commodity descriptions</a>
			 * @example description
			 */
			description: string;
			/**
			 * @description This is Commodity name.<br>Example: Non-Threaded Rivets
			 * @example non-threaded rivets
			 */
			name?: string;
			weight?: components["schemas"]["Weight_4"];
			/**
			 * @description This is the export license number for the shipment.<br>Example: 26456
			 * @example 26456
			 */
			exportLicenseNumber?: string;
			/**
			 * Format: date-time
			 * @description Specify the export license expiration date for the shipment.<br>Format YYYY-MM-DD<br>Example : 2009-04-12
			 */
			exportLicenseExpirationDate?: string;
			/**
			 * @description This is a part number.<br>Example: 167
			 * @example 167
			 */
			partNumber?: string;
			/**
			 * @description This is the purpose of this shipment. This is used for calculation of duties and taxes.
			 * @example BUSINESS
			 * @enum {string}
			 */
			purpose?: "BUSINESS" | "CONSUMER";
			usmcaDetail?: components["schemas"]["UsmcaDetail"];
		};
		AdditionalMeasures: {
			/**
			 * Format: double
			 * @description Specify commodity quantity.
			 * @example 12.45
			 */
			quantity?: number;
			/**
			 * @description Unit of measure used to express the quantity of this commodity line item.
			 * @example KG
			 */
			units?: string;
		};
		/**
		 * @description These are the package weight details.<br>Note: Weight is not required for One rate shipments
		 * @example {
		 *       "units": "KG",
		 *       "value": 68
		 *     }
		 */
		Weight: {
			/**
			 * @description Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
			 * @example KG
			 * @enum {string}
			 */
			units: "KG";
			/**
			 * Format: double
			 * @description Weight Value.<br> Example: 68.25<br><a href='https://developer.fedex.com/api/en-us/guides/api-reference.html#packagetypes' target='_blank'>Click here to see Weight Values</a>.
			 * @example 68.25
			 */
			value: number;
		};
		/**
		 * @description It is the unit weight of the commodity.<br>Note: Weight is not required for One rate shipments
		 * @example {
		 *       "units": "KG",
		 *       "value": 68
		 *     }
		 */
		Weight_4: {
			/**
			 * @description Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
			 * @example KG
			 * @enum {string}
			 */
			units: "KG";
			/**
			 * Format: double
			 * @description Weight Value.<br> Example: 68.25
			 * @example 68.25
			 */
			value: number;
		};
		/**
		 * @description These are the package weight details.<br>Note: Weight is not required for One rate shipments
		 * @example {
		 *       "units": "KG",
		 *       "value": 68
		 *     }
		 */
		Weight_3: {
			/**
			 * @description Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
			 * @example KG
			 * @enum {string}
			 */
			units: "KG";
			/**
			 * Format: double
			 * @description Weight Value.<br> Example: 68.25<br>
			 * @example 68.25
			 */
			value: number;
		};
		/** @description Indicates the USMCA detail */
		UsmcaDetail: {
			/**
			 * @description Specify the origin criterion.
			 * @enum {string}
			 */
			originCriterion?: "A" | "B" | "C" | "D" | "E";
		};
		/** @description Use this element to provide valid identification details. Used for populating brazil tax id. */
		RecipientCustomsId: {
			/**
			 * @description This is ID Type.
			 * @example PASSPORT
			 * @enum {string}
			 */
			type?: "COMPANY" | "INDIVIDUAL" | "PASSPORT";
			/**
			 * @description This is the ID number.
			 * @example 123
			 */
			value?: string;
		};
		/**
		 * @description These are customs Option Detail, type must be indicated for each occurrence.
		 * @example {
		 *       "description": "Description",
		 *       "type": "COURTESY_RETURN_LABEL"
		 *     }
		 */
		CustomsOptionDetail: {
			/**
			 * @description Specify additional description about customs options. This is a required field when the Type is OTHER.
			 * @example Description
			 */
			description?: string;
			/**
			 * @description Specify the reason for a global return, as recognized by Customs. Valid values:<ul><li>COURTESY_RETURN_LABEL: Applicable for Outbound shipments.</li><li>EXHIBITION_TRADE_SHOW: For exhibition or trade-show, outbound and inbound.</li><li>FAULTY_ITEM: For faulty item being returned, inbound only.</li><li>FOLLOWING_REPAIR: For repaired or processed item being sent, outbound only.</li><li>FOR_REPAIR: For repair or processing, outbound and inbound.</li><li>ITEM_FOR_LOAN: For loan item, outbound and inbound.</li><li>OTHER: Other reason, outbound and inbound. This type requires a description.</li><li>REJECTED: For rejected merchandise being returned, inbound.</li><li>REPLACEMENT: For replacement being sent, outbound only.</li><li>TRIAL: For use in a trial, outbound and inbound.</li></ul>
			 * @example COURTESY_RETURN_LABEL
			 * @enum {string}
			 */
			type?:
				| "COURTESY_RETURN_LABEL"
				| "EXHIBITION_TRADE_SHOW"
				| "FAULTY_ITEM"
				| "FOLLOWING_REPAIR"
				| "FOR_REPAIR"
				| "ITEM_FOR_LOAN"
				| "OTHER"
				| "REJECTED"
				| "REPLACEMENT"
				| "TRIAL";
		};
		/** @description These are export Detail used for US or CA exports. */
		ExportDetail: {
			destinationControlDetail?: components["schemas"]["DestinationControlDetail"];
			/**
			 * @description Specify the filing option being exercised. Required for  non-document shipments originating in Canada destinated for any country other than Canada, the United States, Puerto Rico, or the U.S. Virgin Islands.
			 * @example NOT_REQUIRED
			 * @enum {string}
			 */
			b13AFilingOption?:
				| "NOT_REQUIRED"
				| "MANUALLY_ATTACHED"
				| "FILED_ELECTRONICALLY"
				| "SUMMARY_REPORTING"
				| "FEDEX_TO_STAMP";
			/**
			 * @description For US export shipments requiring an EEI, enter the ITN number received from AES when you filed your shipment or the FTR (Foreign Trade Regulations) exemption number.The proper format for an ITN number is AES XYYYYMMDDNNNNNN where YYYYMMDD is date and NNNNNN are numbers generated by the AES.<br> Example: AESX20220714987654<br>Note: The ITN or FTR exemption number you submit in the ship request prints on the international shipping label.<br><br>For CA export shipments,it can be Proof of report number(15-32 alphanumeric) , Summary proof of report number(7-32 alphanumeric) or Exemption number(2 digit) based on the selected b13AFilingOption.<br>Example: 98765432107654321(POR number), 7654321(Summary POR number) and 02(Exemption number). <br>For FTR exemption number you need provide a predefined value as NO_EEI_30_37_A.
			 * @example 12345678901234567
			 */
			exportComplianceStatement?: string;
			/**
			 * @description This is a Permit Number. This field is applicable only to Canada export non-document shipments of any value to any destination. No special characters are allowed.<br> Example: 12345
			 * @example 12345
			 */
			permitNumber?: string;
		};
		/** @description Use this object to specify the appropriate destination control statement type(s). Also make sure to specify destination country and end user. */
		DestinationControlDetail: {
			/**
			 * @description Specify End User name. Its is required if StatementTypes is entered as DEPARTMENT_OF_STATE. <br>Example: John Wick
			 * @example dest country user
			 */
			endUser?: string;
			/**
			 * @description Specify appropriate destination control statement type(s), Also make sure to specify destination country and end user.
			 * @example DEPARTMENT_OF_COMMERCE
			 * @enum {string}
			 */
			statementTypes:
				| "DEPARTMENT_OF_COMMERCE"
				| "DEPARTMENT_OF_STATE"
				| "DEPARTMENT_OF_COMMERCE_AND_DEPARTMENT_OF_STATE";
			/**
			 * @description Specify DCS shipment destination country. You may enter up to four country codes in this element. Up to 11 alphanumeric characters are allowed.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
			 * @example [
			 *       "USA",
			 *       "India"
			 *     ]
			 */
			destinationCountries?: string[];
		};
		/** @description Specifies about the statements to be declared for Customs.  */
		CustomsDeclarationStatementDetail: {
			usmcaLowValueStatementDetail: components["schemas"]["UsmcaLowValueStatementDetail"];
		};
		/** @description Specify the low Value statement necessary for printing the USMCA for Customs documentation. */
		UsmcaLowValueStatementDetail: {
			/**
			 * @description Specify the country Of Origin of Low Value Document for Customs declaration.
			 * @example true
			 */
			countryOfOriginLowValueDocumentRequested?: boolean;
			/**
			 * @description Specify the shipper role for Customs declaration.
			 * @example EXPORTER
			 * @enum {string}
			 */
			customsRole: "EXPORTER" | "IMPORTER";
		};
		/** @description Use this object to specify the smartpost shipment details. <br>Required for SMARTPOST service. If SmartPostInfoDetail is indicated, the elements below it are also required. */
		SmartPostInfoDetail: {
			/**
			 * @description Indicate the type of ancillary endorsement. Is required for Presorted Standard but not for returns or parcel select. <br>Note: Not all are usable for all ancillary endorsements.<br>For more information, refer to the <a href = 'https://www.fedex.com/en-us/shipping/fedex-smartpost/rates-zones.html' target='_blank'>FedEx SmartPost®</a>.
			 * @example RETURN_SERVICE
			 * @enum {string}
			 */
			ancillaryEndorsement?:
				| "ADDRESS_CORRECTION"
				| "CARRIER_LEAVE_IF_NO_RESPONSE"
				| "CHANGE_SERVICE"
				| "FORWARDING_SERVICE"
				| "RETURN_SERVICE";
			/**
			 * @description Specify the four-digit numeric Hub ID value used for smartport shipments.<br><a onclick='loadDocReference("smartposthubids")'>click here to see Hub Ids</a>
			 * @example 5015
			 */
			hubId: string;
			/**
			 * @description Specify the indicia type.<br>Available options include:<ul><li>MEDIA_MAIL</li><li>PARCEL_SELECT (1 LB through 70 LB)</li><li>PRESORTED_BOUND_PRINTED_MATTER</li><li>PRESORTED_STANDARD (less than 1 LB)</li><li>PARCEL_RETURN</li></ul>
			 * @example PRESORTED_STANDARD
			 * @enum {string}
			 */
			indicia:
				| "MEDIA_MAIL"
				| "PARCEL_RETURN"
				| "PARCEL_SELECT"
				| "PRESORTED_BOUND_PRINTED_MATTER"
				| "PRESORTED_STANDARD";
			/**
			 * @description Specify the special handling associated with Smartpost Shipment.
			 * @example USPS_DELIVERY_CONFIRMATION
			 * @enum {string}
			 */
			specialServices?: "USPS_DELIVERY_CONFIRMATION";
		};
		/** @description These are label specification details includes the image type, printer format, and label stock for label. Can also specify specific details such as doc-tab content, regulatory labels, and masking data on the label. */
		LabelSpecification: {
			/**
			 * @description Specify the label Format Type.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
			 * @example COMMON2D
			 * @enum {string}
			 */
			labelFormatType?: "COMMON2D" | "LABEL_DATA_ONLY";
			/**
			 * @description This is the order of the Shipping label/documents to be generated.
			 * @example SHIPPING_LABEL_FIRST
			 * @enum {string}
			 */
			labelOrder?: "SHIPPING_LABEL_FIRST" | "SHIPPING_LABEL_LAST";
			customerSpecifiedDetail?: components["schemas"]["CustomerSpecifiedLabelDetail"];
			printedLabelOrigin?: components["schemas"]["ContactAndAddress"];
			/**
			 * @description Indicate the label stock type used. <br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
			 * @example PAPER_85X11_TOP_HALF_LABEL
			 * @enum {string}
			 */
			labelStockType:
				| "PAPER_4X6"
				| "PAPER_4X675"
				| "PAPER_4X8"
				| "PAPER_4X9"
				| "PAPER_7X475"
				| "PAPER_85X11_BOTTOM_HALF_LABEL"
				| "PAPER_85X11_TOP_HALF_LABEL"
				| "PAPER_LETTER"
				| "STOCK_4X675_LEADING_DOC_TAB"
				| "STOCK_4X8"
				| "STOCK_4X9_LEADING_DOC_TAB"
				| "STOCK_4X6"
				| "STOCK_4X675_TRAILING_DOC_TAB"
				| "STOCK_4X9_TRAILING_DOC_TAB"
				| "STOCK_4X9"
				| "STOCK_4X85_TRAILING_DOC_TAB"
				| "STOCK_4X105_TRAILING_DOC_TAB";
			/**
			 * @description This is applicable only to documents produced on thermal printers with roll stock.
			 * @example UPSIDE_DOWN
			 * @enum {string}
			 */
			labelRotation?: "LEFT" | "RIGHT" | "UPSIDE_DOWN" | "NONE";
			/**
			 * @description Specify the image format used for a shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
			 * @example PDF
			 * @enum {string}
			 */
			imageType: "ZPLII" | "EPL2" | "PDF" | "PNG";
			/**
			 * @description This is applicable only to documents produced on thermal printers with roll stock.
			 * @example TOP_EDGE_OF_TEXT_FIRST
			 * @enum {string}
			 */
			labelPrintingOrientation?:
				| "BOTTOM_EDGE_OF_TEXT_FIRST"
				| "TOP_EDGE_OF_TEXT_FIRST";
			/**
			 * @description Specify whether or not the return deposition is needed.
			 * @example true
			 */
			returnedDispositionDetail?: boolean;
		};
		/** @description This object allows the control of label content for customization. */
		CustomerSpecifiedLabelDetail: {
			/**
			 * @description Specify which data/sections on the label to be masked.<br>Note: <ul><li>SECONDARY_BARCODE &ndash; This is used for Smartpost shipment labels.</li><li>SHIPPER_INFORMATION &ndash; This is used for Third Party Consignee, Intra-UK shipments.</li><li>TOTAL_WEIGHT &ndash; This replaces the Total weight with Actual Weight in Master label and AWB copies.</li></ul>
			 * @example [
			 *       "CUSTOMS_VALUE",
			 *       "TOTAL_WEIGHT"
			 *     ]
			 */
			maskedData?: (
				| "CUSTOMS_VALUE"
				| "DIMENSIONS"
				| "DUTIES_AND_TAXES_PAYOR_ACCOUNT_NUMBER"
				| "INSURED_VALUE"
				| "SECONDARY_BARCODE"
				| "SHIPPER_INFORMATION"
				| "TERMS_AND_CONDITIONS"
				| "TOTAL_WEIGHT"
				| "TRANSPORTATION_CHARGES_PAYOR_ACCOUNT_NUMBER"
			)[];
			/** @description Specify how the regulatory details to be provided on the labels. */
			regulatoryLabels?: components["schemas"]["RegulatoryLabelContentDetail"][];
			/** @description Specify how the additional details to be provided on the labels. */
			additionalLabels?: components["schemas"]["AdditionalLabelsDetail"][];
			docTabContent?: components["schemas"]["DocTabContent"];
		};
		RegulatoryLabelContentDetail: {
			/**
			 * @description Specify the regulatory content preference to be displayed on the label.
			 * @example CONTENT_ON_SHIPPING_LABEL_ONLY
			 * @enum {string}
			 */
			generationOptions?:
				| "CONTENT_ON_SHIPPING_LABEL_PREFERRED"
				| "CONTENT_ON_SUPPLEMENTAL_LABEL_ONLY"
				| "CONTENT_ON_SHIPPING_LABEL_ONLY";
			/**
			 * @description Specify the type of regulatory content to be added on the label.
			 * @example ALCOHOL_SHIPMENT_LABEL
			 * @enum {string}
			 */
			type?: "ALCOHOL_SHIPMENT_LABEL";
		};
		AdditionalLabelsDetail: {
			/**
			 * @description Specify the type of additional  details to be added on the label.
			 * @example CONSIGNEE
			 * @enum {string}
			 */
			type?:
				| "BROKER"
				| "CONSIGNEE"
				| "CUSTOMS"
				| "DESTINATION"
				| "DESTINATION_CONTROL_STATEMENT"
				| "FREIGHT_REFERENCE"
				| "MANIFEST"
				| "ORIGIN"
				| "RECIPIENT"
				| "SECOND_ADDRESS"
				| "SHIPPER";
			/**
			 * @description Specifies the count of label to return.
			 * @example 1
			 */
			count?: number;
		};
		/** @description Specifies details of doc tab content.It is only applicable only with imageType as ZPLII. */
		DocTabContent: {
			/**
			 * @description Indicates the content type of the doc tab.
			 * @example BARCODED
			 * @enum {string}
			 */
			docTabContentType?:
				| "BARCODED"
				| "CUSTOM"
				| "MINIMUM"
				| "STANDARD"
				| "ZONE001";
			zone001?: components["schemas"]["DocTabContentZone001"];
			barcoded?: components["schemas"]["DocTabContentBarcoded"];
		};
		/** @description Indicate the doc tab specification for different zones on the label. The specification includes zone number, header and data field to be displayed on the label. */
		DocTabContentZone001: {
			/** @description Indicate the doc tab specifications for the individual doc tab zone on the label. */
			docTabZoneSpecifications?: components["schemas"]["DocTabZoneSpecification"][];
		};
		/** @description Indicates the doc tab zone specification. */
		DocTabZoneSpecification: {
			/**
			 * Format: int32
			 * @description It is a non-negative integer that represents the portion of doc-tab in a label.<br>Example: 1
			 */
			zoneNumber?: number;
			/** @description Indicates the parameter name in the header for the doc tab zone. The maximum charater limit is 7.<br>Example:  WHT */
			header?: string;
			/** @description Indicate the path request/reply element to be printed on doc tab.<br>Example: <ul><li> REQUEST/PACKAGE/weight/Value</li><li> REQUEST/PACKAGE/weight/Value</li><li> REQUEST/PACKAGE/InsuredValue/Amount</li><li> REQUEST/SHIPMENT/SpecialServicesRequested/CodDetail/CodCollectionAmount/Amount</li><li>REQUEST/SHIPMENT/Shipper/Address/StreetLines[1]CLIENT/MeterNumber</li><li> TRANSACTION/CustomerTransactionId</li><li> REQUEST/SHIPMENT/TotalWeight/Value</li><li> REQUEST/SHIPMENT/ShipTimestamp</li><li> REQUEST/SHIPMENT/Recipient/Contact/PersonName</li><li> REPLY/SHIPMENT/OperationalDetail/DeliveryDate</li><li>  REPLY/SHIPMENT/RATES/ACTUAL/totalBaseCharge/Amount</li><li> REPLY/SHIPMENT/RATES/ACTUAL/totalFreightDiscounts/Amount</li><li>  REPLY/SHIPMENT/RATES/ACTUAL/totalSurcharges/Amount</li><li> REPLY/SHIPMENT/RATES/ACTUAL/totalNetCharge/Amount</li><li> REPLY/SHIPMENT/RATES/PAYOR_ACCOUNT_PACKAGE/totalSurcharges/Amount</li></ul> */
			dataField?: string;
			/** @description Indicates the actual data to be printed in the label<br> */
			literalValue?: string;
			/**
			 * @description Indicates the justification format for the string.
			 * @example RIGHT
			 * @enum {string}
			 */
			justification?: "LEFT" | "RIGHT";
		};
		/** @description It is a doc tab content type which is in barcoded format. */
		DocTabContentBarcoded: {
			/**
			 * @description Indicates the type of barcode symbology used on FedEx documents and labels.
			 * @example UCC128
			 * @enum {string}
			 */
			symbology?:
				| "CODABAR"
				| "CODE128"
				| "CODE128_WIDEBAR"
				| "CODE128B"
				| "CODE128C"
				| "CODE39"
				| "CODE93"
				| "I2OF5"
				| "MANUAL"
				| "PDF417"
				| "POSTNET"
				| "QR_CODE"
				| "UCC128";
			specification?: components["schemas"]["DocTabZoneSpecification"];
		};
		/** @description Use this object to provide all data required for additional (non-label) shipping documents to be produced. */
		ShippingDocumentSpecification: {
			generalAgencyAgreementDetail?: components["schemas"]["GeneralAgencyAgreementDetail"];
			returnInstructionsDetail?: components["schemas"]["ReturnInstructionsDetail"];
			op900Detail?: components["schemas"]["Op900Detail"];
			usmcaCertificationOfOriginDetail?: components["schemas"]["UsmcaCertificationOfOriginDetail"];
			usmcaCommercialInvoiceCertificationOfOriginDetail?: components["schemas"]["UsmcaCommercialInvoiceCertificationOfOriginDetail"];
			/**
			 * @description Indicates the types of shipping documents requested.
			 *
			 * @example [
			 *       "RETURN_INSTRUCTIONS"
			 *     ]
			 */
			shippingDocumentTypes?: (
				| "CERTIFICATE_OF_ORIGIN"
				| "COMMERCIAL_INVOICE"
				| "CUSTOM_PACKAGE_DOCUMENT"
				| "CUSTOM_SHIPMENT_DOCUMENT"
				| "CUSTOMER_SPECIFIED_LABELS"
				| "EXPORT_DECLARATION"
				| "GENERAL_AGENCY_AGREEMENT"
				| "LABEL"
				| "USMCA_CERTIFICATION_OF_ORIGIN"
				| "OP_900"
				| "PENDING_SHIPMENT_EMAIL_NOTIFICATION"
				| "PRO_FORMA_INVOICE"
				| "RETURN_INSTRUCTIONS"
				| "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
			)[];
			certificateOfOrigin?: components["schemas"]["CertificateOfOriginDetail"];
			commercialInvoiceDetail?: components["schemas"]["CommercialInvoiceDetail"];
		};
		/** @description Use this object to specify details to generate general agency agreement detail. */
		GeneralAgencyAgreementDetail: {
			documentFormat?: components["schemas"]["ShippingDocumentFormat"];
		};
		/** @description Specify the shipping document format. */
		ShippingDocumentFormat: {
			/**
			 * @description Indicates whether or not to provide the instructions.
			 * @example true
			 */
			provideInstructions?: boolean;
			optionsRequested?: components["schemas"]["DocumentFormatOptionsRequested"];
			/**
			 * @description Indicate the used label stock type. Note to list the correct type of paper for the freight address label option.
			 * @example PAPER_LETTER
			 * @enum {string}
			 */
			stockType?: "PAPER_LETTER";
			/** @description Specifies how to create, organize, and return the document
			 */
			dispositions?: components["schemas"]["ShippingDocumentDispositionDetail"][];
			/**
			 * @description These are locale details.<br>example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
			 * @example en_US
			 */
			locale?: string;
			/**
			 * @description Specify the image format used for a shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
			 * @example PDF
			 * @enum {string}
			 */
			docType?: "PDF";
		};
		/** @description Indicate the requested options for document format. */
		DocumentFormatOptionsRequested: {
			/**
			 * @description Indicates the format options. SUPPRESS_ADDITIONAL_LANGUAGES value will suppress English language if another language is specified in the language code field.
			 * @example [
			 *       "SUPPRESS_ADDITIONAL_LANGUAGES",
			 *       "SHIPPING_LABEL_LAST"
			 *     ]
			 */
			options?: (
				| "SHIPPING_LABEL_FIRST"
				| "SHIPPING_LABEL_LAST"
				| "SUPPRESS_ADDITIONAL_LANGUAGES"
			)[];
		};
		/** @description These are document diposition details. Each occurrence of this class specifies a particular way in which a kind of shipping document is to be produced and provided. */
		ShippingDocumentDispositionDetail: {
			eMailDetail?: components["schemas"]["ShippingDocumentEmailDetail"];
			/**
			 * @description Specify how to create and return the document.
			 * @example CONFIRMED
			 * @enum {string}
			 */
			dispositionType?:
				| "CONFIRMED"
				| "DEFERRED_QUEUED"
				| "DEFERRED_RETURNED"
				| "DEFERRED_STORED"
				| "EMAILED"
				| "QUEUED"
				| "RETURNED"
				| "STORED";
		};
		/** @description Specifies how to e-mail shipping documents. */
		ShippingDocumentEmailDetail: {
			/** @description Indicates the shipping document email recipients. */
			eMailRecipients: components["schemas"]["ShippingDocumentEmailRecipient"][];
			/**
			 * @description These are locale details.<br>Example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
			 * @example en_US
			 */
			locale?: string;
			/**
			 * @description Identifies the convention by which documents are to be grouped as email attachment.
			 * @example NONE
			 * @enum {string}
			 */
			grouping?: "BY_RECIPIENT" | "NONE";
		};
		ShippingDocumentEmailRecipient: {
			/**
			 * @description Specifies the email address.<br> Example: email@fedex.com
			 * @example email@fedex.com
			 */
			emailAddress?: string;
			/**
			 * @description Specify the email notification recipient type.
			 * @example THIRD_PARTY
			 * @enum {string}
			 */
			recipientType:
				| "BROKER"
				| "OTHER"
				| "RECIPIENT"
				| "SHIPPER"
				| "THIRD_PARTY"
				| "OTHER1"
				| "OTHER2";
		};
		/** @description These are return instruction details which will be returned in the transaction to be printed on Return Label. */
		ReturnInstructionsDetail: {
			/**
			 * @description Specify additional information (text) to be inserted into the return document.<br>Example: This is additional text printed on Return Label
			 * @example This is additional text printed on Return instr
			 */
			customText?: string;
			documentFormat?: components["schemas"]["ReturnShippingDocumentFormat"];
		};
		/** @description These are characteristics of a shipping document to be produced. */
		ReturnShippingDocumentFormat: {
			/**
			 * @description Use this element to indicate whether or not to provide the instructions.
			 * @example true
			 */
			provideInstructions?: boolean;
			optionsRequested?: components["schemas"]["DocumentFormatOptionsRequested"];
			/**
			 * @description Specify the label stock type.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
			 * @example PAPER_LETTER
			 * @enum {string}
			 */
			stockType?: "PAPER_LETTER";
			/** @description Details on creating, organizing, and returning the document.
			 */
			dispositions?: components["schemas"]["ShippingDocumentDispositionDetail"][];
			/**
			 * @description These are locale details.<br>example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
			 * @example en_US"
			 */
			locale?: string;
			/**
			 * @description Specify the image format used for shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
			 * @example PNG
			 * @enum {string}
			 */
			docType?: "PNG" | "PDF";
		};
		/** @description Use this object to specify details to generate the OP-900 document for hazardous material packages. */
		Op900Detail: {
			/** @description Specify the use and identification of supplied images to be used on document. */
			customerImageUsages?: components["schemas"]["CustomerImageUsage"][];
			/**
			 * @description Indicates the name to be printed as signature on the document instead of (or in addition to) a signature image.<br>Example: John Hill
			 * @example Signature Name
			 */
			signatureName?: string;
			documentFormat?: components["schemas"]["ShippingDocumentFormat"];
		};
		/** @description Specify the usse and identification of supplied images to be used on this document. */
		CustomerImageUsage: {
			/**
			 * @description Specify the Image ID.
			 * @example IMAGE_5
			 * @enum {string}
			 */
			id?: "IMAGE_1" | "IMAGE_2" | "IMAGE_3" | "IMAGE_4" | "IMAGE_5";
			/**
			 * @description Specify document image type.
			 * @example SIGNATURE
			 * @enum {string}
			 */
			type?: "SIGNATURE" | "LETTER_HEAD";
			/**
			 * @description Specify the provided document image type.
			 * @example SIGNATURE
			 * @enum {string}
			 */
			providedImageType?: "LETTER_HEAD" | "SIGNATURE";
		};
		/** @description The instructions indicating how to print the USMCA Certificate of Origin (e.g. whether or not to include the instructions, image type, etc ...). */
		UsmcaCertificationOfOriginDetail: {
			/** @description Specifies the usage and identification of customer supplied images to be used on this document. */
			customerImageUsages?: components["schemas"]["CustomerImageUsage"][];
			documentFormat?: components["schemas"]["ShippingDocumentFormat"];
			/**
			 * @description This is certifier specification.
			 * @example EXPORTER
			 * @enum {string}
			 */
			certifierSpecification?: "EXPORTER" | "IMPORTER" | "PRODUCER";
			/**
			 * @description This is importer specification.
			 * @example UNKNOWN
			 * @enum {string}
			 */
			importerSpecification?: "UNKNOWN" | "VARIOUS";
			/**
			 * @description This is producer specification.
			 * @example SAME_AS_EXPORTER
			 * @enum {string}
			 */
			producerSpecification?:
				| "AVAILABLE_UPON_REQUEST"
				| "VARIOUS"
				| "SAME_AS_EXPORTER";
			producer?: components["schemas"]["Party_3"];
			blanketPeriod?: components["schemas"]["RetrieveDateRange"];
			/**
			 * @description Specify the job title of the certifier
			 * @example Manager
			 */
			certifierJobTitle?: string;
		};
		/** @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "90210",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "John Taylor",
		 *         "emailAddress": "sample@company.com",
		 *         "phoneExtension": "000",
		 *         "phoneNumber": "XXXX345671",
		 *         "companyName": "Fedex"
		 *       },
		 *       "accountNumber": {
		 *         "value": "Your account number"
		 *       },
		 *       "tins": [
		 *         {
		 *           "number": "123567",
		 *           "tinType": "FEDERAL",
		 *           "usage": "usage",
		 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
		 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
		 *         }
		 *       ]
		 *     } */
		Party_3: {
			address?: components["schemas"]["PartyAddress_1"];
			contact?: components["schemas"]["PartyContact_1"];
			/** @description This is the tax identification number details. */
			tins?: components["schemas"]["TaxpayerIdentification"][];
		};
		/**
		 * @description This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
		 * @example {
		 *       "streetLines": [
		 *         "10 FedEx Parkway",
		 *         "Suite 302"
		 *       ],
		 *       "city": "Beverly Hills",
		 *       "stateOrProvinceCode": "CA",
		 *       "postalCode": "90210",
		 *       "countryCode": "US",
		 *       "residential": false
		 *     }
		 */
		PartyAddress_1: {
			/**
			 * @description This is the combination of number, street name, etc. Maximum length per line is 35.<br>Example: 10 FedEx Parkway, Suite 302.<p><i>Note:<ul><li>At least one line is required.</li><li>Streetlines more than 3 will be ignored.</li><li>Empty lines should not be included</li><li>For SmartPost Shipments, only 30 characters from the individual street lines will be printed on the labels.</li></ul></i></p>
			 * @example [
			 *       "1550 Union Blvd",
			 *       "Suite 302"
			 *     ]
			 */
			streetLines?: string[];
			/**
			 * @description This is a placeholder for City Name. <br>Example: Beverly Hills
			 * @example Beverly Hills
			 */
			city?: string;
			/**
			 * @description This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA.<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
			 * @example CA
			 */
			stateOrProvinceCode?: string;
			/**
			 * @description This is the Postal code.<br>This is Optional for non postal-aware countries.<br>Maximum length is 10.<br>Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
			 * @example 90210
			 */
			postalCode?: string;
			/**
			 * @description This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
			 * @example US
			 */
			countryCode?: string;
			/**
			 * @description Indicate whether this address is residential (as opposed to commercial).
			 * @example false
			 */
			residential?: boolean;
			/**
			 * @description Indicates the geographic coordinates. <br> example: geographicCoordinates
			 * @example geographicCoordinates
			 */
			geographicCoordinates?: string;
		};
		/**
		 * @description Indicate the contact details for this shipment.
		 * @example {
		 *       "personName": "John Taylor",
		 *       "emailAddress": "sample@company.com",
		 *       "phoneExtension": "91",
		 *       "phoneNumber": "1234567890",
		 *       "companyName": "Fedex"
		 *     }
		 */
		PartyContact_1: {
			/**
			 * @description Specify contact name. Maximum length is 70. <br> Example: John Taylor
			 * @example John Taylor
			 */
			personName?: string;
			/**
			 * @description Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
			 * @example sample@company.com
			 */
			emailAddress?: string;
			/**
			 * @description Specify contact phone extension. Maximum length is 6. <br> Example: 1234
			 * @example 91
			 */
			phoneExtension?: string;
			/**
			 * @description Specify contact phone number. <br>Minimum length is 10 and supports Maximum as 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890
			 * @example 1234567890
			 */
			phoneNumber?: string;
			/**
			 * @description Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation of the company name.
			 * @example Fedex
			 */
			companyName?: string;
			/** @description Specify contact person's fax number. Maximum length is 15. */
			faxNumber?: string;
		};
		/** @description Date Range for custom delivery request; only used if type is BETWEEN. */
		RetrieveDateRange: {
			/**
			 * @description Indicates the start date.
			 * @example 22-01-2020
			 */
			begins?: string;
			/**
			 * @description Indicates the end date.
			 * @example 2-01-2020
			 */
			ends?: string;
		};
		/** @description The instructions indicating commercial invoice certification of origin. */
		UsmcaCommercialInvoiceCertificationOfOriginDetail: {
			/** @description Specifies the usage and identification of customer supplied images to be used on this document. */
			customerImageUsages?: components["schemas"]["CustomerImageUsage"][];
			documentFormat?: components["schemas"]["ShippingDocumentFormat"];
			/**
			 * @description This is certifier specification.
			 * @example EXPORTER
			 * @enum {string}
			 */
			certifierSpecification?: "EXPORTER" | "IMPORTER" | "PRODUCER";
			/**
			 * @description This is importer specification.
			 * @example UNKNOWN
			 * @enum {string}
			 */
			importerSpecification?: "UNKNOWN" | "VARIOUS";
			/**
			 * @description This is producer specification.
			 * @example SAME_AS_EXPORTER
			 * @enum {string}
			 */
			producerSpecification?:
				| "AVAILABLE_UPON_REQUEST"
				| "VARIOUS"
				| "SAME_AS_EXPORTER";
			producer?: components["schemas"]["Party_3"];
			/**
			 * @description Specify the job title of the certifier
			 * @example Manager
			 */
			certifierJobTitle?: string;
		};
		/** @description The instructions indicating how to print the Certificate of Origin ( e.g. whether or not to include the instructions, image type, etc ...) */
		CertificateOfOriginDetail: {
			/** @description Specifies the usage and identification of customer supplied images to be used on this document. */
			customerImageUsages?: components["schemas"]["CustomerImageUsage"][];
			documentFormat?: components["schemas"]["ShippingDocumentFormat"];
		};
		/** @description The instructions indicating how to print the Commercial Invoice( e.g. image type) Specifies characteristics of a shipping document to be produced. */
		CommercialInvoiceDetail: {
			/** @description Specifies the usage and identification of customer supplied images to be used on this document. */
			customerImageUsages?: components["schemas"]["CustomerImageUsage"][];
			documentFormat?: components["schemas"]["ShippingDocumentFormat"];
		};
		/** @description Indicates the tracking details of the package.Required for child shipments of an oneLabelAtATime shipments */
		MasterTrackingId: {
			/**
			 * @description This is FedEx tracking Identifier associated with the package.<br>Example: 8600
			 * @example 0201
			 */
			formId?: string;
			/**
			 * @description Specify the FedEx transportation type. <br>Example: EXPRESS
			 * @example EXPRESS
			 */
			trackingIdType?: string;
			/**
			 * @description Specify the USPS tracking Identifier associated with FedEx SmartPost shipment.<br>Example: 92
			 * @example 92
			 */
			uspsApplicationId?: string;
			/**
			 * @description This is the number associated with the package that is used to track it.For child shipment of an oneLabelAtATime shipments,this should be same as the masterTrackingNumber of the parent shipment. <br>Example: 49XXX0000XXX20032835
			 * @example 49092000070120032835
			 */
			trackingNumber?: string;
		};
		/** @description These are one or more package-attribute descriptions, each of which describes an individual package, a group of identical packages, or (for the total-piece-total-weight case) common characteristics of all packages in the shipment.<ul><li>At least one instance containing the weight for at least one package is required for EXPRESS and GROUND shipments.</li><li>Single piece requests will have one RequestedPackageLineItem.</li><li>Multiple piece requests will have multiple RequestedPackageLineItems.</li><li>Maximum occurrences is 30.</li></ul> */
		RequestedPackageLineItem: {
			/**
			 * @description Optional. <br>Used only with individual packages as a unique identifier of each requested package. Will be adjusted at the shipment level as pieces are added.
			 * @example 1
			 */
			sequenceNumber?: number;
			/**
			 * @description Indicate the subPackagingType, if you are using your own packaging for the shipment. Use it for all shipments inbound to Canada (CA) and inbound shipments to the U.S. and Puerto Rico (PR) from Canada and Mexico (MX).subPackagingType is mandatory for shipments to Canada.<br>Example: TUBE, CARTON, CONTAINER. etc.<br>Note: If the value is TUBE, a non-machinable surcharge will be applicable for SmartPost shipments.<br><a onclick='loadDocReference("subpackagetypes")'>click here to see Sub-Packaging Types</a><br>For more information on physical packaging or packaging regulatory requirements, contact your FedEx representative.
			 * @example BUCKET
			 */
			subPackagingType?: string;
			/** @description This object lists the customer references provided with the package. */
			customerReferences?: components["schemas"]["CustomerReference_1"][];
			/** @description This is the Declared Value of any shipment which represents FedEx maximum liability associated with a shipment. This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment. */
			declaredValue?: components["schemas"]["Money"];
			weight: components["schemas"]["Weight"];
			/** @description Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required when using a Express freight service.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href='https://www.fedex.com/en-us/service-guide.html' target='_blank'>FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground. */
			dimensions?: components["schemas"]["Dimensions"];
			/**
			 * Format: int32
			 * @description Indicate the grouped package count. These are number of identical package(s) each with one or more commodities. <br> Example: 2
			 * @example 2
			 */
			groupPackageCount?: number;
			/**
			 * @description Describe the content of the package for customs clearance purposes. This applies to intra-UAE, intra-Columbia and intra-Brazil shipments.
			 * @example description
			 */
			itemDescriptionForClearance?: string;
			/** @description Use this object to specify package content details. */
			contentRecord?: components["schemas"]["ContentRecord"][];
			/**
			 * @description This the item description for the package.<br>Note: Item description is required for Email Label return shipments and ground Create tag.<br>Example: Item description<br> Maximum limit is 50 characters
			 * @example item description for the package
			 */
			itemDescription?: string;
			variableHandlingChargeDetail?: components["schemas"]["VariableHandlingChargeDetail"];
			packageSpecialServices?: components["schemas"]["PackageSpecialServicesRequested"];
		};
		CustomerReference_1: {
			/**
			 * @description This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA_ASSOCIATION value sent by the customer is returned on the label in human readable form but also as a barcode.</li></ul>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference("customerreferencetypes")'>For more information, click here for Customer References</a>
			 * @example INVOICE_NUMBER
			 * @enum {string}
			 */
			customerReferenceType?:
				| "CUSTOMER_REFERENCE"
				| "DEPARTMENT_NUMBER"
				| "INVOICE_NUMBER"
				| "P_O_NUMBER"
				| "INTRACOUNTRY_REGULATORY_REFERENCE"
				| "RMA_ASSOCIATION";
			/**
			 * @description This is a customer reference type value.<br>Example: 3686 <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA value sent by the customer is returned on the label in human readable form but also as a barcode. RMA_ASSOCIATION only prints on the label as a barcode for a Return shipment.</ul>NOTE:<ul><li> INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.</li><li>  Maximum length varies for value field depending on customerReferenceType.</li></ul> Maximum length for value is as follows: <ul><li>CUSTOMER_REFERENCE - 40(Express), 30(Ground)</li><li>DEPARTMENT_NUMBER - 30</li><li>INVOICE_NUMBER - 30</li><li>P_O_NUMBER - 30</li><li>INTRACOUNTRY_REGULATORY_REFERENCE - 30</li><li>RMA_ASSOCIATION - 20</li>
			 * @example 3686
			 */
			value?: string;
		};
		/**
		 * @description Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href="https://www.fedex.com/en-us/service-guide.html" target="_blank">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.
		 * @example {
		 *       "length": 100,
		 *       "width": 50,
		 *       "height": 30,
		 *       "units": "CM"
		 *     }
		 */
		Dimensions: {
			/**
			 * Format: int32
			 * @description Indicate the length of the package. No implied decimal places. Maximum value: 999 <br> Example: 20
			 * @example 3
			 */
			length?: number;
			/**
			 * Format: int32
			 * @description Indicate the width of the package. No implied decimal places. Maximum value: 999 <br> Example: 10
			 * @example 2
			 */
			width?: number;
			/**
			 * Format: int32
			 * @description Indicate the height of the package. No implied decimal places. Maximum value: 999 <br> Example: 10
			 * @example 1
			 */
			height?: number;
			/**
			 * @description Indicate the Unit of measure for the provided dimensions.<br>Valid Values are:<li>IN - inches</li><li>CM - centimeters</li>Note: Any value other than CM including blank/null will default to IN.
			 * @example CM
			 * @enum {string}
			 */
			units?: "CM" | "IN";
		};
		/** @description Use this object to specify package content details. */
		ContentRecord: {
			/**
			 * @description This is a package item number.
			 * @example 2876
			 */
			itemNumber?: string;
			/**
			 * Format: int32
			 * @description This is the package item quantity.
			 * @example 256
			 */
			receivedQuantity?: number;
			/**
			 * @description This is the description of the package item.
			 * @example Description
			 */
			description?: string;
			/**
			 * @description This is the part number.
			 * @example 456
			 */
			partNumber?: string;
		};
		/** @description These are special services that are available at the package level for some or all service types. */
		PackageSpecialServicesRequested: {
			/**
			 * @description Indicate the types of special services requested for the shipment.<br><a onclick='loadDocReference("packagelevelspecialservicetypes")'>click here to see Package Special Service Types</a>
			 * @example [
			 *       "ALCOHOL",
			 *       "NON_STANDARD_CONTAINER"
			 *     ]
			 */
			specialServiceTypes?: string[];
			/**
			 * @description Indicate the Signature Type. <br>Valid Values: <ul><li>ADULT - Adult signature required, at recipient address.</li><li>DIRECT - Signature required, at recipient address.</li><li>INDIRECT - Signature required, alternate address is accepted.This option is available for residential deliveries only</li><li>NO_SIGNATURE_REQUIRED - Signature is not required.</li><li>SERVICE_DEFAULT - Signature handled as per current Service Guide.</li></ul>
			 * @example ADULT
			 * @enum {string}
			 */
			signatureOptionType?:
				| "SERVICE_DEFAULT"
				| "NO_SIGNATURE_REQUIRED"
				| "INDIRECT"
				| "DIRECT"
				| "ADULT";
			priorityAlertDetail?: components["schemas"]["PriorityAlertDetail"];
			signatureOptionDetail?: components["schemas"]["SignatureOptionDetail"];
			alcoholDetail?: components["schemas"]["AlcoholDetail"];
			dangerousGoodsDetail?: components["schemas"]["DangerousGoodsDetail"];
			packageCODDetail?: components["schemas"]["PackageCODDetail"];
			/**
			 * Format: int32
			 * @description Provide the pieceCount or VerificationBoxCount for batteries or cells that are contained within this specific package.
			 */
			pieceCountVerificationBoxCount?: number;
			/** @description Provide details about the batteries or cells that are contained within this specific package. */
			batteryDetails?: components["schemas"]["BatteryDetail"][];
			dryIceWeight?: components["schemas"]["Weight_3"];
		};
		/** @description Specifies the Priority Alert Detail. */
		PriorityAlertDetail: {
			/**
			 * @description The types of all enhancement for the Priority Alert.<br>Example: PRIORITY_ALERT_PLUS
			 * @example [
			 *       "PRIORITY_ALERT_PLUS"
			 *     ]
			 */
			enhancementTypes?: string[];
			/**
			 * @description Specifies Content for the Priority Alert Detail.
			 * @example [
			 *       "string"
			 *     ]
			 */
			content?: string[];
		};
		/** @description This element specifies Signature option details. */
		SignatureOptionDetail: {
			/**
			 * @description This is release number.<br>Example: 23456
			 * @example 23456
			 */
			signatureReleaseNumber?: string;
		};
		/** @description These are detcontentails for the package containing alcohol. This is required for alcohol special service. The alcoholRecipientType is required. */
		AlcoholDetail: {
			/**
			 * @description Specify the Alcohol Recipient Type of the shipment. <br> Example: LICENSEE
			 * @example LICENSEE
			 * @enum {string}
			 */
			alcoholRecipientType?: "LICENSEE" | "CONSUMER";
			/**
			 * @description Specify the type of entity, the shipper for alcohol shipment is registered such as fulfillment house, retailer or a winery.
			 * @example Retailer
			 */
			shipperAgreementType?: string;
		};
		/** @description Provide dangerous goods shipment details. */
		DangerousGoodsDetail: {
			/**
			 * @description A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. Its default value is set as False.<br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.
			 * @example false
			 */
			cargoAircraftOnly?: boolean;
			/**
			 * @description Specify Dangerous Goods Accessibility Type. <ul><li>Inaccessible &ndash; it does not have to be accessable on the aircraft.</li><li>Accessible &ndash; it must be fully accessible on the aircraft, and is more strictly controlled.</li></ul>
			 * @example INACCESSIBLE
			 * @enum {string}
			 */
			accessibility: "ACCESSIBLE" | "INACCESSIBLE";
			/**
			 * @description Indicate type of DG being reported.<br> - SMALL_QUANTITY_EXCEPTION : It is applicable for only One Piece shipment.
			 * @example [
			 *       "LIMITED_QUANTITIES_COMMODITIES",
			 *       "ORM_D"
			 *     ]
			 */
			options?: (
				| "HAZARDOUS_MATERIALS"
				| "BATTERY"
				| "ORM_D"
				| "REPORTABLE_QUANTITIES"
				| "SMALL_QUANTITY_EXCEPTION"
				| "LIMITED_QUANTITIES_COMMODITIES"
			)[];
		};
		/** @description These are COD package details. For use with FedEx Ground services only; COD must be present in shipments special services. */
		PackageCODDetail: {
			/** @description Indicate the COD collection amount. */
			codCollectionAmount?: components["schemas"]["Money"];
		};
		BatteryDetail: {
			/**
			 * @description Describe the packing arrangement of the battery or cell with respect to other items within the same package.
			 * @enum {string}
			 */
			batteryPackingType?: "CONTAINED_IN_EQUIPMENT" | "PACKED_WITH_EQUIPMENT";
			/**
			 * @description This is a regulation specific classification for the battery or the cell.
			 * @enum {string}
			 */
			batteryRegulatoryType?: "IATA_SECTION_II";
			/**
			 * @description Indicate the material composition of the battery or cell.
			 * @enum {string}
			 */
			batteryMaterialType?: "LITHIUM_METAL" | "LITHIUM_ION";
		};
		/**
		 * @description This is to specify whether the encoded bytecode or  the Label URL to be returned in the response.<p>Valid values:<ul><li>LABEL &ndash; Indicates request is for encoded bytecode.</li><li>URL_ONLY &ndash; Indicates label URL request.</li></ul>Note: For asynchronous shipment (More than 40 packages) request only the value LABEL is suported.</p><br><i>Note: With URL_ONLY option, the URL once created will be active for 12 hours.</i>
		 * @example LABEL
		 * @enum {string}
		 */
		LABELRESPONSEOPTIONS: "URL_ONLY" | "LABEL";
		/**
		 * @description The account number associated with the shipment.
		 * @example {
		 *       "value": "Your account number"
		 *     }
		 */
		ShipperAccountNumber: {
			/** @description The account number value. Maximum length is 9 .<br>Example: Your account number */
			value: string;
		};
		/**
		 * @description Indicate shipment action for the Shipment. <ul><li>CONFIRM &ndash; used in case of shipment submission</li><li>TRANSFER &ndash; used in case of Email Label Shipment or Pending Shipment submission.
		 * @example CONFIRM
		 * @enum {string}
		 */
		OpenShipmentAction: "CONFIRM" | "TRANSFER";
		/**
		 * @description Indicate the processing option for submitting a Single shot MPS shipment. The value indicates if the MPS to be processed synchronously or asynchronously.<br>Note: <ul><li>Default value is SYNCHRONOUS_ONLY.</li><li>Value or element is not needed when groupPackageCount is less than or equal to 40.</li><li>Must provide element with value ALLOW_ASYNCHRONOUS when groupPackageCount is greater than 40.</li></ul>
		 * @example ALLOW_ASYNCHRONOUS
		 * @enum {string}
		 */
		AsynchronousProcessingOptionType_1:
			| "SYNCHRONOUS_ONLY"
			| "ALLOW_ASYNCHRONOUS";
		/** @description Wrapper class for ShipShipmentOutputVO. It holds transactionId and output. */
		SHPCResponseVO_ShipShipment: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element has a unique identifier added in your request, helps you match the request to the reply.<br>Example: XXXX_XXX123XXXXX
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			output?: components["schemas"]["BaseProcessOutputVO_ShipShipment"];
		};
		BaseProcessOutputVO_ShipShipment: components["schemas"]["ShipShipmentOutputVO"];
		/** @description This is the response received when a shipment is requested. */
		ShipShipmentOutputVO: {
			/** @description These are shipping transaction details, such as master tracking number, service type, and ship date and time. */
			transactionShipments?: components["schemas"]["TransactionShipmentOutputVO"][];
			/** @description The alerts received when processing a shipment request. */
			alerts?: components["schemas"]["Alert"][];
			/**
			 * @description Unique identifier for a Job. Example: abc123456
			 * @example abc123456
			 */
			jobId?: string;
		};
		/** @description Specifies shipping transaction output details */
		TransactionShipmentOutputVO: {
			/**
			 * @description Indicate the FedEx serviceType used for this shipment. The results will be filtered by the serviceType value indicated.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see Service Types</a>
			 * @example STANDARD_OVERNIGHT
			 */
			serviceType?: string;
			/**
			 * @description This is the shipment date. Default value is current date in case the date is not provided or a past date is provided.<br>Format [YYYY-MM-DD].<br>Example: 2019-10-14
			 * @example 2010-03-04
			 */
			shipDatestamp?: string;
			/**
			 * @description Indicates the Service Category.<br>Example: EXPRESS
			 * @example EXPRESS
			 */
			serviceCategory?: string;
			/** @description These are shipping document details. */
			shipmentDocuments?: components["schemas"]["LabelResponseVO"][];
			/** @description Specifies the information about the pieces, received in the response. */
			pieceResponses?: components["schemas"]["PieceResponse"][];
			/**
			 * @description This is the service name associated with the shipment.<br>Example: FedEx Ground
			 * @example FedEx 2 Day Freight
			 */
			serviceName?: string;
			/** @description These are alert details received in the response. */
			alerts?: components["schemas"]["Alert"][];
			completedShipmentDetail?: components["schemas"]["CompletedShipmentDetail"];
			shipmentAdvisoryDetails?: components["schemas"]["ShipmentAdvisoryDetails"];
			/**
			 * @description This is a master tracking number for the shipment (must be unique for stand-alone open shipments, or unique within consolidation if consolidation key is provided).<br>Example: 794953535000
			 * @example 794953535000
			 */
			masterTrackingNumber?: string;
		};
		/** @description These are shipping document/label specific information. */
		LabelResponseVO: {
			/**
			 * @description This is the content key of the document/label.<br>Example: content key
			 * @example content key
			 */
			contentKey?: string;
			/**
			 * Format: int32
			 * @description These are the number of copies to print for the specific document type.<br>Example: 10
			 * @example 10
			 */
			copiesToPrint?: number;
			/**
			 * @description Indicates the type of document/label.
			 * @example COMMERCIAL_INVOICE
			 * @enum {string}
			 */
			contentType?:
				| "LABEL"
				| "BILL_OF_LADING"
				| "GAA_FORM"
				| "HAZMAT_LABEL"
				| "END_OF_DAY_HAZMAT_REPORT"
				| "MANIFEST_REPORT"
				| "MULTIWEIGHT_REPORT"
				| "MERGED_LABEL_DOCUMENTS"
				| "AUXILIARY"
				| "RETURN_INSTRUCTIONS"
				| "ACCEPTANCE_LABEL"
				| "COMMERCIAL_INVOICE"
				| "PROFORMA_INVOICE"
				| "USMCA_CERTIFICATION_OF_ORIGIN"
				| "CERTIFICATE_OF_ORIGIN"
				| "MERGED_LABELS_ONLY";
			/**
			 * @description This is the tracking number of the package. <br>Example: 49XXX0000XXX20032835<br>
			 * @example 794953535000
			 */
			trackingNumber?: string;
			/**
			 * @description This is the document type.<br>Example: PDF
			 * @example PDF
			 */
			docType?: string;
			/** @description These are alerts received in the label response. */
			alerts?: components["schemas"]["Alert"][];
			/**
			 * @description Specifies if the document is encoded.<br>Example: encoded label
			 * @example encoded label
			 */
			encodedLabel?: string;
			/**
			 * @description The URL of the shipping document/label<br>Example: https://.../document/v2/document/retrieve/SH,794816968200_Merge/isLabel=true&autoPrint=false<br><i>Note: The URL once created will be active for 24 hours.</i>
			 * @example https://wwwdev.idev.fedex.com/document/v2/document/retrieve/SH,794810209259_SHIPPING_P/isLabel=true&autoPrint=false
			 */
			url?: string;
		};
		/** @description These are alert details received in the response. */
		Alert: {
			/**
			 * @description Specifies the API alert code.<br>Example: SHIP.RECIPIENT.POSTALCITY.MISMATCH
			 * @example SHIP.RECIPIENT.POSTALCITY.MISMATCH
			 */
			code?: string;
			/**
			 * @description Specifies the API alert type.
			 * @example NOTE
			 * @enum {string}
			 */
			alertType?: "NOTE" | "WARNING";
			/**
			 * @description Specifies the API alert message.<br>Example: Recipient Postal-City Mismatch.
			 * @example Recipient Postal-City Mismatch.
			 */
			message?: string;
		};
		/** @description Piece Response information. */
		PieceResponse: {
			/**
			 * Format: double
			 * @description Indicates the net charges amount.<br>Example: 21.45
			 * @example 21.45
			 */
			netChargeAmount?: number;
			/** @description Indicates data received that governs data payload language/translations. The TransactionDetail from the request is echoed back to the caller in the corresponding reply. */
			transactionDetails?: components["schemas"]["TransactionDetailVO"][];
			/** @description These are package documents returned in the response. */
			packageDocuments?: components["schemas"]["LabelResponseVO"][];
			/**
			 * @description Indicates the acceptance tracking number.<br>Example: 7949XXXXX5000
			 * @example 794953535000
			 */
			acceptanceTrackingNumber?: string;
			/**
			 * @description Indicates the service category.
			 * @example EXPRESS
			 * @enum {string}
			 */
			serviceCategory?:
				| "EXPRESS"
				| "GROUND"
				| "EXPRESS_FREIGHT"
				| "FREIGHT"
				| "SMARTPOST"
				| "EXPRESS_PARCEL"
				| "NULL";
			/**
			 * @description Indicates total charges applicable to the customer.<br>Example: listCustomerTotalCharge
			 * @example listCustomerTotalCharge
			 */
			listCustomerTotalCharge?: string;
			/**
			 * @description Indicates delivery date with timestamp.<br>Example: 2012-09-23
			 * @example 2012-09-23
			 */
			deliveryTimestamp?: string;
			/**
			 * @description Indicates the type of the tracking identifier.
			 * @example FEDEX
			 */
			trackingIdType?: string;
			/**
			 * Format: double
			 * @description These are additional charges or discounts.<br>Example: 621.45
			 * @example 621.45
			 */
			additionalChargesDiscount?: number;
			/**
			 * Format: double
			 * @description Indicates the net List rate amount.<br>Example: 1.45
			 * @example 1.45
			 */
			netListRateAmount?: number;
			/**
			 * Format: double
			 * @description Specifies the base rate amount.<br>Example: 321.45
			 * @example 321.45
			 */
			baseRateAmount?: number;
			/**
			 * Format: int32
			 * @description Indicates package sequence number.<br>Example: 215
			 * @example 215
			 */
			packageSequenceNumber?: number;
			/**
			 * Format: double
			 * @description Specifies the net discount amount.<br>Example: 121.45
			 * @example 121.45
			 */
			netDiscountAmount?: number;
			/**
			 * Format: double
			 * @description Specifies the Collect on Delivery collection amount.<br>Example: 231.45
			 * @example 231.45
			 */
			codcollectionAmount?: number;
			/**
			 * @description This is a master tracking number of the shipment (must be unique for stand-alone open shipments, or unique within consolidation if consolidation key is provided).<br>Example: 794XXXXX5000
			 * @example 794953535000
			 */
			masterTrackingNumber?: string;
			/**
			 * @description Indicates acceptance type.
			 * @example acceptanceType
			 */
			acceptanceType?: string;
			/**
			 * @description This is the tracking number associated with this package. <br>Example: 49XXX0000XXX20032835
			 * @example 794953535000
			 */
			trackingNumber?: string;
			/**
			 * @description Returns true if the responses are successful otherwise false.
			 * @example true
			 */
			successful?: boolean;
			/** @description These are additional customer reference data.<br>Note: The groupPackageCount must be specified to retrieve customer references. */
			customerReferences?: components["schemas"]["CustomerReference"][];
		};
		TransactionDetailVO: {
			/**
			 * @description Includes data returned which governs data payload language/translations. The TransactionDetail from the request is echoed back to the caller in the corresponding reply.<br>Example: transactionDetails
			 * @example transactionDetails
			 */
			transactionDetails?: string;
			/**
			 * @description This element has a unique identifier added in your request, helps you match the request to the reply. Maximum of 40 characters allowed.<br>Example: XXXX_XXX123XXXXX.
			 * @example 12345
			 */
			transactionId?: string;
		};
		/** @description Returns the result of processing the desired package as a single-package shipment. */
		CompletedShipmentDetail: {
			/** @description Indicates the completed package details. */
			completedPackageDetails?: components["schemas"]["CompletedPackageDetail"][];
			operationalDetail?: components["schemas"]["ShipmentOperationalDetail"];
			/**
			 * @description Specify the four letter code of a FedEx operating company that meets your requirements<br>Examples of FedEx Operating Companies are:<ul><li>FDXE - FedEx Express</li><li>FDXG - FedEx Ground</li><li>FXSP - FedEx SmartPost</li><li>FXCC - FedEx Custom Critical.</li></ul>
			 * @example FDXE
			 */
			carrierCode?: string;
			completedHoldAtLocationDetail?: components["schemas"]["CompletedHoldAtLocationDetail"];
			completedEtdDetail?: components["schemas"]["CompletedEtdDetail"];
			/**
			 * @description Specifies packaging description.
			 * @example description
			 */
			packagingDescription?: string;
			masterTrackingId?: components["schemas"]["TrackingId"];
			serviceDescription?: components["schemas"]["ServiceDescription"];
			/**
			 * @description Indicates whether or not this is an intra-U.S. shipment.
			 * @example true
			 */
			usDomestic?: boolean;
			hazardousShipmentDetail?: components["schemas"]["CompletedHazardousShipmentDetail"];
			shipmentRating?: components["schemas"]["ShipmentRating"];
			documentRequirements?: components["schemas"]["DocumentRequirementsDetail"];
			/**
			 * @description For US export shipments requiring an EEI, enter the ITN number received from AES when you filed your shipment or the FTR (Foreign Trade Regulations) exemption number.The proper format for an ITN number is AES XYYYYMMDDNNNNNN where YYYYMMDD is date and NNNNNN are numbers generated by the AES.<br> Example: AESX20220714987654<br>Note: The ITN or FTR exemption number you submit in the ship request prints on the international shipping label.<br><br>For CA export shipments,it can be Proof of report number(15-32 alphanumeric) , Summary proof of report number(7-32 alphanumeric) or Exemption number(2 digit) based on the selected b13AFilingOption.<br>Example: 98765432107654321(POR number), 7654321(Summary POR number) and 02(Exemption number).<br>For FTR exemption number you need provide a predefined value as NO_EEI_30_37_A.
			 * @example 12345678901234567
			 */
			exportComplianceStatement?: string;
			accessDetail?: components["schemas"]["PendingShipmentAccessDetail"];
		};
		CompletedPackageDetail: {
			/**
			 * Format: int32
			 * @description This is package sequence number. No negative value or decimals are allowed.<br>Example: 256
			 * @example 256
			 */
			sequenceNumber?: number;
			operationalDetail?: components["schemas"]["PackageOperationalDetail"];
			/**
			 * @description It specifies the signature option applied, to allow cases in which the value requested conflicted with other service features in the shipment. <br>Example: DIRECT
			 * @example DIRECT
			 */
			signatureOption?: string;
			/** @description Tracking details of the package. */
			trackingIds?: components["schemas"]["TrackingId"][];
			/**
			 * Format: int32
			 * @description This is group shipment number. Used with request containing PACKAGE_GROUPS, to identify which group of identical packages was used to produce a reply item.<br>Example: 10
			 * @example 567
			 */
			groupNumber?: number;
			/**
			 * @description Indicates the oversize classification.<br>Example: OVERSIZE_1
			 * @example OVERSIZE_1, OVERSIZE_2, OVERSIZE_3
			 */
			oversizeClass?: string;
			packageRating?: components["schemas"]["PackageRating"];
			/** @description Descriptive data required for a FedEx shipment containing dry ice. Includes weight and units. This element is required when SpecialServiceType DRY_ICE is present in the SpecialServiceTypes collection at the package level. */
			dryIceWeight?: components["schemas"]["Weight"];
			hazardousPackageDetail?: components["schemas"]["CompletedHazardousPackageDetail"];
		};
		/** @description Package-level data required for labeling and/or movement. */
		PackageOperationalDetail: {
			/**
			 * @description This is human-readable astra handling text.
			 * @example astraHandlingText
			 */
			astraHandlingText?: string;
			barcodes?: components["schemas"]["PackageBarcodes"];
			/** @description These are operational instruction such as Ground Information printed on a given area of the label, one-dimensional barcode with only x-axis that contains the details of the shipment in encrypted form, COD Return operational instructions data such as COD amount, SECURED or UNSECURED. */
			operationalInstructions?: components["schemas"]["OperationalInstructions"][];
		};
		/** @description These are package barcode details. Each instance of this data type represents the set of barcodes (of all types) which are associated with a specific package. */
		PackageBarcodes: {
			/** @description This is binary-style barcodes used for the package identification. */
			binaryBarcodes?: components["schemas"]["BinaryBarcode"][];
			/** @description This is string-style barcodes  used for package identification. */
			stringBarcodes?: components["schemas"]["StringBarcode"][];
		};
		/** @description Each instance of this data type represents a barcode whose content must be represented as binary data (i.e. not ASCII text). */
		BinaryBarcode: {
			/**
			 * @description This is the type of barcode data available in this instance.<br> Example: COMMON-2D
			 * @example COMMON-2D
			 */
			type?: string;
			/**
			 * Format: byte
			 * @description This is the value.
			 */
			value?: string;
		};
		/** @description Each instance of this data type represents a barcode whose content must be represented as ASCII text (i.e. not binary data). */
		StringBarcode: {
			/**
			 * @description This is the type of barcode data in this instance. <br>Valid values:<ul><li>ADDRESS - Represents the recipient address.</li></ul>
			 * @example ADDRESS
			 */
			type?: string;
			/**
			 * @description This is the value.<br>Example: 1010062512241535917900794953544894
			 * @example 1010062512241535917900794953544894
			 */
			value?: string;
		};
		OperationalInstructions: {
			/**
			 * Format: int32
			 * @description Specifies the number of operational instructions returned for this shipment.<br>Example: 17
			 * @example 17
			 */
			number?: number;
			/**
			 * @description This is an operational instruction printed or available on the shipping document.<br>Example: SECURED
			 * @example content
			 */
			content?: string;
		};
		/** @description Indicates the tracking details of the package. */
		TrackingId: {
			/**
			 * @description This is FedEx tracking Identifier associated with the package.<br>Example: 8600
			 * @example 0201
			 */
			formId?: string;
			/**
			 * @description Specify the FedEx transportation type. <br>Example: EXPRESS
			 * @example EXPRESS
			 */
			trackingIdType?: string;
			/**
			 * @description Specify the USPS tracking Identifier associated with FedEx SmartPost shipment.<br>Example: 92
			 * @example 92
			 */
			uspsApplicationId?: number;
			/**
			 * @description This is the number associated with the package that is used to track it. <br>Example: 49XXX0000XXX20032835
			 * @example 49092000070120032835
			 */
			trackingNumber?: string;
		};
		/** @description This class groups together all package-level rate data for a single package (across all rate types) as part of the response to a shipping request, which groups shipment-level data together and groups package-level data by package. */
		PackageRating: {
			/**
			 * Format: double
			 * @description This is the difference between the list and account net charge.<br>Example: 0.0
			 * @example 0
			 */
			effectiveNetDiscount?: number;
			/**
			 * @description This is the actual rate type. It identifies which entry in the following array is considered as presenting the actual rates for the package.<br>Example: PAYOR_ACCOUNT_PACKAGE
			 * @example PAYOR_ACCOUNT_PACKAGE
			 */
			actualRateType?: string;
			/** @description Data for a package's rates, as calculated per a specific rate type. */
			packageRateDetails?: components["schemas"]["PackageRateDetail"][];
		};
		/** @description These are package rate details, as calculated per a specific rate type. */
		PackageRateDetail: {
			/**
			 * @description Indicates the weight types used in calculating this rate, such as actual weight or dimensional weight.<br> Example: DIM
			 * @example DIM
			 */
			ratedWeightMethod?: string;
			/**
			 * Format: double
			 * @description The sum of all freight discounts for this package.<br>Example: 44.55
			 * @example 44.55
			 */
			totalFreightDiscounts?: number;
			/**
			 * Format: double
			 * @description The sum of all taxes on this package.<br>Example: 3.45
			 * @example 3.45
			 */
			totalTaxes?: number;
			/**
			 * @description Indicates the minumum charge type. INTERNAL FEDEX USE ONLY.
			 * @example CUSTOMER
			 */
			minimumChargeType?: string;
			/**
			 * Format: double
			 * @description The package transportation charge(prior to any discounts applied).<br>Example: 45.67
			 * @example 45.67
			 */
			baseCharge?: number;
			/**
			 * Format: double
			 * @description Specifies total rebates on this package.<br>Example: 4.56
			 * @example 4.56
			 */
			totalRebates?: number;
			/**
			 * @description This is the rate type used.<br>Example: PAYOR_RETAIL_PACKAGE
			 * @example PAYOR_RETAIL_PACKAGE
			 */
			rateType?: string;
			billingWeight?: components["schemas"]["Weight"];
			/**
			 * Format: double
			 * @description This is the net freight charges. i.e. base charge minus total freight discounts for a package.<br>Example: 4.89
			 * @example 4.89
			 */
			netFreight?: number;
			/** @description These are all surcharges on this package.<br><a onclick='loadDocReference("surcharges")'>click here to see Surcharges</a> */
			surcharges?: components["schemas"]["Surcharge"][];
			/**
			 * Format: double
			 * @description The sum of all surcharges on this package.<br>Example: 22.56
			 * @example 22.56
			 */
			totalSurcharges?: number;
			/**
			 * Format: double
			 * @description This is sum of net freight and total surcharges (not including totalTaxes) for this package.<br>Example: 12.56
			 * @example 12.56
			 */
			netFedExCharge?: number;
			/**
			 * Format: double
			 * @description This is the sum of net freight, total surcharges and total taxes for a package.<br>Example: 121.56
			 * @example 121.56
			 */
			netCharge?: number;
			/**
			 * @description This is the currency code. <br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a>
			 * @example USD
			 */
			currency?: string;
		};
		/** @description These are surcharges details.<br><a onclick='loadDocReference("surcharges")'>click here to see Surcharges</a> */
		Surcharge: {
			/** @description This is the surcharge amount.<br>Example: 15.35 */
			amount?: unknown;
			/**
			 * @description This is the surcharge type.<br>Example: APPOINTMENT_DELIVERY
			 * @example APPOINTMENT_DELIVERY
			 */
			surchargeType?: string;
			/**
			 * @description Specifies if the surcharge applies to the entire shipment, or to an individual package.<br>Example: PACKAGE
			 * @example PACKAGE, or SHIPMENT
			 */
			level?: string;
			/**
			 * @description Specifies the description of the surcharge. Indicates delivery and returns information for FedEx Ground Economy services. <br>Example: Fuel Surcharge
			 * @example description
			 */
			description?: string;
		};
		/** @description Complete package-level hazardous commodity information for a single package. */
		CompletedHazardousPackageDetail: {
			/**
			 * @description Specifies the hazardous package regulation type.<br>Example: IATA
			 * @example IATA
			 */
			regulation?: string;
			/**
			 * @description Specifies the hazardous package accessibility.<br>Example: ACCESSIBLE
			 * @example ACCESSIBLE
			 */
			accessibility?: string;
			/**
			 * @description Specifies the label type of hazardous package.<br>Example: II_YELLOW
			 * @example II_YELLOW
			 */
			labelType?: string;
			/** @description Indicates one or more approved containers used to pack dangerous goods commodities. This does not describe any individual inner receptacles that may be within this container. */
			containers?: components["schemas"]["ValidatedHazardousContainer"][];
			/**
			 * @description A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. Its default value is set as False.<br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.
			 * @example true
			 */
			cargoAircraftOnly?: boolean;
			/**
			 * @description A unique reference id that matches the package to a package configuration. This is populated if the client provided a package configuration for several packages that have the exact same dangerous goods content.<br>Example: 123456
			 * @example 123456
			 */
			referenceId?: string;
			/**
			 * Format: double
			 * @description Specifies the maximum radiation level from the package (measured in microSieverts per hour at a distance of one meter from the external surface of the package, divided by 10).<br>Example: 2.45
			 * @example 2.45
			 */
			radioactiveTransportIndex?: number;
		};
		/** @description Specifies the details of a container used to package dangerous goods commodities. */
		ValidatedHazardousContainer: {
			/**
			 * Format: double
			 * @description Indicates that the quantity of the dangerous goods packaged is permissible for shipping. This is used to ensure that the dangerous goods commodities do not exceed the net quantity per package restrictions.<br>Example: 2.0
			 * @example 2
			 */
			qvalue?: number;
			/** @description Indicates the details of the hazardous commodities in the completed package. */
			hazardousCommodities?: components["schemas"]["ValidatedHazardousCommodityContent"][];
		};
		/** @description These the details on the kind and quantity of an individual hazardous commodity in a package. */
		ValidatedHazardousCommodityContent: {
			/** @description Indicates hazardous commodity quantity details. */
			quantity?: components["schemas"]["HazardousCommodityQuantityDetail"];
			options?: components["schemas"]["HazardousCommodityContent001"];
			description?: components["schemas"]["ValidatedHazardousCommodityDescription"];
			netExplosiveDetail?: components["schemas"]["NetExplosiveDetail"];
			/**
			 * Format: double
			 * @description The mass points are a calculation used by ADR regulations for measuring the risk of a particular hazardous commodity.<br>Example: 2.0
			 * @example 2
			 */
			massPoints?: number;
		};
		/** @description Specify the Hazardous commodity quantity details. */
		HazardousCommodityQuantityDetail: {
			/**
			 * @description Indicate the measure of units quantity to be validated.
			 * @example GROSS
			 * @enum {string}
			 */
			quantityType: "GROSS" | "NET";
			/**
			 * Format: double
			 * @description Indicate the amount of the commodity in alternate units.<br>Example: 24.56
			 * @example 24.56
			 */
			amount: number;
			/**
			 * @description Indicate the unit of measure.<br>Example: KG
			 * @example Kg
			 */
			units?: string;
		};
		/** @description Customer-provided specifications for handling individual commodities. */
		HazardousCommodityContent001: {
			quantity?: components["schemas"]["HazardousCommodityQuantityDetail"];
			/** @description Specifies the inner receptacles within the container. */
			innerReceptacles?: components["schemas"]["HazardousCommodityInnerReceptacleDetail01"][];
			options?: components["schemas"]["HazardousCommodityOptionDetail01"];
			description?: components["schemas"]["HazardousCommodityDescription01"];
		};
		HazardousCommodityInnerReceptacleDetail01: {
			quantity?: components["schemas"]["HazardousCommodityQuantityDetail002"];
		};
		/** @description Indicates the Hazardous Commodity Quantity Detail. */
		HazardousCommodityQuantityDetail002: {
			/**
			 * @description Specifies which measure of quantity is to be validated.
			 * @example NET
			 * @enum {string}
			 */
			quantityType: "GROSS" | "NET";
			/**
			 * Format: double
			 * @description Number of units of the type below.<br>Example: 34.56
			 * @example 34.56
			 */
			amount: number;
			/**
			 * @description Specifies the units.<br>Example: KG
			 * @example Kg
			 */
			units?: string;
		};
		/** @description Indicates details of hazardous commodity option detail. */
		HazardousCommodityOptionDetail01: {
			/**
			 * @description Indicates the label text option.
			 * @enum {string}
			 */
			labelTextOption?: "APPEND" | "OVERRIDE" | "STANDARD";
			/**
			 * @description 'DG Data Upload Mode:- Optional.,DG Full Validation Mode:- Optional,Text used in labeling the commodity under control of the LabelTextOption field<br>Example:Customer Supplied Label Text'
			 *
			 * @example Customer Supplied Label Text.
			 */
			customerSuppliedLabelText?: string;
		};
		/** @description Required<br>Details of hazardous commodity description. */
		HazardousCommodityDescription01: {
			/**
			 * Format: int32
			 * @description Required<br>Specify the sequence number.<br>Example: 9812
			 * @example 9812
			 */
			sequenceNumber?: number;
			/** @description Indicates any special processing options to be applied to the description of the dangerous goods commodity <br> Example: ["INCLUDE_SPECIAL_PROVISIONS"] */
			processingOptions?: "INCLUDE_SPECIAL_PROVISIONS"[];
			/**
			 * @description Required
			 *
			 *     Indicates list of subsidiary classes<br>Example: ["Subsidiary Classes"]
			 * @example [
			 *       "Subsidiary Classes"
			 *     ]
			 */
			subsidiaryClasses?: string[];
			/**
			 * @description Specifies the text for the label.
			 * @example labelText
			 */
			labelText?: string;
			/**
			 * @description Specifies the technical name for the hazardous material.
			 * @example technicalName
			 */
			technicalName?: string;
			packingDetails?: components["schemas"]["HazardousCommodityPackingDetail01"];
			/**
			 * @description Information related to quantity limitations and operator or state variations as may be applicable to the dangerous goods commodity.
			 * @example authorization
			 */
			authorization?: string;
			/**
			 * @description Reportable Quantity
			 * @example true
			 */
			reportableQuantity: boolean;
			/**
			 * Format: double
			 * @description Percentage<br>Example: 12.45
			 * @example 12.45
			 */
			percentage?: number;
			/**
			 * @description ID<br>Example: 123
			 * @example 123
			 */
			id?: string;
			/**
			 * @description Identifies DOT packing group for a hazardous commodity
			 * @example I
			 * @enum {string}
			 */
			packingGroup: "DEFAULT" | "I" | "II" | "III";
			/**
			 * @description The proper shipping name as defined by the regulation. The name can also include qualifying words<br>Example: properShippingName
			 * @example properShippingName
			 */
			properShippingName?: string;
			/**
			 * @description Specifies the hazard class for the commodity<br>Example: hazard Class
			 *
			 * @example hazard Class
			 */
			hazardClass?: string;
		};
		/** @description Specifies documentation and limits for validation of an individual packing group/category. DG Data Upload Mode: Required (IATA), Optional (Other), DG Full Validation Mode: Required (IATA), Optional (Other), */
		HazardousCommodityPackingDetail01: {
			/**
			 * @description Coded specification for how commodity is to be packed.<br>Example: packing Instructions
			 * @example packing Instructions
			 */
			packingInstructions?: string;
			/**
			 * @description A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. <br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.
			 * @example true
			 */
			cargoAircraftOnly: boolean;
		};
		/** @description Identifies and describes an individual hazardous commodity. For 201001 load, this is based on data from the FedEx Ground Hazardous Materials Shipping Guide. */
		ValidatedHazardousCommodityDescription: {
			/**
			 * Format: int32
			 * @description In conjunction with the regulatory identifier, this field uniquely identifies a specific hazardous materials commodity.<br>Example: 876
			 * @example 876
			 */
			sequenceNumber?: number;
			/**
			 * @description Specifies Packing Instructions.<br>Example: packingInstructions
			 * @example packingInstructions
			 */
			packingInstructions?: string;
			/**
			 * @description Specifies subsidiary Classes.<br>Example:["Subsidiary Classes"]
			 * @example [
			 *       "Subsidiary Classes"
			 *     ]
			 */
			subsidiaryClasses?: string[];
			/**
			 * @description Specifies the text for the label.
			 * @example labelText
			 */
			labelText?: string;
			/**
			 * @description There are five categories of tunnel categorization with A representing the least restrictive and E as the most restrictive. Category A, as the least restrictive, will not be sign-posted. Category E, the most restrictive, only allows the passage of UN2919, UN3291, UN3331, UN3359 and UN3373.<br>Example: UN2919
			 * @example UN2919
			 */
			tunnelRestrictionCode?: string;
			/**
			 * @description Specifies Special Provisions if any.<br>Example: specialProvisions
			 * @example specialProvisions
			 */
			specialProvisions?: string;
			/**
			 * @description Fully-expanded descriptive text for a hazardous commodity.<br>Example: properShippingNameAndDescription
			 * @example properShippingNameAndDescription
			 */
			properShippingNameAndDescription?: string;
			/**
			 * @description Specifies Technical Name.<br>Example: technicalName
			 * @example technicalName
			 */
			technicalName?: string;
			/**
			 * @description Specifies Symbols.<br>Example: symbols
			 * @example symbols
			 */
			symbols?: string;
			/**
			 * @description Information related to quantity limitations and operator or state variations as may be applicable to the dangerous goods commodity.
			 * @example authorization
			 */
			authorization?: string;
			/**
			 * @description Specifies attributes.<br>Example: ["attributes"]
			 * @example [
			 *       "attributes"
			 *     ]
			 */
			attributes?: string[];
			/**
			 * @description Specifies the Identification.<br>Example: 1234
			 * @example 1234
			 */
			id?: string;
			/**
			 * @description Specifies packing group.
			 * @example packingGroup
			 */
			packingGroup?: string;
			/**
			 * @description Specifies proper shipping name.
			 * @example properShippingName
			 */
			properShippingName?: string;
			/**
			 * @description Specifies hazard class.<br>Example: Hazard Class
			 * @example hazardClass
			 */
			hazardClass?: string;
		};
		/** @description Specifies the total mass of the contained explosive substances, without the mass of any casings, bullets, shells, etc. */
		NetExplosiveDetail: {
			/**
			 * Format: double
			 * @description Specifies amount.<br>Example: 10.0
			 * @example 10
			 */
			amount?: number;
			/**
			 * @description Specifies net explosive units.<br>Example: units
			 * @example units
			 */
			units?: string;
			/**
			 * @description Specifies net explosive  classification type.<br>Example: NET_EXPLOSIVE_WEIGHT
			 * @example NET_EXPLOSIVE_WEIGHT
			 */
			type?: string;
		};
		/** @description Indicates the shipment level operational information. */
		ShipmentOperationalDetail: {
			/**
			 * @description Indicates the origin service area.<br>Example: A1
			 * @example A1
			 */
			originServiceArea?: string;
			/**
			 * @description Indicates the service code.<br>Example: 010
			 * @example 010
			 */
			serviceCode?: string;
			/**
			 * @description Indicates the airport identifier.<br>Example: DFW
			 * @example DFW
			 */
			airportId?: string;
			/**
			 * @description Specifies the postal code.<br>Example: 38010<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
			 * @example 38010
			 */
			postalCode?: string;
			/**
			 * @description Indicates standard carrier alpha code.
			 * @example scac
			 */
			scac?: string;
			/**
			 * @description Specifies expected/estimated day of week of the delivery.<br>Example: TUE
			 * @example TUE
			 */
			deliveryDay?: string;
			/**
			 * @description This is the origin Location identifier.<br>Example: 678
			 * @example 678
			 */
			originLocationId?: string;
			/**
			 * @description Indicate the two-letter country code.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
			 * @example US
			 */
			countryCode?: string;
			/**
			 * @description Specifies astra description.<br>Example: SMART POST
			 * @example SMART POST
			 */
			astraDescription?: string;
			/**
			 * Format: int32
			 * @description Specifies origin location number.<br>Example: 243
			 * @example 243
			 */
			originLocationNumber?: number;
			/**
			 * @description Specifies delivery date for the shipment. The format is [YYYY-MM-DD]<br>Example: 2001-04-05
			 * @example 2001-04-05
			 */
			deliveryDate?: string;
			/**
			 * @description FedEx Ground delivery features for which this shipment may be eligible.<br>Example: ["deliveryEligibilities"]
			 * @example [
			 *       "deliveryEligibilities"
			 *     ]
			 */
			deliveryEligibilities?: string[];
			/**
			 * @description Indicates that this shipment is not eligible for money back guarantee.
			 * @example true
			 */
			ineligibleForMoneyBackGuarantee?: boolean;
			/**
			 * @description Maximum expected transit time.<br>Example: SEVEN_DAYS
			 * @example SEVEN_DAYS
			 */
			maximumTransitTime?: string;
			/**
			 * @description This is the state or province code of the shipment destination location, and is not necessarily the same as the postal state.<br>Example: GA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
			 * @example GA
			 */
			destinationLocationStateOrProvinceCode?: string;
			/**
			 * @description Text describing planned delivery.<br>Example: TUE - 15 OCT 10:30A
			 * @example TUE - 15 OCT 10:30A
			 */
			astraPlannedServiceLevel?: string;
			/**
			 * @description Specifies the FedEx Destination Location Identifier.<br>Example: DALA
			 * @example DALA
			 */
			destinationLocationId?: string;
			/**
			 * @description Standard transit time per origin, destination, and service.<br>Example: TWO_DAYS
			 * @example TWO_DAYS
			 */
			transitTime?: string;
			/**
			 * @description This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
			 * @example GA
			 */
			stateOrProvinceCode?: string;
			/**
			 * Format: int32
			 * @description Indicates destination location number.<br>Example: 876
			 * @example 876
			 */
			destinationLocationNumber?: number;
			/**
			 * @description Indicates packaging code.<br>Example: 03
			 * @example 03
			 */
			packagingCode?: string;
			/**
			 * @description This is committed date of delivery.<br>Example: 2019-10-15
			 * @example 2019-10-15
			 */
			commitDate?: string;
			/**
			 * @description This is delivery time, as published in Service Guide.<br>Example: 10:30A
			 * @example 10:30A
			 */
			publishedDeliveryTime?: string;
			/**
			 * @description This is ursa suffix code.<br>Example: Ga
			 * @example Ga
			 */
			ursaSuffixCode?: string;
			/**
			 * @description This is ursa prefix code.<br>Example: XH
			 * @example XH
			 */
			ursaPrefixCode?: string;
			/**
			 * @description Specifies destination service area.<br>Example: A1
			 * @example A1
			 */
			destinationServiceArea?: string;
			/**
			 * @description Committed day of week of delivery.<br>Example: TUE
			 * @example TUE
			 */
			commitDay?: string;
			/**
			 * @description Transit time based on customer eligibility.<br>Example: ONE_DAY
			 * @example ONE_DAY
			 */
			customTransitTime?: string;
		};
		/** @description This is default holding location information when HOLD_AT_LOCATION special service is requested and the client does not specify the hold location address. */
		CompletedHoldAtLocationDetail: {
			/**
			 * @description Indicates the type of the FedEx holding location <br>Example: FEDEX_STAFFED
			 * @example FEDEX_STAFFED
			 */
			holdingLocationType?: string;
			/** @description Indicate the physical address of the FedEx holding location. */
			holdingLocation?: components["schemas"]["JustContactAndAddress"];
		};
		JustContactAndAddress: {
			address?: components["schemas"]["Address"];
			contact?: components["schemas"]["Contact"];
		};
		/**
		 * @description Descriptive data for a physical location. May be used as an actual physical address (place to which one could go), or as a container of "address parts" which should be handled as a unit (such as a city-state-ZIP combination within the US).
		 * @example {
		 *       "streetLines": [
		 *         "10 FedEx Parkway",
		 *         "Suite 302"
		 *       ],
		 *       "city": "Beverly Hills",
		 *       "stateOrProvinceCode": "CA",
		 *       "postalCode": "38127",
		 *       "countryCode": "US",
		 *       "residential": false
		 *     }
		 */
		Address: {
			/** @description This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.] */
			streetLines: string[];
			/** @description This is a placeholder for City Name.<br>Note: This is conditional and not required in all the requests.<br>Note: It is recommended for Express shipments for the most accurate ODA and OPA surcharges.<br>Example: Beverly Hills */
			city?: string;
			/** @description This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a> */
			stateOrProvinceCode?: string;
			/** @description Indicate the Postal code. This is Optional for non postal-aware countries. Maximum length is 10.<br> Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a> */
			postalCode?: string;
			/** @description This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a> */
			countryCode: string;
			/** @description Indicate whether this address is residential (as opposed to commercial). */
			residential?: boolean;
		};
		/**
		 * @description Specify the contact information.
		 * @example {
		 *       "personName": "John Taylor",
		 *       "tollFreePhoneNumber": "6127812",
		 *       "emailAddress": "sample@company.com",
		 *       "phoneNumber": "1234567890",
		 *       "phoneExtension": "91",
		 *       "faxNumber": "1234567890",
		 *       "pagerNumber": "6127812",
		 *       "companyName": "Fedex",
		 *       "title": "title"
		 *     }
		 */
		Contact: {
			/** @description Specify person name.<br>Example: John Taylor */
			personName?: string;
			/** @description Specify toll free phone number.<br>Example: XXXX7812 */
			tollFreePhoneNumber?: string;
			/** @description Specify email address.<br>Example: sample@company.com */
			emailAddress?: string;
			/** @description The shippers phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of 1 or +1.<br>Example: 918xxxxx890 */
			phoneNumber?: string;
			/** @description The shipper's phone extension. Max length is 6.<br>Example: 91 */
			phoneExtension?: string;
			/** @description Specify company name. */
			companyName?: string;
			/** @description Specify pager number.<br>Example: XXX7812 */
			pagerNumber?: string;
			/** @description Specify fax number.<br>Example: XXXX567890 */
			faxNumber?: string;
			/** @description Specify the title of the contact. */
			title?: string;
		};
		/** @description These are completed ETD details when ELECTRONIC_TRADE_DOCUMENTS Special service type is requested */
		CompletedEtdDetail: {
			/**
			 * @description Returns the folder id where the documents is uploaded <br> Example: "0b0493e580dc1a1b"
			 * @example 0b0493e580dc1a1b
			 */
			folderId?: string;
			/**
			 * @description Returns the type of the document that is being uploaded <br> Example: "COMMERCIAL_INVOICE"
			 * @example COMMERCIAL_INVOICE
			 */
			type?: string;
			/** @description Specify the document upload reference details. */
			uploadDocumentReferenceDetails?: components["schemas"]["UploadDocumentReferenceDetail"][];
		};
		/** @description Descriptions for a service. */
		ServiceDescription: {
			/**
			 * @description Indicate the FedEx serviceType used for this shipment. The results will be filtered by the serviceType value indicated.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see Service Types</a>
			 * @example FEDEX_1_DAY_FREIGHT
			 */
			serviceType?: string;
			/**
			 * @description Specifies code of the Service.<br>example: 80
			 * @example 80
			 */
			code?: string;
			/** @description Branded, translated, and/or localized names for this service. */
			names?: components["schemas"]["ProductName"][];
			/**
			 * @description FOR FEDEX INTERNAL USE ONLY. The operating org code in a service.<br>Example: ["FXE", "FXE"]
			 * @example [
			 *       "FXE"
			 *     ]
			 */
			operatingOrgCodes?: string[];
			/**
			 * @description Specifies astra Description.<br>Example: 2 DAY FRT
			 * @example 2 DAY FRT
			 */
			astraDescription?: string;
			/**
			 * @description Specifies the description.
			 * @example description
			 */
			description?: string;
			/**
			 * @description FOR FEDEX INTERNAL USE ONLY, Designates the service ID.<br>Example: EP1000000027
			 * @example EP1000000027
			 */
			serviceId?: string;
			/**
			 * @description FOR FEDEX INTERNAL USE ONLY. This is tied to the Product EFS interface definition which will currently contain the values of parcel.<br>Example: EXPRESS_PARCEL
			 * @example freight
			 */
			serviceCategory?: string;
		};
		/** @description Product Name information. */
		ProductName: {
			/**
			 * @description The type of name (long, medium, short, etc.) to which this value refers.<br>Example: long
			 * @example long
			 */
			type?: string;
			/**
			 * @description The character encoding used to represent this product name. <br>Example: UTF-8
			 * @example UTF-8
			 */
			encoding?: string;
			/**
			 * @description Specifies the value of the Product.<br>Example: F-2
			 * @example F-2
			 */
			value?: string;
		};
		/** @description Completed shipment level hazardous commodity information. */
		CompletedHazardousShipmentDetail: {
			hazardousSummaryDetail?: components["schemas"]["CompletedHazardousSummaryDetail"];
			adrLicense?: components["schemas"]["AdrLicenseDetail"];
			dryIceDetail?: components["schemas"]["ShipmentDryIceDetail"];
		};
		/** @description Specifies Completed Hazardous Summary Detail. */
		CompletedHazardousSummaryDetail: {
			/**
			 * Format: int32
			 * @description Specifies the total number of packages containing hazardous commodities in small exceptions.<br>Example: 10
			 * @example 10
			 */
			smallQuantityExceptionPackageCount?: number;
		};
		/** @description Specifies the details around the ADR license required for shipping. */
		AdrLicenseDetail: {
			licenseOrPermitDetail?: components["schemas"]["LicenseOrPermitDetail"];
		};
		/** @description This contains the ADR license information, which identifies the license number, the effective date and the expiration date under which the customer is allowed to ship. */
		LicenseOrPermitDetail: {
			/**
			 * @description Specifies license or permit detail number.<br>Example: 12345
			 * @example 12345
			 */
			number?: string;
			/**
			 * @description Specifies the effective date of the license.<br>The format is [YYYY-MM-DD].<br>Example: 2019-08-09
			 * @example 2019-08-09
			 */
			effectiveDate?: string;
			/**
			 * @description Specifies the expiration date of the license.<br>The format is [YYYY-MM-DD].<br>Example: 2019-04-09
			 * @example 2019-04-09
			 */
			expirationDate?: string;
		};
		/** @description Specifies the shipment level totals of dry ice data across all packages. */
		ShipmentDryIceDetail: {
			/** @description Specify total dry ice weight for the shipment. */
			totalWeight: components["schemas"]["Weight"];
			/**
			 * Format: int32
			 * @description Specifies the package Count for the shipment<br>Example: 10
			 * @example 10
			 */
			packageCount: number;
			processingOptions?: components["schemas"]["ShipmentDryIceProcessingOptionsRequested"];
		};
		/** @description Specify that dry ice information is only applicable at the shipment level. Package level dry ice information would not apply. */
		ShipmentDryIceProcessingOptionsRequested: {
			/**
			 * @description Specifies the options.<br>Example: ["options"]
			 * @example [
			 *       "options"
			 *     ]
			 */
			options?: string[];
		};
		/** @description All shipment-level rating data for this shipment, which may include data for multiple rate types. */
		ShipmentRating: {
			/**
			 * @description This rate type identifies which entry in the following array is considered as presenting the "actual" rates for the shipment.<br>Example: PAYOR_LIST_SHIPMENT
			 * @example PAYOR_LIST_SHIPMENT
			 */
			actualRateType?: string;
			/** @description Each element of this field provides shipment-level rate totals for a specific rate type. */
			shipmentRateDetails?: components["schemas"]["ShipmentRateDetail"][];
		};
		/** @description This is a placeholder for shipment total/summary rates details, as calculated per a specific rate type. The totals may differ from the sum of corresponding package data for Multiweight or Express MPS. */
		ShipmentRateDetail: {
			/**
			 * @description Indicates the rate zone used (based on origin and destination).<br>Example: US001O
			 * @example US001O
			 */
			rateZone?: string;
			/**
			 * @description Indicates which weight was used.<br>Example: ACTUAL
			 * @example ACTUAL
			 */
			ratedWeightMethod?: string;
			/**
			 * Format: double
			 * @description The total of the total duties & taxes and the total ancillary fees & taxes.<br>Example: 24.56
			 * @example 24.56
			 */
			totalDutiesTaxesAndFees?: number;
			/**
			 * @description Specifies pricing Code.<br>Example: PACKAGE
			 * @example LTL_FREIGHT
			 */
			pricingCode?: string;
			/**
			 * Format: double
			 * @description The total discounts used in the rate calculation.<br>Example: 1.56
			 * @example 1.56
			 */
			totalFreightDiscounts?: number;
			/**
			 * Format: double
			 * @description Total of the transportation-based taxes.<br>Example: 3.45
			 * @example 3.45
			 */
			totalTaxes?: number;
			/**
			 * Format: double
			 * @description Total of all values under this shipment's duties and taxes; only provided if estimated duties and taxes were calculated for this shipment.<br>Example: 6.78
			 * @example 6.78
			 */
			totalDutiesAndTaxes?: number;
			/**
			 * Format: double
			 * @description Identifies the total amount of the shipment-level fees and taxes that are not based on transportation charges or commodity-level estimated duties and taxes.<br>Example: 5.67
			 * @example 5.67
			 */
			totalAncillaryFeesAndTaxes?: number;
			/** @description All transportation-based taxes applicable to this shipment. */
			taxes?: components["schemas"]["Tax"][];
			/**
			 * Format: double
			 * @description The total sum of all rebates applied to this shipment.<br>Example: 1.98
			 * @example 1.98
			 */
			totalRebates?: number;
			/**
			 * Format: double
			 * @description Specifies a fuel surcharge percentage.<br>Example: 4.56
			 * @example 4.56
			 */
			fuelSurchargePercent?: number;
			currencyExchangeRate?: components["schemas"]["CurrencyExchangeRate"];
			/**
			 * Format: double
			 * @description The freight charge minus discounts.<br>Example: 9.56
			 * @example 9.56
			 */
			totalNetFreight?: number;
			/**
			 * Format: double
			 * @description This is the sum of shipment's total net freight, total surchages (not including totalTaxes).<br>Example: 88.56
			 * @example 88.56
			 */
			totalNetFedExCharge?: number;
			/** @description This is data for a single leg of a shipment's total/summary rates, as calculated per a specific rate type. */
			shipmentLegRateDetails?: components["schemas"]["ShipmentLegRateDetail"][];
			/**
			 * Format: int32
			 * @description The value used to calculate the weight based on the dimensions.<br>Example: 0
			 * @example 0
			 */
			dimDivisor?: number;
			/**
			 * @description The Type used for this specific set of rate data.<br>Example: RATED_ACCOUNT_SHIPMENT
			 * @example RATED_ACCOUNT_SHIPMENT
			 */
			rateType?: string;
			/** @description All surcharges that apply to this shipment.<br><a onclick='loadDocReference("surcharges")'>click here to see Surcharges</a> */
			surcharges?: components["schemas"]["Surcharge"][];
			/**
			 * Format: double
			 * @description The total amount of all surcharges applied to this shipment.<br>Example: 9.88
			 * @example 9.88
			 */
			totalSurcharges?: number;
			/** @description The weight used to calculate these rates. */
			totalBillingWeight?: components["schemas"]["Weight"];
			/** @description Indicates the freight discounts. */
			freightDiscounts?: components["schemas"]["RateDiscount"][];
			/**
			 * @description Indicates the rate scale used.<br>Example: 00000
			 * @example 00000
			 */
			rateScale?: string;
			/**
			 * Format: double
			 * @description The net charge after applying all discounts and surcharges.<br>Example: 3.78
			 * @example 3.78
			 */
			totalNetCharge?: number;
			/**
			 * Format: double
			 * @description The total Shipment charge that was calculated before surcharges, discounts and taxes.<br>Example: 234.56
			 * @example 234.56
			 */
			totalBaseCharge?: number;
			/**
			 * Format: double
			 * @description This is the sum of shipment's total net charges and total duties and taxes; only provided if estimated duties and taxes were calculated for this shipment AND duties, taxes and transportation charges are all paid by the same sender account.<br>Example: 222.56
			 * @example 222.56
			 */
			totalNetChargeWithDutiesAndTaxes?: number;
			/**
			 * @description Indicates the currency code.<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency Codes</a>
			 * @example USD
			 */
			currency?: string;
		};
		/** @description Specifies the tax for the shipment. */
		Tax: {
			/**
			 * Format: double
			 * @description Indicates the amount of tax.<br>Example: 10.0
			 * @example 10
			 */
			amount?: number;
			/**
			 * @description Indicates the level of tax.
			 * @example level
			 */
			level?: string;
			/**
			 * @description Specifies the tax description.
			 * @example description
			 */
			description?: string;
			/**
			 * @description Specifies the type of the tax.
			 * @example type
			 */
			type?: string;
		};
		/** @description Specifies the currency exchange performed on financial amounts on this rate. */
		CurrencyExchangeRate: {
			/**
			 * Format: double
			 * @description Multiplier used to convert from Currency units to into Currency units.<br>Example: 25.6
			 * @example 25.6
			 */
			rate?: number;
			/**
			 * @description The currency code for the original (converted FROM) currency.<br>Example: Rupee<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a>
			 * @example Rupee
			 */
			fromCurrency?: string;
			/**
			 * @description The currency code for the final(converted INTO) currency.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see currencycodes</a>
			 * @example USD
			 */
			intoCurrency?: string;
		};
		/** @description This is a placeholder for single leg of a shipment rates details, as calculated per a specific rate type. */
		ShipmentLegRateDetail: {
			/**
			 * @description Indicates the rate zone used (based on origin and destination).<br>Example: rateZone
			 * @example rateZone
			 */
			rateZone?: string;
			/**
			 * @description Specifies the Pricing Code.<br>Example: pricingCode
			 * @example pricingCode
			 */
			pricingCode?: string;
			/** @description Specifies the taxes. */
			taxes?: components["schemas"]["Tax"][];
			/** @description Sum of dimensional weights for all packages. */
			totalDimWeight?: components["schemas"]["Weight"];
			/**
			 * Format: double
			 * @description Specifies the total rebate.<br>Example: 2.0
			 * @example 2
			 */
			totalRebates?: number;
			/**
			 * Format: double
			 * @description Specifies a fuel surcharge percentage.<br>Example: 6.0
			 * @example 6
			 */
			fuelSurchargePercent?: number;
			/** @description Specifies currency exchange rate. */
			currencyExchangeRate?: components["schemas"]["CurrencyExchangeRate"];
			/**
			 * Format: int32
			 * @description The value used to calculate the weight based on the dimensions.<br>Example: 6
			 * @example 6
			 */
			dimDivisor?: number;
			/**
			 * @description Type used for this specific set of rate data.<br>Example: PAYOR_RETAIL_PACKAGE
			 * @example PAYOR_RETAIL_PACKAGE
			 */
			rateType?: string;
			/**
			 * @description Specifies the location id the destination of shipment leg.<br>Example: HKAA
			 * @example legDestinationLocationId
			 */
			legDestinationLocationId?: string;
			/**
			 * @description Identifies the type of dim divisor that was applied.<br>Example: dimDivisorType
			 * @example dimDivisorType
			 */
			dimDivisorType?: string;
			/**
			 * Format: double
			 * @description The total freight charge that was calculated before surcharges, discounts and taxes.<br>Example: 6.0
			 * @example 6
			 */
			totalBaseCharge?: number;
			/**
			 * @description Indicates which weight was used.<br>Example: ratedWeightMethod
			 * @example ratedWeightMethod
			 */
			ratedWeightMethod?: string;
			/**
			 * Format: double
			 * @description The sum of all discounts.<br>Example: 9.0
			 * @example 9
			 */
			totalFreightDiscounts?: number;
			/**
			 * Format: double
			 * @description Total of the transportation-based taxes.<br>Example: 12.6
			 * @example 12.6
			 */
			totalTaxes?: number;
			/**
			 * @description Specifies minimum charge type.
			 * @example minimumChargeType
			 */
			minimumChargeType?: string;
			/**
			 * Format: double
			 * @description Total of shipments duties and taxes; only provided if estimated duties and taxes were calculated for this shipment.<br>Example: 17.78
			 * @example 17.78
			 */
			totalDutiesAndTaxes?: number;
			/**
			 * Format: double
			 * @description The freight charge minus discounts.<br>Example: 6.0
			 * @example 6
			 */
			totalNetFreight?: number;
			/**
			 * Format: double
			 * @description This is the sum of shipment's total surcharges (not including total taxes).<br>Example: 3.2
			 * @example 3.2
			 */
			totalNetFedExCharge?: number;
			/** @description All surcharges that apply to this shipment.<br><a onclick='loadDocReference("surcharges")'>click here to see surcharges</a> */
			surcharges?: components["schemas"]["Surcharge"][];
			/**
			 * Format: double
			 * @description The total of all surcharges.<br>Example: 5.0
			 * @example 5
			 */
			totalSurcharges?: number;
			/** @description The weight used to calculate these rates. */
			totalBillingWeight?: components["schemas"]["Weight"];
			freightDiscounts?: components["schemas"]["RateDiscount"][];
			/**
			 * @description Indicates the rate scale used.<br>Example: 6702
			 * @example 6702
			 */
			rateScale?: string;
			/**
			 * Format: double
			 * @description The net charge after applying all discounts and surcharges.<br>Example: 253
			 * @example 253
			 */
			totalNetCharge?: number;
			/**
			 * Format: double
			 * @description Sum of total net charge, total duties and taxes; only provided if estimated duties and taxes were calculated for this shipment and duties, taxes and transportation charges are all paid by the same sender account.<br>Example: 25.67
			 * @example 25.67
			 */
			totalNetChargeWithDutiesAndTaxes?: number;
			/**
			 * @description This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a>
			 * @example USD
			 */
			currency?: string;
		};
		/** @description Specifies discount Rate for Shipment. */
		RateDiscount: {
			/**
			 * Format: double
			 * @description Specifies the amount.<br>Example: 8.9
			 * @example 8.9
			 */
			amount?: number;
			/**
			 * @description The type of rate discount. <br/> Valid Values are BONUS, COUPON,EARNED,OTHER,VOLUME.<br>Example: COUPON
			 * @example COUPON
			 */
			rateDiscountType?: string;
			/**
			 * Format: double
			 * @description Specifies the percentage of Rate discount.<br>Example: 28.9
			 * @example 28.9
			 */
			percent?: number;
			/**
			 * @description Specifies the description of the discounted rate.<br>Example: description
			 * @example description
			 */
			description?: string;
		};
		/** @description Indicates the document requirements detail. */
		DocumentRequirementsDetail: {
			/**
			 * @description Indicates the required documents information.<br>Example: ["COMMERCIAL_OR_PRO_FORMA_INVOICE","AIR_WAYBILL"]
			 * @example [
			 *       "COMMERCIAL_OR_PRO_FORMA_INVOICE",
			 *       "AIR_WAYBILL"
			 *     ]
			 */
			requiredDocuments?: string[];
			/**
			 * @description Indicates the prohibited Documents info.<br>Example: ["CERTIFICATE_OF_ORIGIN "]
			 * @example [
			 *       "CERTIFICATE_OF_ORIGIN"
			 *     ]
			 */
			prohibitedDocuments?: string[];
			/** @description Specifies the generation details. */
			generationDetails?: components["schemas"]["DocumentGenerationDetail"][];
		};
		/**
		 * @description Indicates the document generation detail information.
		 * @example {
		 *       "type": "COMMERCIAL_INVOICE",
		 *       "minimumCopiesRequired": 3,
		 *       "letterhead": "OPTIONAL",
		 *       "electronicSignature": "OPTIONAL"
		 *     }
		 */
		DocumentGenerationDetail: {
			/** @description Indicates the letterhead requirement type.<br>Example: OPTIONAL */
			letterhead?: string;
			/** @description Indicates electronic signature requirement type.<br>Example:  OPTIONAL */
			electronicSignature?: string;
			/**
			 * Format: int32
			 * @description It is a non-Negative Integer.<br>Example: 3
			 */
			minimumCopiesRequired?: number;
			/** @description It is an Enterprise Document Type.<br>Example: COMMERCIAL_INVOICE */
			type?: string;
		};
		/** @description This information describes how and when a online email return label shipment may be accessed for completion. */
		PendingShipmentAccessDetail: {
			/** @description Indicates the details about the users who can access the shipment. */
			accessorDetails?: components["schemas"]["PendingShipmentAccessorDetail"][];
		};
		/** @description Specifies details for how to access the pending email return label. */
		PendingShipmentAccessorDetail: {
			/**
			 * @description Specifies the accessor password.<br>Example: password
			 * @example password
			 */
			password?: string;
			/**
			 * @description Specifies the accessor role.<br>Example: role
			 * @example role
			 */
			role?: string;
			/**
			 * @description Specifies the URL for the email label.<br>Example: emailLabelUrl
			 * @example emailLabelUrl
			 */
			emailLabelUrl?: string;
			/**
			 * @description Specifies the accessor User ID.<br>Example: userId
			 * @example userId
			 */
			userId?: string;
		};
		/** @description These are shipment advisory details. */
		ShipmentAdvisoryDetails: {
			regulatoryAdvisory?: components["schemas"]["RegulatoryAdvisoryDetail"];
		};
		/** @description Indicates the regulatory advisory details. */
		RegulatoryAdvisoryDetail: {
			/** @description It is a regulatory probitions. */
			prohibitions?: components["schemas"]["RegulatoryProhibition"][];
		};
		SuggestedCommodityDetail: {
			/**
			 * @description This is a suggested commodity description.<br>Example: Commodity
			 * @example description
			 */
			description?: string;
			/**
			 * @description Specify the harmonized code.<br>Example: XXX12
			 * @example harmonized Code
			 */
			harmonizedCode?: string;
		};
		RegulatoryProhibition: {
			/**
			 * @description Indicates the derived harmonized code value<br>Example: 01
			 * @example 01
			 */
			derivedHarmonizedCode?: string;
			advisory?: components["schemas"]["Message"];
			/**
			 * Format: int32
			 * @description Indicates one based index identifying the associated commodity.<br>Example: 12
			 * @example 12
			 */
			commodityIndex?: number;
			/**
			 * @description Indicates the prohibition source type.<br>Example: source
			 * @example source
			 */
			source?: string;
			/**
			 * @description Indicate the shipment rule type.<br>Example: ["categories"]
			 * @example [
			 *       "categories"
			 *     ]
			 */
			categories?: string[];
			/**
			 * @description Indicates the prohibition type.<br>Example: type
			 * @example type
			 */
			type?: string;
			waiver?: components["schemas"]["RegulatoryWaiver"];
			/**
			 * @description Indicates the prohibitory status.<br>Example: status
			 * @example status
			 */
			status?: string;
		};
		/** @description Specifies the advisory details. */
		Message: {
			/**
			 * @description Specifies the message code for the tag created.<br>Example: code
			 * @example code
			 */
			code?: string;
			/**
			 * @description Specifies the text message for the tag created.<br>Example: Text
			 * @example Text
			 */
			text?: string;
			/** @description Specifies the message parameters list. */
			parameters?: components["schemas"]["MessageParameter"][];
			/**
			 * @description Specifies the message ID and value.<br>Example: localizedText
			 * @example localizedText
			 */
			localizedText?: string;
		};
		MessageParameter: {
			/**
			 * @description Specifies the message parameter code.<br>Example: message ID
			 * @example message ID
			 */
			id?: string;
			/**
			 * @description Specifies the message parameter value of the code.<br>Example: value
			 * @example Message value
			 */
			value?: string;
		};
		/** @description Indicates the regulatory waiver. */
		RegulatoryWaiver: {
			/** @description Indicates the advisories list. */
			advisories?: components["schemas"]["Message"][];
			/**
			 * @description Indicates the regulatory prohibitions description.<br>Example: description
			 * @example description
			 */
			description?: string;
			/**
			 * @description Indicates the prohibitory ID.<br>Example: id
			 * @example id
			 */
			id?: string;
		};
		ErrorResponseVO: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			errors?: components["schemas"]["CXSError"][];
		};
		/** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
		CXSError: {
			/** @description Indicates the error code.<br>Example: SHIPMENT.USER.UNAUTHORIZED */
			code?: string;
			parameterList?: components["schemas"]["Parameter"][];
			/** @description Indicates the description of API error alert message.<br>Example: Requested user is not authorized to perform the operation. */
			message?: string;
		};
		/** @description List of parameters which indicates the properties of the alert message. */
		Parameter: {
			/** @description Identifies the error option to be applied. */
			value?: string;
			/** @description Indicates the value associated with the key. */
			key?: string;
		};
		ErrorResponseVO401: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError401"][];
		};
		/** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
		CXSError401: {
			/** @description Indicates the error code.<br>Example: NOT.AUTHORIZED.ERROR */
			code?: string;
			/** @description Specifies list of parameters. */
			parameterList?: components["schemas"]["Parameter"][];
			/** @description Indicates the description of API error alert message.<br>Example: Access token expired. Please modify your request and try again. */
			message?: unknown;
		};
		ErrorResponseVO403: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError403"][];
		};
		/** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
		CXSError403: {
			/** @description Indicates the error code.<br>Example: FORBIDDEN.ERROR */
			code?: string;
			/** @description Specifies list of parameters. */
			parameterList?: components["schemas"]["Parameter"][];
			/** @description Indicates the description of API error alert message.<br>Example: We could not authorize your credentials. Please check your permissions and try again */
			message?: unknown;
		};
		ErrorResponseVO404: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError404"][];
		};
		/** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
		CXSError404: {
			/** @description Indicates the error code.<br>Example: NOT.FOUND.ERROR */
			code?: string;
			/** @description Specifies list of parameters. */
			parameterList?: components["schemas"]["Parameter"][];
			/** @description Indicates the description of API error alert message.<br>Example: The resource you requested is no longer available. Please modify your request and try again. */
			message?: unknown;
		};
		ErrorResponseVO500: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			errors?: components["schemas"]["CXSError500"][];
		};
		/** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
		CXSError500: {
			/** @description Indicates the error code.<br>Example: INTERNAL.SERVER.ERROR */
			code?: string;
			/** @description Specifies list of parameters. */
			parameterList?: components["schemas"]["Parameter"][];
			/** @description Indicates the description of API error alert message.<br>Example: We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time. */
			message?: unknown;
		};
		ErrorResponseVO503: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError503"][];
		};
		/** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
		CXSError503: {
			/** @description Indicates the error code.<br>Example: SERVICE.UNAVAILABLE.ERROR */
			code?: string;
			/** @description Specifies list of parameters. */
			parameterList?: components["schemas"]["Parameter"][];
			/** @description Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time. */
			message?: unknown;
		};
		/** @description The request elements required to cancel a shipment.  */
		Full_Schema_Cancel_Shipment: {
			/** @description The account number (account value) associated with the shipment. */
			accountNumber: components["schemas"]["ShipperAccountNumber"];
			/**
			 * @description A boolean flag passed by Clients to indicate that whether a shipment is a EMAIL shipment(Pending Shipment) or not. Once a shipment is confirmed, it can no longer be cancelled by having this flag as True.
			 * @example false
			 */
			emailShipment?: boolean;
			/**
			 * @description The two-letter sender Country code(Ex: US, CA, GB..etc).<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>Click here to see Country Codes</a>
			 * @example US
			 */
			senderCountryCode?: string;
			/**
			 * @description Specifies which packages in a shipment to be canceled<b>DELETE_ALL_PACKAGES</b> which will cancel all tracking numbers associated to the shipment.
			 * @example DELETE_ALL_PACKAGES
			 * @enum {string}
			 */
			deletionControl?: "DELETE_ALL_PACKAGES";
			/**
			 * @description This is an unique number assigned by FedEx to the packages for tracking.<br>Example: "794953555571"
			 * @example 794953555571
			 */
			trackingNumber: string;
		};
		/** @description This is a wrapper class for outputVO */
		SHPCResponseVO_CancelShipment: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			output?: components["schemas"]["BaseProcessOutputVO_CancelShipment"];
		};
		BaseProcessOutputVO_CancelShipment: components["schemas"]["CancelShipmentOutputVO"];
		/** @description The response elements received when a shipment is cancelled. */
		CancelShipmentOutputVO: {
			/**
			 * @description Indicates whether the shipment has been cancelled or not. If the value is True, then it indicates that the shipment has been cancelled.<br>Example: true
			 * @example true
			 */
			cancelledShipment?: boolean;
			/**
			 * @description Indicates whether the shipment has been deleted from history or not. If the value is True, then it indicates that the shipment has been deleted.<br>Example: true
			 * @example true
			 */
			cancelledHistory?: boolean;
			/**
			 * @description The success message generated during cancellation request for Shipment.<br>Example: Success
			 * @example Success
			 */
			successMessage?: string;
			/** @description This is a cancellation request alert. This alert includes information such as alert code, alert type, and alert message. */
			alerts?: components["schemas"]["Alert"][];
		};
		ErrorResponseVO_2: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			errors?: components["schemas"]["CXSError_2"][];
		};
		/** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
		CXSError_2: {
			/** @description Indicates the error code.<br>Example: SHIPMENT.USER.UNAUTHORIZED */
			code?: string;
			parameterList?: components["schemas"]["Parameter"][];
			/** @description Indicates the description of API error alert message.<br>Example: Requested user is not authorized to perform the operation. */
			message?: string;
		};
		ErrorResponseVO401_2: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError401"][];
		};
		ErrorResponseVO403_2: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError403"][];
		};
		ErrorResponseVO404_2: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError404"][];
		};
		ErrorResponseVO500_2: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			errors?: components["schemas"]["CXSError500"][];
		};
		ErrorResponseVO503_2: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			errors?: components["schemas"]["CXSError503"][];
		};
		"FullSchema-getConfirmedShipmentAsyncResults": {
			accountNumber: components["schemas"]["AccountNumber"];
			/**
			 * @description Indicates the job under which the deferred shipment artifacts must be identified in the subsequent retrieval request. <br> Example: 89sxxxxx233ae24ff31xxxxx
			 * @example 89sxxxxx233ae24ff31xxxxx
			 */
			jobId: string;
		};
		AccountNumber: components["schemas"]["PartyAccountNumber"];
		/** @description Wrapper class for GetOpenshipmentResultsOutputVo. It holds transactionId and output. */
		SHPCResponseVO_GetOpenShipmentResults: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624xxxxx-b709-470c-8c39-4b55112xxxxx
			 * @example 624xxxxx-b709-470c-8c39-4b55112xxxxx
			 */
			transactionId?: string;
			/**
			 * @description This is a unique identifier to your transaction and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			output?: unknown &
				components["schemas"]["BaseProcessOutputVO_GetOpenShipmentResults"];
		};
		BaseProcessOutputVO_GetOpenShipmentResults: components["schemas"]["GetOpenShipmentResultsOutputVO"];
		GetOpenShipmentResultsOutputVO: {
			/** @description These are shipping transaction details, such as master tracking number, service type, and ship date and time. */
			transactionShipments?: components["schemas"]["TransactionShipmentOutputVO"][];
			/** @description object indicate the alert details received in the output. */
			alerts?: components["schemas"]["Alert"][];
		};
		/** @description The request elements required to create a shipment. */
		"FullSchema-VerifyShipment": {
			requestedShipment: components["schemas"]["RequestedShipmentVerify"];
			accountNumber?: components["schemas"]["ShipperAccountNumber"];
		};
		/** @description This is the detailed shipment request data to be validated before being submitted to FedEx. */
		RequestedShipmentVerify: {
			/**
			 * @description Indicate the shipment date.<br>Format: YYYY-MM-DD<br>Note: Default value is current date in case the date is not provided in the request.<br>Example: 2021-04-06
			 * @example 2019-10-14
			 */
			shipDatestamp?: string;
			/**
			 * @description Select if the shipment is to be dropped off at Fedex location or to be picked up by FedEx or if it is a scheduled pickup for this shipment.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
			 * @example USE_SCHEDULED_PICKUP
			 * @enum {string}
			 */
			pickupType:
				| "CONTACT_FEDEX TO_SCHEDULE"
				| "DROPOFF_AT_FEDEX_LOCATION"
				| "USE_SCHEDULED_PICKUP";
			/**
			 * @description Indicate the FedEx service Type used for this shipment.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see available FedEx Service Types</a>
			 * @example PRIORITY_OVERNIGHT
			 */
			serviceType: string;
			/**
			 * @description Indicate the type of packaging used for the package.<br>Note: For Express Freight shipments, the packaging will default to value  YOUR_PACKAGING irrespective type provided in the request.<br>Example: FEDEX_ENVELOPE<br><a onclick='loadDocReference("packagetypes")'>click here to see Package Types</a>
			 * @example YOUR_PACKAGING
			 */
			packagingType: string;
			/**
			 * Format: int32
			 * @description shipment total weight should be in Kg or in Lbs
			 * @example 20
			 */
			totalWeight?: number;
			/**
			 * @description Indicate shippers details. <br>Note: Shipper address and Origin address should be the same address.
			 * @example {
			 *       "address": {
			 *         "streetLines": [
			 *           "10 FedEx Parkway",
			 *           "Suite 302"
			 *         ],
			 *         "city": "Beverly Hills",
			 *         "stateOrProvinceCode": "CA",
			 *         "postalCode": "90210",
			 *         "countryCode": "US",
			 *         "residential": false
			 *       },
			 *       "contact": {
			 *         "personName": "John Taylor",
			 *         "emailAddress": "sample@company.com",
			 *         "phoneExtension": "91",
			 *         "phoneNumber": "1234567890",
			 *         "companyName": "Fedex"
			 *       },
			 *       "tins": [
			 *         {
			 *           "number": "123567",
			 *           "tinType": "FEDERAL",
			 *           "usage": "usage",
			 *           "effectiveDate": "2000-01-23T04:56:07.000+00:00",
			 *           "expirationDate": "2000-01-23T04:56:07.000+00:00"
			 *         }
			 *       ]
			 *     }
			 */
			shipper: components["schemas"]["ShipperParty"];
			/** @description Indicate the shipment recipient details or the physical location details for the package destination. */
			recipients: components["schemas"]["RecipientsParty"][];
			/** @description Indicate the shipment origin address information, if it is different from the shippers address. */
			origin?: components["schemas"]["ContactAndAddress_Verify"];
			shippingChargesPayment: components["schemas"]["Payment"];
			shipmentSpecialServices?: components["schemas"]["RequestedShipmentVerify_shipmentSpecialServices"];
			emailNotificationDetail?: components["schemas"]["EMailNotificationDetail"];
			variableHandlingChargeDetail?: components["schemas"]["VariableHandlingChargeDetail"];
			customsClearanceDetail?: components["schemas"]["CustomsClearanceDetail"];
			smartPostInfoDetail?: components["schemas"]["SmartPostInfoDetail"];
			/**
			 * @description Indicate if the shipment be available to be visible/tracked using FedEx InSight® tool. If value indicated as true, only the shipper/payer will have visibility of this shipment in the said tool.
			 * @example true
			 */
			blockInsightVisibility?: boolean;
			labelSpecification: components["schemas"]["LabelSpecification"];
			shippingDocumentSpecification?: components["schemas"]["ShippingDocumentSpecification"];
			/**
			 * @description Indicate the type of rates to be returned.<br>Following are values:<ul><li>LIST - Returns published list rates will be returned in addition to account-specific rate (if applicable).</li><li>PREFERRED - It returns rates in currency as specified in the PreferredCurrency element.</li><li>ACCOUNT - Returns account specific rates. Note: The account specific rates are returned by default if the shipper account number is specified in the shipment.</li><li>INCENTIVE - This is one-time discount for incentivizing the customer.</li></ul>Examples: ["ACCOUNT", "PREFERRED"]
			 * @example [
			 *       "LIST",
			 *       "PREFERRED"
			 *     ]
			 */
			rateRequestType?: (
				| "LIST"
				| "NONE"
				| "PREFERRED"
				| "ACCOUNT"
				| "INCENTIVE"
				| "RETAIL"
			)[];
			/**
			 * @description Indicate the currency the caller requests to have used in all returned monetary values. Should be Used in conjunction with the element RateRequestType.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see available Currency codes</a><br>Note: Incorrect currency codes should not be supplied. The system ignores the incorrect currency code.
			 * @example USD
			 */
			preferredCurrency?: string;
			/** @description Use this object to provide the package details.<br>Note: <ul><li>At least one instance containing the weight is required for EXPRESS and GROUND package.</li><li>Only Single piece requests are supported henceonly one line item should be provided.</li><li>Multiple piece shipment validation is not supported.</li></ul> */
			requestedPackageLineItems: components["schemas"]["RequestedPackageLineItem"][];
		};
		/**
		 * @description Specifies the contact and address details of a location.
		 * @example {
		 *       "address": {
		 *         "streetLines": [
		 *           "10 FedEx Parkway",
		 *           "Suite 302"
		 *         ],
		 *         "city": "Beverly Hills",
		 *         "stateOrProvinceCode": "CA",
		 *         "postalCode": "38127",
		 *         "countryCode": "US",
		 *         "residential": false
		 *       },
		 *       "contact": {
		 *         "personName": "person name",
		 *         "emailAddress": "email address",
		 *         "phoneNumber": "phone number",
		 *         "phoneExtension": "phone extension",
		 *         "companyName": "company name",
		 *         "faxNumber": "fax number"
		 *       }
		 *     }
		 */
		ContactAndAddress_Verify: {
			contact?: components["schemas"]["Contact_verify"];
			address?: components["schemas"]["Address_1"];
		};
		/**
		 * @description Indicate the contact details of the shipper.
		 * @example {
		 *       "personName": "John Taylor",
		 *       "emailAddress": "sample@company.com",
		 *       "phoneNumber": "1234567890",
		 *       "phoneExtension": 1234,
		 *       "faxNumber": "1234567890",
		 *       "companyName": "Fedex"
		 *     }
		 */
		Contact_verify: {
			/**
			 * @description Specify contact person name.<br>Recommended length is 70.<br>Note: There's no specific validation for the person name.<br> Example: John Taylor
			 * @example John Taylor
			 */
			personName?: string;
			/**
			 * @description Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
			 * @example sample@company.com
			 */
			emailAddress?: string;
			/**
			 * @description Specify contact phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890
			 * @example 1234567890
			 */
			phoneNumber?: string;
			/**
			 * @description Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234
			 * @example 91
			 */
			phoneExtension?: string;
			/**
			 * @description Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890
			 * @example 956123
			 */
			faxNumber?: string;
			/**
			 * @description Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.
			 * @example Fedex
			 */
			companyName?: string;
		};
		/** @description These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy. */
		EMailNotificationDetail: {
			/**
			 * @description Indicate the shipment notification aggregation type.
			 * @example PER_PACKAGE
			 * @enum {string}
			 */
			aggregationType?: "PER_PACKAGE" | "PER_SHIPMENT";
			/** @description These are email notification recipient details. */
			emailNotificationRecipients?: components["schemas"]["EmailNotificationRecipient"][];
			/**
			 * @description This is your personal message for the email.<br>Note: The maximum personal message character limit depends on the element emailNotificationDetail\emailNotificationRecipients\notificationFormatType values:<ul><li>If notificationFormatType is TEXT, then only 120 characters printed on the email</li><li>If notificationFormatType is HTML, then 500 characters printed on the email</li></ul><br>Example: This is concerning the order 123456 of 26 July 2021 - art no 34324-23 Teddy Bear, brown
			 * @example your personal message here
			 */
			personalMessage?: string;
		};
		/** @description These are recipient details for receiving email notification. */
		EmailNotificationRecipient: {
			/**
			 * @description Specify the recipient name.<br>Example: Joe Smith
			 * @example Joe Smith
			 */
			name?: string;
			/**
			 * @description Specify the recipient type for email notification.
			 * @example SHIPPER
			 * @enum {string}
			 */
			emailNotificationRecipientType:
				| "BROKER"
				| "OTHER"
				| "RECIPIENT"
				| "SHIPPER"
				| "THIRD_PARTY";
			/**
			 * @description Specify the recipient email address.<br>Example: xyz@aol.com
			 * @example jsmith3@aol.com
			 */
			emailAddress?: string;
			/**
			 * @description This is the format for the email notification. Either HTML or plain text can be provided.
			 * @example TEXT
			 * @enum {string}
			 */
			notificationFormatType?: "HTML" | "TEXT";
			/**
			 * @description Indicate the type of notification that will be sent as an email.
			 * @example EMAIL
			 * @enum {string}
			 */
			notificationType?: "EMAIL";
			/**
			 * @description These are the locale details for email.<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
			 * @example en_US
			 */
			locale?: string;
			/**
			 * @description Specify notification event types.<br><a onclick='loadDocReference("notificationeventtypes")'>Click here for more information on Notification Event Types.</a>
			 * @example [
			 *       "ON_PICKUP_DRIVER_ARRIVED",
			 *       "ON_SHIPMENT"
			 *     ]
			 */
			notificationEventType?: (
				| "ON_DELIVERY"
				| "ON_EXCEPTION"
				| "ON_SHIPMENT"
				| "ON_TENDER"
				| "ON_ESTIMATED_DELIVERY"
				| "ON_BILL_OF_LADING"
				| "ON_PICKUP_DRIVER_ARRIVED"
				| "ON_PICKUP_DRIVER_ASSIGNED"
				| "ON_PICKUP_DRIVER_DEPARTED"
				| "ON_PICKUP_DRIVER_EN_ROUTE"
			)[];
		};
		/** @description Wrapper class for VerifyShipmentOutputVO. It holds transactionId and output. */
		SHPCResponseVO_Validate: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			output?: components["schemas"]["BaseProcessOutputVO_Validate"];
		};
		BaseProcessOutputVO_Validate: components["schemas"]["VerifyShipmentOutputVO"];
		/** @description The response elements received when a shipment is created. */
		VerifyShipmentOutputVO: {
			/** @description The alerts received when a Shipment Package Validate is processed. This includes the alert code, alert type, and alert message. */
			alerts?: components["schemas"]["Alert"][];
		};
		/** @description Indicate the shipment special service or handling required for this shipment. <br>Note: <ul><li>If the shipper is requesting a special service, the special service type must be indicated in the object specialServiceTypes, and all supporting detail must be provided in the appropriate sub-object below.</li><li>For returns it is required to provide value RETURN_SHIPMENT in the specialServiceTypes.</li></ul> */
		RequestedShipmentVerify_shipmentSpecialServices: {
			/**
			 * @description Indicate the Special services requested for this shipment.<br>Example: <ul><li>HOLD_AT_LOCATION</li><li>RETURN_SHIPMENT</li><li>BROKER_SELECT_OPTION</li><li>CALL_BEFORE_DELIVERY</li><li>COD</li><li>CUSTOM_DELIVERY_WINDOW</li></ul><br><a onclick='loadDocReference("shipmentlevelspecialservicetypes")'>click here to see Shipment Special Service Types</a>
			 * @example [
			 *       "THIRD_PARTY_CONSIGNEE"
			 *     ]
			 */
			specialServiceTypes?: string[];
			etdDetail?: components["schemas"]["ETDDetail"];
			returnShipmentDetail?: components["schemas"]["ReturnShipmentDetail"];
			deliveryOnInvoiceAcceptanceDetail?: components["schemas"]["DeliveryOnInvoiceAcceptanceDetail"];
			internationalTrafficInArmsRegulationsDetail?: components["schemas"]["InternationalTrafficInArmsRegulationsDetail"];
			pendingShipmentDetail?: components["schemas"]["PendingShipmentDetail"];
			holdAtLocationDetail?: components["schemas"]["HoldAtLocationDetail"];
			shipmentCODDetail?: components["schemas"]["ShipmentCODDetail"];
			shipmentDryIceDetail?: components["schemas"]["ShipmentDryIceDetail_1"];
			internationalControlledExportDetail?: components["schemas"]["InternationalControlledExportDetail"];
			homeDeliveryPremiumDetail?: components["schemas"]["HomeDeliveryPremiumDetail"];
		};
		Full_Schema_Create_Tag: {
			/** @description The shipment data describing the shipment being tendered to FedEx. */
			requestedShipment: components["schemas"]["CreateTagRequestedShipment"];
			/** @description The specific FedEx customer account number (account value) associated with the shipment. */
			accountNumber: components["schemas"]["AccountNumber"];
		};
		CreateTagRequestedShipment: WithRequired<
			components["schemas"]["RequestedShipment"],
			| "packagingType"
			| "recipients"
			| "requestedPackageLineItems"
			| "serviceType"
			| "shipper"
			| "shippingChargesPayment"
		> & {
			/** @description Specifies the pickup details for the Tag shipment.<br>ReadyDateTime and LatestPickupDateTime are required. */
			pickupDetail: {
				/**
				 * @description Specify the time and date the package will be ready for pickup.
				 * @example 2020-07-03T09:00:00Z
				 */
				readyPickupDateTime: string;
				/**
				 * @description Specify the last possible pickup date and time.
				 * @example 2020-07-03T09:00:00Z
				 */
				latestPickupDateTime: string;
			};
		};
		/** @description Wrapper class for ShipShipmentOutputVO. It holds transactionId and output. */
		SHPCResponseVO_CreateTag: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			output?: components["schemas"]["BaseProcessOutputVO_CreateTag"];
		};
		BaseProcessOutputVO_CreateTag: components["schemas"]["CreateTagOutputVO"];
		/** @description Specifies the output details when a tag is created. */
		CreateTagOutputVO: {
			/**
			 * @description Specifies the Master Tracking Number for the requested shipment.<br>Example: 997338100007320
			 * @example 997338100007320
			 */
			masterTrackingNumber?: string;
			/**
			 * @description Specifies the service type for this shipment.<br>Example: GROUND_HOME_DELIVERY<br><a onclick='loadDocReference("servicetypes")'>Click here to see Service Types</a>
			 * @example GROUND_HOME_DELIVERY
			 */
			serviceType?: string;
			/**
			 * @description Specifies the shipment date and time. The default timestamp is the current date-time. Format is MMM-dd-yyyy.<br>Example: 2019-10-04
			 * @example 2019-10-04
			 */
			shipTimestamp?: string;
			completedTagDetail?: components["schemas"]["CompletedTagDetail"];
			/** @description Specifies the alerts received when a tag is created. This includes the alert code, alert type, and alert message. */
			alerts?: components["schemas"]["Alert"][];
		};
		/** @description Specifies the pickup confirmation and location details for the return tag shipment. */
		CompletedTagDetail: components["schemas"]["CompletedTagDetail_2"];
		CompletedTagDetail_2: {
			/**
			 * @description Confirmation Number.<br>Example: 275
			 * @example 275
			 */
			confirmationNumber: string;
			/**
			 * @description Applicable for FedEx Express services.<br>Example: NQAA
			 * @example NQAA
			 */
			location: string;
			/**
			 * @description The dispatch date for the FedEx Tag to be cancelled.<br>Example: 2019-08-03
			 * @example 2019-08-03
			 */
			dispatchDate: string;
		};
		/** @description The input details required to cancel a tag. */
		"FullSchema-CancelTag": {
			/** @description The specific FedEx customer account number (account value and account key) associated with the shipment. */
			accountNumber: components["schemas"]["ShipmentAccountNumber"];
			/**
			 * @description This is the FedEx service type associated with the shipment.<br>Example: PRIORITY_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>Click here to see Service Types</a>
			 * @example PRIORITY_OVERNIGHT
			 */
			serviceType: string;
			/**
			 * @description The tracking number for the Express or Ground Tag to the cancelled.<br>Example: 301025281523<br><a onclick='loadDocReference("mocktrackingnumbersforfedexexpressandfedexground")'>Click here to see mock tracking numbers for FedEx Express and FedEx Ground.</a>
			 * @example 301025281523
			 */
			trackingNumber?: string;
			/** @description The details of the package for which shipping has been completed. The details include dispatch confirmation number, dispatch date, location, and the cxs alerts associated with the process. */
			completedTagDetail: components["schemas"]["CompletedTagDetail_2"];
		};
		ShipmentAccountNumber: components["schemas"]["PartyAccountNumber_2"];
		/**
		 * @description The account number of the recipient.
		 * @example {
		 *       "value": "123456789"
		 *     }
		 */
		PartyAccountNumber_2: {
			/** @description Conditional.<br> The account number value. Max Length is 9.<br>Example: 123456789 */
			value?: string;
		};
		/** @description Wrapper class for CancelTagOuputVO. It holds transactionId and output. */
		SHPCResponseVO: {
			/**
			 * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
			 * @example 624deea6-b709-470c-8c39-4b5511281492
			 */
			transactionId?: string;
			/**
			 * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
			 * @example AnyCo_order123456789
			 */
			customerTransactionId?: string;
			output?: components["schemas"]["BaseProcessOutputVO"];
		};
		BaseProcessOutputVO: components["schemas"]["CancelTagOuputVO"];
		/** @description The output details when a tag is cancelled. */
		CancelTagOuputVO: {
			/**
			 * @description Indicates whether the tag has been cancelled or not. If true, then the tag has been successfully cancelled.<br>Example: true
			 * @example true
			 */
			cancelledTag?: boolean;
			/**
			 * @description Message received when a tag is successfully cancelled.<br>Example: success
			 * @example success
			 */
			successMessage?: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
	"Create Shipment": {
		parameters: {
			query?: never;
			header: {
				/** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
				"x-customer-transaction-id"?: string;
				/** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
				"content-type": string;
				/** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
				"x-locale"?: string;
				/** @description This indicates the authorization token for the input request. */
				authorization: string;
			};
			path?: never;
			cookie?: never;
		};
		requestBody?: {
			content: {
				"application/json": components["schemas"]["Full_Schema_Ship"];
			};
		};
		responses: {
			/** @description Success */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["SHPCResponseVO_ShipShipment"];
				};
			};
			/** @description Bad Request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO"];
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO401"];
				};
			};
			/** @description Forbidden */
			403: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO403"];
				};
			};
			/** @description Not Found */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO404"];
				};
			};
			/** @description Failure */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO500"];
				};
			};
			/** @description Service Unavailable */
			503: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO503"];
				};
			};
		};
	};
	"Cancel Shipment": {
		parameters: {
			query?: never;
			header: {
				/** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
				"x-customer-transaction-id"?: string;
				/** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
				"content-type": string;
				/** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
				"x-locale"?: string;
				/** @description This indicates the authorization token for the input request. */
				authorization: string;
			};
			path?: never;
			cookie?: never;
		};
		requestBody?: {
			content: {
				"application/json": components["schemas"]["Full_Schema_Cancel_Shipment"];
			};
		};
		responses: {
			/** @description Success */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["SHPCResponseVO_CancelShipment"];
				};
			};
			/** @description Bad Request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO_2"];
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO401_2"];
				};
			};
			/** @description Forbidden */
			403: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO403_2"];
				};
			};
			/** @description Not Found */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO404_2"];
				};
			};
			/** @description Failure */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO500_2"];
				};
			};
			/** @description Service Unavailable */
			503: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO503_2"];
				};
			};
		};
	};
	"Get Confirmed Shipment Async Results": {
		parameters: {
			query?: never;
			header: {
				/**
				 * @description This transaction Id helps the customers to track the transaction with APIF.
				 * @example 0e671149-016f-1000-941f-ef4dbabadd2e
				 */
				"x-customer-transaction-id"?: string;
				/** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
				"content-type": string;
				/** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
				"x-locale"?: string;
				/** @description This indicates the authorization token for the input request. */
				authorization: string;
			};
			path?: never;
			cookie?: never;
		};
		requestBody?: {
			content: {
				"application/json": components["schemas"]["FullSchema-getConfirmedShipmentAsyncResults"];
			};
		};
		responses: {
			/** @description Success */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["SHPCResponseVO_GetOpenShipmentResults"];
				};
			};
			/** @description Bad Request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO_2"];
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO401_2"];
				};
			};
			/** @description Forbidden */
			403: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO403_2"];
				};
			};
			/** @description Not Found */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO404_2"];
				};
			};
			/** @description Failure */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO500_2"];
				};
			};
			/** @description Service Unavailable */
			503: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO503_2"];
				};
			};
		};
	};
	ShipmentPackageValidate: {
		parameters: {
			query?: never;
			header: {
				/** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
				"x-customer-transaction-id"?: string;
				/** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
				"content-type": string;
				/** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
				"x-locale"?: string;
				/** @description This indicates the authorization token for the input request. */
				authorization: string;
			};
			path?: never;
			cookie?: never;
		};
		requestBody?: {
			content: {
				"application/json": components["schemas"]["FullSchema-VerifyShipment"];
			};
		};
		responses: {
			/** @description Success */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["SHPCResponseVO_Validate"];
				};
			};
			/** @description Bad Request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO_2"];
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO_2"];
				};
			};
			/** @description Forbidden */
			403: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO_2"];
				};
			};
			/** @description Not Found */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": unknown;
				};
			};
			/** @description Failure */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO_2"];
				};
			};
		};
	};
	"Create Tag": {
		parameters: {
			query?: never;
			header: {
				/** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
				"x-customer-transaction-id"?: string;
				/** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
				"content-type": string;
				/** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
				"x-locale"?: string;
				/** @description This indicates the authorization token for the input request. */
				authorization: string;
			};
			path?: never;
			cookie?: never;
		};
		requestBody?: {
			content: {
				"application/json": components["schemas"]["Full_Schema_Create_Tag"];
			};
		};
		responses: {
			/** @description Success */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["SHPCResponseVO_CreateTag"];
				};
			};
			/** @description Bad Request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO"];
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO401"];
				};
			};
			/** @description Forbidden */
			403: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO403"];
				};
			};
			/** @description Not Found */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO404"];
				};
			};
			/** @description Failure */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO500"];
				};
			};
			/** @description Service Unavailable */
			503: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO503"];
				};
			};
		};
	};
	CancelTag: {
		parameters: {
			query?: never;
			header: {
				/** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
				"x-customer-transaction-id"?: string;
				/** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
				"content-type": string;
				/** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
				"x-locale"?: string;
				/** @description This indicates the authorization token for the input request. */
				authorization: string;
			};
			path: {
				shipmentid: string;
			};
			cookie?: never;
		};
		requestBody?: {
			content: {
				"application/json": components["schemas"]["FullSchema-CancelTag"];
			};
		};
		responses: {
			/** @description Success */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["SHPCResponseVO"];
				};
			};
			/** @description Bad Request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO_2"];
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO401_2"];
				};
			};
			/** @description Forbidden */
			403: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO403_2"];
				};
			};
			/** @description Not Found */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO404_2"];
				};
			};
			/** @description Failure */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO500_2"];
				};
			};
			/** @description Service Unavailable */
			503: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["ErrorResponseVO503_2"];
				};
			};
		};
	};
}
type WithRequired<T, K extends keyof T> = T & {
	[P in K]-?: T[P];
};
