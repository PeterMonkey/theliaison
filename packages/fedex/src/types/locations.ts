/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/location/v1/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Find Locations
         * @description Use this endpoint to search for nearest FedEx locations by address, geographicccc coordinates, or phone numberrrr. You can also narrow your search by type of location and services offered. It returns up to 75 locations within a 50-mile radius for the address used in the search criteria. Results are based on current date and time. Supports all FedEx operating companies and countries, dependent upon being able to get a valid geolocation for a given set of criteria.<br><i>Note: You must specify landline numbers only, when searching for the nearest FedEx locations using phone number.</i><br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>
         */
        post: operations["Find Location"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Full_Schema_Find_Location: {
            /** @description Use this object to specify all the inputs to get the locations details. */
            locationsSummaryRequestControlParameters?: components["schemas"]["LocationsSummaryRequestControlParameters"];
            /** @description Specify the constraints to be applied to the location attributes. */
            constraints?: components["schemas"]["SearchLocationConstraints"];
            /**
             * @description Specify the criteria to be used to search for FedEx locations. Default value is ADDRESS if no value is passed.<p>Valid values: <ul><li>ADDRESS &ndash; Search by address. Location detail data is required.</li><li>GEOGRAPHIC_COORDINATES &ndash; Search by geocodes. Location geocodes are required.</li><li>PHONE_NUMBER &ndash; Search by phone number. Location Phone number is required.</li></ul></p><p><i>Note: Country code is REQUIRED when searching by any of the LocationsSearchCriterion, even PhoneNumber and GeorgraphicCoordinates.</i></p>
             * @example ADDRESS
             * @enum {string}
             */
            locationSearchCriterion?: "ADDRESS" | "GEOGRAPHIC_COORDINATES" | "PHONE_NUMBER";
            /** @description Based on the locationSearchCriterion value specified, the location element specifies the minimum requirement for address search like postalCode, countryCode, GeoCodes or city.Location phone number is required. Only landline number is allowed.<br><br><i>Note: Country code is REQUIRED for the search.</i> */
            location: components["schemas"]["Location"];
            /**
             * @description Specify the phone number(Only LandLine allowed) if the locationSearchCriterion is set to 'PHONE_NUMBER'.Given that is the case, the location search will be made based on the phone number value and the location object(postalCode&countryCode) will be completely ignored. <br> Example: 9015551234
             * @example 9015551234
             */
            phoneNumber?: string;
            /**
             * @description Specify the criterion to be used to return location results when there are multiple matches.<br>Valid values: RETURN_ALL,RETURN_ERROR, RETURN_FIRST.<br><br><i>Note: The 'maxResults' value takes precedence over RETURN_ALL value.</i>
             * @example RETURN_ALL
             * @enum {string}
             */
            multipleMatchesAction?: "RETURN_ALL" | "RETURN_ERROR" | "RETURN_FIRST";
            sort?: components["schemas"]["Sort"];
            trackingInfo?: components["schemas"]["TrackingInfo"];
            /**
             * @description Filter to display locations within the same state as the search criteria.<br>Valid values: True, False.
             * @example true
             */
            sameState?: boolean;
            /**
             * @description Filter to display locations within the same country as the search criteria.<br>Valid values: True, False.
             * @example true
             */
            sameCountry?: boolean;
            /**
             * @description Specify the type of service supported by a FedEx location for redirect to hold.
             * @example FEDEX_GROUND
             * @enum {string}
             */
            redirectToHoldType?: "FEDEX_EXPRESS" | "FEDEX_GROUND" | "FEDEX_GROUND_HOME_DELIVERY";
            /**
             * @description Specify attributes to filter location types. If more than one value is specified, only those locations that have all the specified attributes will be returned.<br>Note: In order to filter for DROP_BOX location, need to add locationTypes as FEDEX_SELF_SERVICE_LOCATION
             * @example [
             *       "ACCEPTS_CASH",
             *       "PACK_AND_SHIP"
             *     ]
             */
            locationAttrTypes?: ("ACCEPTS_CASH" | "FEDEX_RETURNS_TECHNOLOGY" | "ALREADY_OPEN" | "COPY_AND_PRINT_SERVICES" | "DANGEROUS_GOODS_SERVICES" | "DIRECT_MAIL_SERVICES" | "LOCATION_IS_IN_AIRPORT" | "NOTARY_SERVICES" | "OPEN_TWENTY_FOUR_HOURS" | "PACK_AND_SHIP" | "PACKAGING_SUPPLIES" | "PASSPORT_PHOTO_SERVICES" | "RETURNS_SERVICES" | "SIGNS_AND_BANNERS_SERVICE" | "SONY_PICTURE_STATION" | "DROP_BOX" | "DOMESTIC_SHIPPING_SERVICES" | "INTERNATIONAL_SHIPPING_SERVICES" | "CLEARANCE_SERVICES")[];
            /** @description Specify to filter the locations based on their capabilities. */
            locationCapabilities?: components["schemas"]["LocationCapabilities"][];
            /** @description Specify location supported package constraints to narrow the search.<br><br>For example, a package weighing more than 151 pounds may not be supported at all location types. Drop box location would be excluded.<p><i>Note: The package attributes inputs are only recognized/supported for FedEx OnSite Locations.</i></p> */
            packageAttributes?: components["schemas"]["PackageAttribute"][];
            /** @description Results filter which narrows the search to specific types of FedEx Locations.  */
            locationTypes?: ("FEDEX_AUTHORIZED_SHIP_CENTER" | "FEDEX_OFFICE" | "FEDEX_SELF_SERVICE_LOCATION" | "FEDEX_ONSITE" | "FEDEX_EXPRESS_STATION" | "FEDEX_SHIPSITE" | "FEDEX_SHIP_AND_GET")[];
            /**
             * @description Indicates true if the location holiday list is desired in the results; otherwise false <br> Valid values: True, False.
             * @example true
             */
            includeHoliday?: boolean;
            /**
             * @description Specifies the latest time by which you can drop-off a package at a location to process the shipment the same day. This limits the results to locations that support a specific drop-off time. The format is an ISO 8601 string in which only the time portion is used.<br>Example: 16:00:00
             * @example 09:30:00
             */
            dropoffTime?: string;
            /**
             * @description The drop-off service types supported by the specified location. If sort criteria is given as  LATEST_EXPRESS_DROPOFF_TIME and dropoffservicetype is GROUND then backend  will take the SORT_BY_LATEST_GROUND_TIME as sort criteria.<br>Example: FedEx Ground.
             * @example GROUND
             */
            dropOffServiceType?: string;
            /** @description Unique code to identify the transporter. */
            carrierCodes?: ("FDXE" | "FDXG")[];
            /**
             * @description Get a call. <br>Valid values: True, False.
             * @example false
             */
            getCall?: boolean;
        };
        LocationsSummaryRequestControlParameters: {
            /** @description Specify the unit of measurement and the radius around the address to search FedEx locations. */
            distance?: components["schemas"]["Distance"];
            /**
             * Format: int32
             * @description Specify the maximum number of locations to be returned in the reply.<br><i>Note: This takes precedence over the element multipleMatchesAction value RETURN_ALL.</i>
             * @example 12
             */
            maxResults?: number;
        };
        /**
         * @description Specifies value and unit of distance between the FedEx locations and the address specified.<br>Example: 2 KM
         * @example {
         *       "units": "KM",
         *       "value": 3.5
         *     }
         */
        Distance: {
            /**
             * @description Indicates the unit of measure for the distance.
             * @enum {string}
             */
            units?: "KM" | "MI";
            /**
             * Format: double
             * @description Specifies the distance value.<br>Example: 3.5
             */
            value?: number;
        };
        SearchLocationConstraints: {
            /** @description Specify the information to be included in the location results. */
            locationContentOptions?: ("HOLIDAYS" | "LOCATION_DROPOFF_TIMES" | "TIMEZONE_OFFSET")[];
            /**
             * Format: HH:MM:SS
             * @description Specify the preferred drop-off time for a package. This filters the results with locations supporting the specified drop-off time. <br> Example: 16:30:00
             * @example 16:30:00
             */
            dropOffTimeNeeded?: string;
            /**
             * @description Filter to exclude locations that are currently unavailable.<br>Valid values: True, False.
             * @example true
             */
            excludeUnavailableLocations?: string;
        };
        Location: {
            address: components["schemas"]["Address"];
            longLat?: components["schemas"]["GeoCode"];
        };
        /**
         * @description Descriptive data for a physical location. May be used as an actual physical address (place to which one could go), or as a container of \"address parts\" which should be handled as a unit (such as a city-state-ZIP combination within the US).
         * @example {
         *       "streetLines": [
         *         "10 FedEx Parkway",
         *         "Suite 302"
         *       ],
         *       "city": "Beverly Hills",
         *       "stateOrProvinceCode": "CA",
         *       "postalCode": "90210",
         *       "countryCode": "US",
         *       "residential": false
         *     }
         */
        Address: {
            /**
             * @description This is a combination of number, street name, etc. <br><i>Note: Streetlines more than 3 will be ignored. Empty lines should not be included.</i><br>Example: [\"10 FedEx Parkway\", \"Suite 302\"]
             * @example [
             *       "10 FedEx Parkway",
             *       "Suite 302"
             *     ]
             */
            streetLines?: string[];
            /**
             * @description This is a placeholder for City Name. <br> City or PostalCode is mandatory when search criteria is ADDRESS or PHONE_NUMBER<br> Example: Beverly Hills
             * @example Beverly Hills
             */
            city?: string;
            /**
             * @description This is a placeholder for State or Province code. <br>Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>Click here to see State/Province Code</a>
             * @example CA
             */
            stateOrProvinceCode?: string;
            /**
             * @description This is placeholder for postal code.<br><i>Note: <ul><li>Postal code is required for postal-aware countries.</li>City or PostalCode is mandatory when search criteria is ADDRESS or PHONE_NUMBER</li></ul></i>Example: 38127<br><br><a onclick='loadDocReference("postalawarecountries")'>Click here to see Postal aware countries</a>
             * @example 90210
             */
            postalCode?: string;
            /**
             * @description This is the Two-letter country code.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>Click here to see Country Codes</a>
             * @example US
             */
            countryCode: string;
            /**
             * @description Indicate whether this address is Residential as opposed to Commercial.<br>Valid Values: True or False.
             * @example false
             */
            residential?: boolean;
            /**
             * @description This is the address verification identifier. <br> Example: MARKET_LAUNCH
             * @example MARKET_LAUNCH
             */
            addressVerificationId?: string;
            /**
             * @description The business residential indicators.
             * @enum {string}
             */
            addressClassification?: "MIXED" | "UNKNOWN" | "BUSINESS" | "RESIDENTIAL";
            /**
             * @description The confidence of business residential classification business residential indicators.
             * @enum {string}
             */
            addressClassificationConfidence?: "POTENTIAL" | "PERMANENT";
        };
        /**
         * @description The ISO6709 geographic coordinates for a specific geographic location, specifically latitude and longitude.
         * @example {
         *       "latitude": 5.637376,
         *       "longitude": 3.61607
         *     }
         */
        GeoCode: {
            /** @description The geo coordinate value that specifies the north-south position of the address.<br>Example: 36.1699° N */
            latitude?: string;
            /** @description The geo coordinate value that specifies the East-West position of the address.<br>Example:115.1398° W */
            longitude?: string;
        };
        /** @description Specifies how the location search results will be sorted in the reply. */
        Sort: {
            /**
             * @description Specify the criteria to sort the location details.
             * @example DISTANCE
             * @enum {string}
             */
            criteria?: "DISTANCE" | "LATEST_EXPRESS_DROPOFF_TIME" | "LATEST_GROUND_DROPOFF_TIME" | "LOCATION_TYPE";
            /**
             * @description Specify the sort order of the location search results, either ascending or descending. Defaults to ascending order.
             * @example ASCENDING
             * @enum {string}
             */
            order?: "ASCENDING" | "DESCENDING";
        };
        /** @description Information uniquely identifying a shipment such as Tracking number, ShipDate, and Tracking number uniqueId. This tracking information helps to return the correct list of locations when REDIRECT_TO_HOLD_AT_LOCATION is requested */
        TrackingInfo: {
            /**
             * @description A unique tracking number identifying a shipment. Used to return locations that are relevant to the shipment.<br> Example: 012345678912
             * @example 789645
             */
            uniqueTrackingId?: string;
            /**
             * @description A tracking number identifying a shipment. Used to return locations that are relevant to the shipment.<br>Example: 123456789012
             * @example 123456789012
             */
            trackingNumber?: string;
            /**
             * @description The date of shipment.<br> Example: 2019-10-13
             * @example 2019-10-13
             */
            shipDate?: string;
        };
        /**
         * @description Location capabilities such as services, day of week, ability to dropoff, pickup shipments, ability to hold shipments for pickup, etc.
         * @example {
         *       "carrierCode": "FDXE",
         *       "serviceType": "PRIORITY_OVERNIGHT",
         *       "transferOfPossessionType": "DROPOFF",
         *       "serviceCategory": "EXPRESS_PARCEL",
         *       "daysOfWeek": [
         *         "MON",
         *         "TUE"
         *       ]
         *     }
         */
        LocationCapabilities: {
            /**
             * @description Indicates the service types supported by the location.<br>Example: PRIORITY_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>Click here to see Service Types</a>
             * @example PRIORITY_OVERNIGHT
             */
            serviceType?: string;
            /**
             * @description Unique code to identify the transporter.
             * @example FDXE
             * @enum {string}
             */
            carrierCode?: "FDXE" | "FDXG";
            /**
             * @description The method by which a package is transferred to the possession of a FedEx location.
             * @example DROPOFF
             * @enum {string}
             */
            transferOfPossessionType?: "DROPOFF" | "HOLD_AT_LOCATION" | "REDIRECT_TO_HOLD_AT_LOCATION";
            /**
             * @description The service category applicable for the capability.
             * @example EXPRESS_PARCEL
             * @enum {string}
             */
            serviceCategory?: "EXPRESS_FREIGHT" | "EXPRESS_PARCEL" | "GROUND_HOME_DELIVERY";
            /**
             * @description The days of the week for which this capability applies.<br>Valid values:<ul><li>MON</li><li>TUE</li><li>WED</li><li>THU</li><li>FRI</li><li>SAT</li><li>SUN</li></ul>
             * @example [MON, TUE ]
             */
            daysOfWeek?: string[];
        };
        /** @example {
         *       "weight": {
         *         "units": "LB",
         *         "value": 150
         *       },
         *       "dimensions": {
         *         "length": 20,
         *         "width": 40,
         *         "units": "IN",
         *         "height": 70
         *       }
         *     } */
        PackageAttribute: {
            /** @description Specify the package weight. */
            weight?: components["schemas"]["Weight"];
            /** @description Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul><i>Note: The maximum/minimum dimension values varies based on the services and the packaging types.</i><br>Refer <a href="https://www.fedex.com/en-us/service-guide.html" target="_blank">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground. */
            dimensions?: components["schemas"]["Dimensions"];
        };
        /**
         * @description These are the package weight details.
         * @example {
         *       "units": "LB",
         *       "value": 10
         *     }
         */
        Weight: {
            /**
             * @description Specify the weighing unit of the package.
             * @example LB
             * @enum {string}
             */
            units?: "KG" | "LB";
            /**
             * Format: double
             * @description This is package weight. Max. Length is 99999.
             * @example 10
             */
            value?: number;
        };
        /**
         * @description Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul><i>Note: The maximum/minimum dimension values varies based on the services and the packaging types.</i><br>Refer <a href="https://www.fedex.com/en-us/service-guide.html" target="_blank">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.
         * @example {
         *       "length": 100,
         *       "width": 50,
         *       "height": 30,
         *       "units": "CM"
         *     }
         */
        Dimensions: {
            /**
             * Format: int32
             * @description Indicate the length of the package. No implied decimal places. Maximum value is 999.<br> Example: 20
             * @example 100
             */
            length?: number;
            /**
             * Format: int32
             * @description Indicate the width of the package. No implied decimal places. Maximum value is 999.<br> Example: 10
             * @example 50
             */
            width?: number;
            /**
             * Format: int32
             * @description Indicate the height of the package. No implied decimal places. Maximum value is 999.<br> Example: 10
             * @example 30
             */
            height?: number;
            /**
             * @description Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul><i>Note: <ul><li>The maximum/minimum dimension values varies based on the services and the packaging types.</i> Refer <a href="https://www.fedex.com/en-us/service-guide.html" target="_blank">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.</li><li>Any value other than CM including blank/null will default to IN.</li></ul>
             * @example CM
             * @enum {string}
             */
            units?: "CM" | "IN";
        };
        /** @description This is a wrapper class for outputVO */
        LoccResponseVO: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helpsyou match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            /** @description This object specifies the location search result details. */
            output?: components["schemas"]["BaseProcessOutputVO"];
        };
        BaseProcessOutputVO: components["schemas"]["LocationSummaryOutputVO"];
        LocationSummaryOutputVO: {
            /**
             * Format: int32
             * @description Indicates the total number of locations that are displayed in the result.<br>Example: 13
             * @example 13
             */
            totalResults?: number;
            /**
             * Format: int32
             * @description Specifies the number of results returned in the reply.<br>Example: 10
             * @example 13
             */
            resultsReturned?: number;
            /** @description The address provided in the request. */
            matchedAddress?: components["schemas"]["Address"];
            /** @description Identifies the geographic coordinates corresponding to the address specified. It is specified in ISO 6709 format.<br> Example: +40.75-074.00 */
            matchedAddressGeoCoord?: components["schemas"]["GeoPositionalCoordinates"];
            /** @description List of FedEx locations meeting the search criteria. */
            locationDetailList?: components["schemas"]["LocationDetail"][];
            /** @description Specifies the alerts. */
            alerts?: components["schemas"]["Alert"][];
            nearestLocation?: components["schemas"]["LocationDetail"];
            latestLocation?: components["schemas"]["LocationDetail"];
            /** @description Indicates the values for ambiguous address details. */
            ambiguousAddress?: components["schemas"]["LocationDetail"][];
            /**
             * @description Indicates whether value for ambigous locations were returned or not. <br>Valid values: True, False.
             * @example false
             */
            ambiguousLocationsReturned?: boolean;
            /**
             * @description Indicates whether value for nearest locations were returned or not. <br>Valid values: True, False.
             * @example false
             */
            nearestLocationReturned?: boolean;
            /**
             * @description Indicates whether value for latest locations were returned or not. <br>Valid values: True, False.
             * @example false
             */
            latestLocationReturned?: boolean;
            /**
             * Format: int32
             * @description Code for locker availability
             * @example 25
             */
            lockerAvailabilityCode?: number;
            /**
             * @description Message for locker availability
             * @example Locker availability lookup is not available. Note: this is decouple state.
             */
            lockerAvailabilityMessage?: string;
            /** @description Based on the locationSearchCriterion value specified, the location element specifies the minimum requirement for address search like postalCode, countryCode, GeoCodes or city.<br><br><i>Note: Country code is REQUIRED for the search.</i> */
            location?: components["schemas"]["Location"];
            /**
             * @description Specify the phone number If the locationSearchCriterion is set to 'PHONE_NUMBER'.The mobile numbers will not return results when set as a criterion. <br> Example: 9015551234
             * @example 9015551234
             */
            phoneNumber?: string;
            /**
             * @description Specify the criterion to be used to return location results when there are multiple matches.<br><br><i>Note: The 'maxResults' value takes precedence over RETURN_ALL value.</i>
             * @example RETURN_ALL
             * @enum {string}
             */
            multipleMatchesAction?: "RETURN_ALL" | "RETURN_ERROR" | "RETURN_FIRST";
            sort?: components["schemas"]["Sort"];
            trackingInfo?: components["schemas"]["TrackingInfo"];
            /**
             * @description Filter to display locations within the same state as the search criteria.<br>Valid values: True, False.
             * @example true
             */
            sameState?: boolean;
            /**
             * @description Filter to display locations within the same country as the search criteria.<br>Valid values: True, False.
             * @example true
             */
            sameCountry?: boolean;
            /**
             * @description Specify the type of service supported by a FedEx location for redirect to hold.<br>Valid values: FEDEX_EXPRESS, FEDEX_GROUND, FEDEX_GROUND_HOME_DELIVERY.
             * @example FEDEX_GROUND
             * @enum {string}
             */
            redirectToHoldType?: "FEDEX_EXPRESS" | "FEDEX_GROUND" | "FEDEX_GROUND_HOME_DELIVERY";
            /**
             * @description Indicates the attributes for the location.
             * @example [
             *       "ACCEPTS_CASH",
             *       "PACK_AND_SHIP"
             *     ]
             */
            locationAttrTypes?: ("ACCEPTS_CASH" | "ALREADY_OPEN" | "COPY_AND_PRINT_SERVICES" | "DANGEROUS_GOODS_SERVICES" | "DIRECT_MAIL_SERVICES" | "LOCATION_IS_IN_AIRPORT" | "NOTARY_SERVICES" | "OBSERVES_DAY_LIGHT_SAVING_TIMES" | "OPEN_TWENTY_FOUR_HOURS" | "PACK_AND_SHIP" | "PACKAGING_SUPPLIES" | "PASSPORT_PHOTO_SERVICES" | "RETURNS_SERVICES" | "SIGNS_AND_BANNERS_SERVICE" | "SONY_PICTURE_STATION" | "DROP_BOX" | "DOMESTIC_SHIPPING_SERVICES" | "INTERNATIONAL_SHIPPING_SERVICES" | "CLEARANCE_SERVICES")[];
            /** @description Specify to filter the locations based on their capabilities. */
            locationCapabilities?: components["schemas"]["LocationCapabilities"][];
            /** @description Any required location supported package constraints to narrow the search.<br>For example, a package weighing more than 151 pounds may not be supported at all location types.  Drop box location would be excluded. */
            packageMaximumLimits?: components["schemas"]["PackageAttribute"][];
            /** @description Results filter which narrows the search to specific types of FedEx Locations. */
            locationTypes?: ("FEDEX_AUTHORIZED_SHIP_CENTER" | "FEDEX_OFFICE" | "FEDEX_SELF_SERVICE_LOCATION" | "FEDEX_ONSITE" | "FEDEX_EXPRESS_STATION" | "FEDEX_SHIPSITE" | "FEDEX_FREIGHT_SERVICE_CENTER" | "FEDEX_HOME_DELIVERY_STATION" | "FEDEX_SMART_POST_HUB")[];
            /**
             * @description Indicates true if the location holiday list is desired in the results; otherwise false <br>Valid values: True, False.
             * @example true
             */
            includeHoliday?: boolean;
            /**
             * @description Specifies the latest time by which you can drop-off a package at a location to process the shipment the same day. This limits the results to locations that support a specific drop-off time. The format is an ISO 8601 string in which only the time portion is used.<br>Example: 16:00:00
             * @example 09:30:00
             */
            dropoffTime?: string;
            /**
             * @description The drop-off service types supported by the specified location.<br>Example: FedEx Ground.
             * @example GROUND
             */
            dropOffServiceType?: string;
            /**
             * @description location search based on searchBy
             * @example searchBy
             */
            searchBy?: string;
            /**
             * @description location content options
             * @example HOLIDAYS
             */
            contentOptions?: string;
            /** @description Unique code to identify the transporter. */
            carrierCodes?: ("FDXE" | "FDXG")[];
            /**
             * @description Get a call. Valid values: True, False.
             * @example false
             */
            getCall?: boolean;
        };
        /**
         * @description The ISO6709GeographicCoordinates for a specific geographic location
         * @example {
         *       "latitude": 5.637376,
         *       "longitude": 3.616076
         *     }
         */
        GeoPositionalCoordinates: {
            /**
             * Format: double
             * @description The geo coordinate value that specifies the north-south position of the address.<br>Example: 36.1699° N
             */
            latitude?: number;
            /**
             * Format: double
             * @description The geo coordinate value that specifies the East-West position of the address.<br>Example: 115.1398° W
             */
            longitude?: number;
        };
        /**
         * @description Details about a specific FedEx location such as services offered, distance, package attributes supported, hours, pickup and drop off times.
         * @example {
         *       "distance": {
         *         "units": "KM",
         *         "value": 3.5
         *       },
         *       "contactAndAddress": {
         *         "address": {
         *           "streetLines": [
         *             "1640 Union Blvd",
         *             "streetLine2"
         *           ],
         *           "city": "Beverly Hills",
         *           "postalCode": "90210",
         *           "countryCode": "US",
         *           "residential": false
         *         },
         *         "displayName": "John Taylor",
         *         "contact": {
         *           "personName": "John Taylor",
         *           "emailAddress": "sample@company.com",
         *           "phoneNumber": "9013575012",
         *           "phoneExtension": 5000,
         *           "companyName": "Fedex",
         *           "faxNumber": "fax number",
         *           "stateTaxId": "state tax identifier",
         *           "fedralTaxId": "federal tax identifier"
         *         },
         *         "addressAncillaryDetail": {
         *           "locationInCity": "Mill Heights",
         *           "suite": "suite",
         *           "adderssVerificationOverrideReason": "MANUAL_OVERRIDE",
         *           "locationInProperty": "back building north",
         *           "addtionalDescriptions": "thru south guard gate",
         *           "department": "R&D",
         *           "roomFloor": 302,
         *           "crossStreet": "First and Main",
         *           "building": "G20",
         *           "apartment": "2b",
         *           "room": "1A"
         *         }
         *       },
         *       "locationId": "COSA",
         *       "storeHours": {
         *         "dayofweek": "TUESDAY",
         *         "operationalHoursType": "OPEN_BY_HOURS",
         *         "operationalHours": [
         *           {
         *             "begins": "08:00:00",
         *             "ends": "17:00:00"
         *           }
         *         ],
         *         "exceptionalHoursType": "CLOSED_ALL_DAY",
         *         "exceptionalHours": [
         *           {
         *             "begins": "08:00:00",
         *             "ends": "17:00:00"
         *           }
         *         ]
         *       },
         *       "carrierDetailList": [
         *         {
         *           "serviceType": "PRIORITY_OVERNIGHT",
         *           "countryRelationshipType": "DOMESTIC",
         *           "carrierCodeType": "FDXE",
         *           "latestDropoffDetails": {
         *             "dayOfWeek": "MONDAY",
         *             "exceptionalTime": "08:30:00",
         *             "exceptionalOverlay": {
         *               "time": "09:00:00",
         *               "type": "WEST_COAST"
         *             },
         *             "operationTime": "08:30:00"
         *           },
         *           "serviceCategory": "EXPRESS_PARCEL"
         *         },
         *         {
         *           "serviceType": "STANDARD_OVERNIGHT",
         *           "countryRelationshipType": "DOMESTIC",
         *           "carrierCodeType": "FDXE",
         *           "latestDropoffDetails": {
         *             "dayOfWeek": "TUESDAY",
         *             "exceptionalTime": "07:00:00",
         *             "exceptionalOverlay": {
         *               "time": "02:00:00",
         *               "type": "WEST_COAST"
         *             },
         *             "operationTime": "06:00:00"
         *           },
         *           "serviceCategory": "EXPRESS_PARCEL"
         *         }
         *       ],
         *       "geoPositionalCoordinates": {
         *         "latitude": 5.637376,
         *         "longitude": 3.61607
         *       },
         *       "locationType": "FEDEX_AUTHORIZED_SHIP_CENTER",
         *       "locationAttributeTypes": [
         *         "ACCEPTS_CASH",
         *         "COPY_AND_PRINT_SERVICES"
         *       ],
         *       "lockerAvailability": false,
         *       "packageMaximumLimits": {
         *         "weight": {
         *           "units": "KG",
         *           "value": 68
         *         },
         *         "dimensions": {
         *           "length": 2,
         *           "width": 4,
         *           "units": "IN",
         *           "height": 7
         *         }
         *       },
         *       "specialInstructions": "Store email: Packagingdeput@telus.net",
         *       "rthservice": "REDIRECT",
         *       "locationCapabilities": [
         *         {
         *           "serviceType": "PRIORITY_OVERNIGHT",
         *           "transferOfPossessionType": "DROP_OFF",
         *           "carrierCode": "FDXE",
         *           "daysOfWeek": [
         *             "MONDAY",
         *             "TUESDAY",
         *             "WEDNESDAY",
         *             "THURSDAY",
         *             "FRIDAY"
         *           ],
         *           "serviceCategory": "GROUND"
         *         },
         *         {
         *           "serviceType": "FEDEX_GROUND",
         *           "transferOfPossessionType": "HOLD_AT_LOCATION",
         *           "carrierCode": "FDXG",
         *           "daysOfWeek": [
         *             "MONDAY",
         *             "TUESDAY",
         *             "WEDNESDAY",
         *             "THURSDAY",
         *             "FRIDAY",
         *             "SATURDAY"
         *           ],
         *           "serviceCategory": "GROUND"
         *         }
         *       ]
         *     }
         */
        LocationDetail: {
            /** @description Specifies value and unit of distance between the FedEx locations and the address specified.<br>Example: 2 KM */
            distance?: components["schemas"]["Distance"];
            contactAndAddress?: components["schemas"]["ContactAndAddress"];
            /**
             * @description This is the FedEx location id for the given location.<br> Example:DXBA
             * @example DXBA
             */
            locationId?: string;
            /** @description Includes the days and times specific to the location */
            storeHours?: components["schemas"]["LocationHours"][];
            /** @description List of FedEx Operating companies (FedEx Carriers) along with different service capabilities available with the location. */
            carrierDetailList?: components["schemas"]["FASTCarrierDetails"][];
            geoPositionalCoordinates?: components["schemas"]["GeoPositionalCoordinates"];
            /**
             * @description The FedEx Location Type.
             * @enum {string}
             */
            locationType?: "FEDEX_AUTHORIZED_SHIP_CENTER" | "FEDEX_OFFICE" | "FEDEX_SELF_SERVICE_LOCATION" | "FEDEX_EXPRESS_STATION" | "FEDEX_STAFFED" | "FEDEX_GROUND_TERMINAL" | "FEDEX_HOME_DELIVERY_STATION" | "FEDEX_ONSITE" | "FEDEX_SHIPSITE" | "FEDEX_FACILITY" | "FEDEX_FREIGHT_SERVICE_CENTER" | "FEDEX_SMART_POST_HUB";
            /** @description Attributes for the location. */
            locationAttributeTypes?: ("ACCEPTS_CASH" | "ALREADY_OPEN" | "COPY_AND_PRINT_SERVICES" | "DANGEROUS_GOODS_SERVICES" | "DIRECT_MAIL_SERVICES" | "EXPRESS_FREIGHT_DROPOFFS" | "EXPRESS_PARCEL_DROPOFFS" | "FEDEX_FREIGHT_DROPOFFS" | "GROUND_DROPOFFS" | "GROUND_HOME_DELIVERY_DROPOFFS" | "LOCATION_IS_IN_AIRPORT" | "NOTARY_SERVICES" | "OBSERVES_DAY_LIGHT_SAVING_TIMES" | "OPEN_TWENTY_FOUR_HOURS" | "PACK_AND_SHIP" | "PACKAGING_SUPPLIES" | "PASSPORT_PHOTO_SERVICES" | "RETURNS_SERVICES" | "SATURDAY_DROPOFFS" | "SIGNS_AND_BANNERS_SERVICE" | "WEEKDAY_EXPRESS_HOLD_AT_LOCATION" | "WEEKDAY_GROUND_HOLD_AT_LOCATION" | "SONY_PICTURE_STATION" | "EXPANDED_OFFICE_SUPPLIES_AND_TECHNOLOGY_PRODUCTS" | "VIDEO_CONFERENCING" | "SATURDAY_EXPRESS_HOLD_AT_LOCATION" | "KIOSK_LOCATION" | "STAFFED_LOCATION" | "SAME_DAY_DROPOFFS" | "SAME_DAY_CITY_DROPOFFS" | "DROP_BOX" | "DOMESTIC_SHIPPING_SERVICES" | "INTERNATIONAL_SHIPPING_SERVICES")[];
            /**
             * @description Indicates if FedEx locker is available at the location.<br> Valid values: True, False.
             * @example true
             */
            lockerAvailability?: boolean;
            /** @description This is the maximum package limits that are supported at the location. */
            packageMaximumLimits?: components["schemas"]["PackageAttribute"];
            /**
             * @description Indicates the special instructions needed to access a location.
             * @example Any Special Instruction
             */
            specialInstructions?: string;
            /**
             * @description Indicates if the location supports RedirectToHold Service.
             * @example RedirectToHoldService
             */
            rthservice?: string;
            locationCapabilities?: components["schemas"]["LocationCapabilities"];
        };
        /**
         * @description The contact and address information for a location.
         * @example {
         *       "address": {
         *         "streetLines": [
         *           "streetLines",
         *           "streetLines"
         *         ],
         *         "city": "Beverly Hills",
         *         "stateOrProvinceCode": "CA",
         *         "postalCode": "90210",
         *         "countryCode": "US",
         *         "residential": false
         *       },
         *       "displayName": "displayName",
         *       "contact": {
         *         "personName": "John Taylor",
         *         "emailAddress": "sample@company.com",
         *         "phoneNumber": "9013575012",
         *         "phoneExtension": 5000,
         *         "companyName": "Fedex",
         *         "faxNumber": "fax number",
         *         "stateTaxId": "state tax identifier",
         *         "fedralTaxId": "federal tax identifier"
         *       }
         *     }
         */
        ContactAndAddress: {
            address?: components["schemas"]["Address"];
            contact?: components["schemas"]["Contact"];
            addressAncillaryDetail?: components["schemas"]["AddressAncillaryDetail"];
        };
        /**
         * @description Indicates the contact details such as Name, Email, PhoneNumber
         * @example {
         *       "personName": "John Taylor",
         *       "emailAddress": "sample@company.com",
         *       "phoneNumber": "1234567890",
         *       "phoneExtension": 1234,
         *       "faxNumber": "1234567890",
         *       "companyName": "Fedex",
         *       "stateTaxId": "11-N-1745",
         *       "fedralTaxId": "11-N-1745"
         *     }
         */
        Contact: {
            /**
             * @description Identifies the contact person's name. Max Length is 70.<br>Example: John Taylor
             * @example John Taylor
             */
            personName?: string;
            /**
             * @description Contact person's email address. Max length is 80.<br>Example: sample@company.com
             * @example sample@company.com
             */
            emailAddress?: string;
            /**
             * @description Contact person's phone number. Max length is 15.<br>Example: 1234567890
             * @example 1234567890
             */
            phoneNumber?: string;
            /**
             * @description Contact person's phone extension. Max length is 6.<br>Example: 91
             * @example 91
             */
            phoneExtension?: string;
            /**
             * @description Contact person's fax number. Max length is 15.<br>Example: 956123
             * @example 956123
             */
            faxNumber?: string;
            /**
             * @description Contact person's company name. Max length is 35.<br>Example: FedEx
             * @example Fedex
             */
            companyName?: string;
            /** @description State TaxID for the contact person.<br>Example: 12345 */
            stateTaxId?: string;
            /** @description Fedral TaxId for the contact person.<br>Example: 11-N-1745 */
            fedralTaxId?: string;
        };
        /** @description Indicate the additional address details for the physical location . */
        AddressAncillaryDetail: {
            /**
             * @description This is the subdivision or community within a city for the given address.<br>Example: Forester subdivision
             * @example Forester subdivision
             */
            locationInCity: string;
            /**
             * @description This is the suite information for the given address.<br>Example: suite 201
             * @example suite 201
             */
            suite?: string;
            /**
             * @description Indicate the reason to override address verification.<br> Valid values:  <ul><li>CUSTOMER_PREFERENCE</li><li>CUSTOMER_PROVIDED_PROOF</li><li>MANUAL_VALIDATION</li></ul>
             * @example CUSTOMER_PREFERENCE, CUSTOMER_PROVIDED_PROOF, MANUAL_VALIDATION
             */
            adderssVerificationOverrideReason?: string;
            /**
             * @description Display name.<br> Example: John
             * @example John
             */
            displayName: string;
            /**
             * @description This is location in a campus, such as exterior building annex A.<br>Example: south west of main office entrance
             * @example south west of main office entrance
             */
            locationInProperty?: string;
            /**
             * @description Specify additional information about the given address.<br>Example: north door
             * @example north door
             */
            addtionalDescriptions?: string;
            /**
             * @description This is the department for the given address.<br>Example: Claims department
             * @example Claims department
             */
            department?: string;
            /**
             * @description This is to specify the room or floor information for the given address.<br>Example: 5th floor
             * @example 5th floor
             */
            roomFloor?: string;
            /**
             * @description This is the cross street information for the given address.<br>Example: Union and Main
             * @example Union and Main
             */
            crossStreet?: string;
            /**
             * @description This is the building information for the given address.<br>Example: Building 300
             * @example Building 300
             */
            building?: string;
            /**
             * @description This is the apartment information for the given address.<br>Example: Apartment 1503
             * @example Apartment 1503
             */
            apartment?: string;
            /**
             * @description This is room specific information for the given address.<br>Example: Room B-23
             * @example Room B-23
             */
            room?: string;
        };
        /**
         * @description Specifies the operational and exceptional hours for a location.
         * @example {
         *       "dayofweek": "SUNDAY",
         *       "operationalHoursType": "CLOSED_ALL_DAY",
         *       "operationalHours": [
         *         {
         *           "begins": "08:00:00",
         *           "ends": "17:00:00"
         *         }
         *       ],
         *       "exceptionalHours": [
         *         {
         *           "begins": "08:00:00",
         *           "ends": "17:00:00"
         *         }
         *       ],
         *       "exceptionalHoursType": "CLOSED_ALL_DAY"
         *     }
         */
        LocationHours: {
            /**
             * @description The day of the week for the location hours.
             * @enum {string}
             */
            dayofweek?: "SUNDAY" | "MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY" | "SATURDAY";
            /**
             * @description Indicates the type of operational hours.
             * @enum {string}
             */
            operationalHoursType?: "CLOSED_ALL_DAY" | "OPEN_ALL_DAY" | "OPEN_BY_HOURS";
            /** @description List of normal operating hours for the location. */
            operationalHours?: components["schemas"]["TimeRange"][];
            /**
             * @description Indicates the type of exceptional hours.
             * @enum {string}
             */
            exceptionalHoursType?: "CLOSED_ALL_DAY" | "OPEN_ALL_DAY" | "OPEN_BY_HOURS";
            /** @description List of operating hours for the location that are an exception from the normal hours of operation. */
            exceptionalHours?: components["schemas"]["TimeRange"][];
        };
        TimeRange: {
            /**
             * @description Start time. <br> Example: 20:00:00
             * @example 20:00:00
             */
            begins?: string;
            /**
             * @description End time. <br> Example: 20:00:00
             * @example 20:00:00
             */
            ends?: string;
        };
        /**
         * @description This is a subset of the transportation carrier's products or services which may have unique characteristics at the location i.e. latest drop-off times for FDXE vs FDXG.
         * @example {
         *       "serviceType": "PRIORITY_OVERNIGHT",
         *       "countryRelationshipType": "DOMESTIC",
         *       "carrierCodeType": "FDXE",
         *       "latestDropoffDetails": {
         *         "dayOfWeek": "MONDAY",
         *         "exceptionalTime": "08:00:00",
         *         "exceptionalOverlay": {
         *           "time": "09:00:00",
         *           "type": "WEST_COAST"
         *         },
         *         "operationTime": "09:00:00"
         *       },
         *       "serviceCategory": "EXPRESS_PARCEL"
         *     }
         */
        FASTCarrierDetails: {
            /** @description Specifies the service type.<br>Example: PRIORITY_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>Click here to see Service Types</a> */
            serviceType?: string;
            /**
             * @description The service category for which this capability applies.
             * @enum {string}
             */
            serviceCategory?: "EXPRESS" | "GROUND" | "EXPRESS_FREIGHT" | "FREIGHT" | "SMARTPOST" | "EXPRESS_PARCEL" | "NULL";
        };
        /** @description Specifies the API alerts. */
        Alert: {
            /** @description Specifies the API alert code. */
            code?: string;
            /**
             * @description Specifies the API alert type.
             * @enum {string}
             */
            alertType?: "NOTE" | "WARNING";
            /** @description Specifies the API alert message. */
            message?: string;
        };
        ErrorResponseVO: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            errors?: components["schemas"]["CXSError"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError: {
            /**
             * @description Indicates the error code.<br>Example: ERROR.LONGLAT.REQUIRED
             * @example ERROR.LONGLAT.REQUIRED
             */
            code?: string;
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: Longitude and Latitude are required. */
            message?: string;
        };
        /** @description List of parameters which indicates the properties of the alert message. */
        Parameter: {
            /** @description Identifies the error option to be applied. */
            value?: string;
            /** @description Indicates the value associated with the key. */
            key?: string;
        };
        ErrorResponseVO401: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError401"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError401: {
            /** @description Indicates the error code.<br>Example: NOT.AUTHORIZED.ERROR */
            code?: string;
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: Access token expired. Please modify your request and try again. */
            message?: unknown;
        };
        ErrorResponseVO403: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError403"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError403: {
            /** @description Indicates the error code.<br>Example: FORBIDDEN.ERROR */
            code?: string;
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: We could not authorize your credentials. Please check your permissions and try again */
            message?: unknown;
        };
        ErrorResponseVO404: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError404"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError404: {
            /** @description Indicates the error code.<br>Example: NOT.FOUND.ERROR */
            code?: string;
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: The resource you requested is no longer available. Please modify your request and try again. */
            message?: unknown;
        };
        ErrorResponseVO500: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            /**
             * @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
             * @example AnyCo_order123456789
             */
            customerTransactionId?: string;
            errors?: components["schemas"]["CXSError500"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError500: {
            /** @description Indicates the error code.<br>Example: INTERNAL.SERVER.ERROR */
            code?: string;
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time. */
            message?: unknown;
        };
        ErrorResponseVO503: {
            /**
             * @description The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
             * @example 624deea6-b709-470c-8c39-4b5511281492
             */
            transactionId?: string;
            errors?: components["schemas"]["CXSError503"][];
        };
        /** @description Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter */
        CXSError503: {
            /** @description Indicates the error code.<br>Example: SERVICE.UNAVAILABLE.ERROR */
            code?: string;
            parameterList?: components["schemas"]["Parameter"][];
            /** @description Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time. */
            message?: unknown;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "Find Location": {
        parameters: {
            query?: never;
            header: {
                /** @description This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. */
                "x-customer-transaction-id"?: string;
                /** @description This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file. */
                "content-type": string;
                /** @description This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a> */
                "x-locale"?: string;
                /** @description This indicates the authorization token for the input request. */
                authorization: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Full_Schema_Find_Location"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoccResponseVO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO401"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO403"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO404"];
                };
            };
            /** @description Failure */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO500"];
                };
            };
            /** @description Service Unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponseVO503"];
                };
            };
        };
    };
}
